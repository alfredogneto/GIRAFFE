#include "FlexibleSECylinder_1_FlexibleTriangularSurface_2.h"

#include "FlexibleSECylinder_1.h"
#include "FlexibleTriangularSurface_2.h"
#include "Dynamic.h"
#include "Matrix.h"
#include "SSContactData.h"

#include "Database.h"
//Variáveis globais
extern
Database db;

#define PI 3.1415926535897932384626433832795

FlexibleSECylinder_1_FlexibleTriangularSurface_2::FlexibleSECylinder_1_FlexibleTriangularSurface_2()
{
	DefaultValues();
}

FlexibleSECylinder_1_FlexibleTriangularSurface_2::~FlexibleSECylinder_1_FlexibleTriangularSurface_2()
{
	Free();
}

//Chute inicial para coordenadas convectivas do par de superfícies
void FlexibleSECylinder_1_FlexibleTriangularSurface_2::InitialGuess(SSContactData* c_data)
{
	c_data->convective[0][0] = 0.0;
	c_data->convective[0][1] = 0.0;
	c_data->convective[0][2] = 0.0;
	c_data->convective[0][3] = 0.0;

	for (int ip = 1; ip < c_data->n_solutions; ip++)
	{
		//Preenchendo as coordenadas convectivas:
		c_data->convective[ip][0] = c_data->convective[0][0];
		c_data->convective[ip][1] = c_data->convective[0][1];
		c_data->convective[ip][2] = c_data->convective[0][2];
		c_data->convective[ip][3] = c_data->convective[0][3];
	}
}

//Verifica range de coordenadas convectivas
int FlexibleSECylinder_1_FlexibleTriangularSurface_2::VerifyConvectiveRange(Matrix& mc)
{
	int return_value = -1;
	//Retornos:
	//0 - Range fisico da superficie
	//4 - Fora do range fisico da superficie - proximo
	//2 - Fora do range fisico da superficie - distante

	//Se está no range local de interesse - domínio físico da superfície triangular e da viga
	if (abs(mc(2, 0)) <= 1.0 && abs(mc(3, 0)) <= 1.0 && mc(3, 0) <= -mc(2, 0) && abs(mc(0, 0)) <= 1.0)
		return_value = 0;
	else
	{
		//Teste de proximidade
		if (abs(mc(2, 0)) <= (1.0 + perc * 2) && abs(mc(3, 0)) <= (1.0 + perc * 2) && mc(3, 0) <= -mc(2, 0) + perc * 2 && abs(mc(0, 0)) <= (1.00 + perc * 2))
			return_value = 4;
		else
			return_value = 2;
	}

	return return_value;
}

//Initialize range of validity of convective coordinates
void FlexibleSECylinder_1_FlexibleTriangularSurface_2::InitializeConvectiveRange()
{
	FlexibleSECylinder_1* surf1;		//Ponteiro para a superfície 1
	FlexibleTriangularSurface_2* surf2;		//Ponteiro para a superfície 2
	surf1 = static_cast<FlexibleSECylinder_1*>(db.surfaces[surf1_ID - 1]);
	surf2 = static_cast<FlexibleTriangularSurface_2*>(db.surfaces[surf2_ID - 1]);

	convective_min(0, 0) = -1;
	convective_max(0, 0) = +1;
	//Degeneration
	if (surf1->degeneration[0] == true)
	{
		convective_range(0, 0) = 0.0;
	}
	//No degeneration
	else
	{
		convective_range(0, 0) = 2;
		
	}

	convective_min(1, 0) = 0;
	convective_max(1, 0) = 2 * PI;
	//Degeneration
	if (surf1->degeneration[1] == true)
	{
		convective_range(1, 0) = 0.0;
		
	}
	//No degeneration
	else
	{
		convective_range(1, 0) = 2 * PI;
		
	}

	convective_min(2, 0) = -1;
	convective_max(2, 0) = +1;
	//Degeneration
	if (surf2->degeneration[0] == true)
	{
		convective_range(2, 0) = 0.0;
		
	}
	//No degeneration
	else
	{
		convective_range(2, 0) = 2;
		
	}

	convective_min(3, 0) = -1;
	convective_max(3, 0) = 1;
	//Degeneration
	if (surf2->degeneration[1] == true)
	{
		convective_range(3, 0) = 0.0;
		
	}
	//No degeneration
	else
	{
		convective_range(3, 0) = 2;
		
	}

}

//Evaluates the necessary DOFs variables to be used as input to AceGen routines
void FlexibleSECylinder_1_FlexibleTriangularSurface_2::EvaluateDOFsVariables()
{
	//Initialization of local variables
	surf1 = static_cast<FlexibleSECylinder_1*>(db.surfaces[surf1_ID - 1]);
	aA = &surf1->a;
	bA = &surf1->b;
	eA = &surf1->e;
	dA = surf1->d_A->getMatrix();
	duiA = surf1->dui_A->getMatrix();
	dduiA = surf1->ddui_A->getMatrix();
	xAAi = surf1->x_AAi->getMatrix();
	xBAi = surf1->x_BAi->getMatrix();
	normalintA = &surf1->flag_normal_int;
	
	for (int i = 0; i < 3; i++)
	{
		for (int j = 0; j < 3; j++)
		{
			QAAi[i][j] = (*surf1->Q_AAi)(i, j);
			QBAi[i][j] = (*surf1->Q_BAi)(i, j);
		}
	}
	surf2 = static_cast<FlexibleTriangularSurface_2*>(db.surfaces[surf2_ID - 1]);
	
	dB = surf2->d_A->getMatrix();
	duiB = surf2->dui_A->getMatrix();
	dduiB = surf2->ddui_A->getMatrix();
	xAi = surf2->xA_i->getMatrix();
	xBi = surf2->xB_i->getMatrix();
	xCi = surf2->xC_i->getMatrix();
	xDi = surf2->xD_i->getMatrix();
	xEi = surf2->xE_i->getMatrix();
	xFi = surf2->xF_i->getMatrix();

}

void FlexibleSECylinder_1_FlexibleTriangularSurface_2::ContactSS(bool *stick, bool *stickupdated, bool *previouscontact, double* Rc, double** Kc, double** invH, double* convective, double* copy_convective, double* gti, double* gtpupdated, double* epsn, double* epsn0, double* epst, double* cn, double* ct, double* mus, double* mud, double* fn, double* ft)
{
	double value = 0.0;
	double* a4;
	double* a5;
	double* a6;
	if (typeid(*db.solution[db.current_solution_number - 1]) == typeid(Dynamic))
	{
		Dynamic* ptr_sol = static_cast<Dynamic*>(db.solution[db.current_solution_number - 1]);
		a4 = &ptr_sol->a4;
		a5 = &ptr_sol->a5;
		a6 = &ptr_sol->a6;
	}
	else
	{
		a4 = &value;
		a5 = &value;
		a6 = &value;
	}
	for (int i = 0; i < 30; i++)
	{
		Rc[i] = 0.0;
		for (int j = 0; j < 30; j++)
			Kc[i][j] = 0.0;
	}
	double* ci = copy_convective;
	double* cp = convective;
	EvaluateDOFsVariables();
	double v[30000];		

#pragma region AceGen
	double v01; double v010; double v011; double v012; double v013; double v014;
	double v015; double v016; double v017; double v018; double v019; double v02;
	double v020; double v021; double v022; double v023; double v024; double v025;
	double v026; double v027; double v03; double v04; double v05; double v06; double v07;
	double v08; double v09;
	int i1238, i1310, i1640, i1946, i2931, i2997, i3453, i3454, i3455, i3456, i3457, i3458
		, i3523, i3524, i3525, i3526, i3527, i3528, i3533, i3534, i3535, i3536, i3537, i3538, i3539
		, i3540, i3541, i3542, i3543, i3544, i3545, i3546, i3547, i3548, i3549, i3550, i3559, i3560
		, i3561, i3562, i3563, i3564, i3723, i3724, i3725, i3726, i3727, i3728, b1016, b1017, b1049
		, b1167, b1168, b1169, b1185, b1202, b1203, b1215, b1516, b1645, b1646, b1647, b1688, b1737
		, b2238, b2283, b2354, b2355, b2372, b2593, b2630;
	v[3475] = -((*a4)*(*ct));
	v[1518] = cos(cp[1]);
	v[3444] = (*aA)*v[1518];
	v[1140] = sin(cp[1]);
	v[3348] = (*bA)*v[1140];
	v[1141] = _copysign(1.e0, v[1140]);
	v[1142] = v[1141] * v[1518];
	v[440] = fabs(v[1140]);
	v[1143] = _copysign(1.e0, v[1518]);
	v[1144] = -(v[1140] * v[1143]);
	v[438] = fabs(v[1518]);
	v[465] = -1e0 - cp[2];
	v[456] = 0.5e0 + cp[2];
	v[454] = 2e0*cp[2];
	v[3015] = 1e0 + v[454];
	v[308] = Power(cp[2], 2);
	v[3351] = (cp[2] + v[308]) / 2e0;
	v[464] = 0.5e0 + cp[3];
	v[463] = 2e0*cp[3];
	v[3012] = 1e0 + v[463];
	v[466] = -v[463] + v[465];
	v[458] = 1e0 + cp[3];
	v[457] = -1e0 - cp[3] - v[454];
	v[455] = 0.5e0 + cp[2] + cp[3];
	v[312] = Power(cp[3], 2);
	v[309] = cp[2] * cp[3];
	v[3352] = (cp[3] + v[312]) / 2e0;
	v[253] = sin(ci[1]);
	v[251] = cos(ci[1]);
	v[295] = Power(ci[2], 2);
	v[3349] = (ci[2] + v[295]) / 2e0;
	v[299] = Power(ci[3], 2);
	v[296] = ci[2] * ci[3];
	v[3350] = (ci[3] + v[299]) / 2e0;
	v[1087] = 2e0*dA[3];
	v[1083] = dA[3] / 2e0;
	v[191] = Power(dA[3], 2);
	v[1086] = 2e0*dA[4];
	v[5245] = 0e0;
	v[5246] = 0e0;
	v[5247] = 0e0;
	v[5248] = -v[1087];
	v[5249] = -v[1086];
	v[5250] = 0e0;
	v[5251] = 0e0;
	v[5252] = 0e0;
	v[5253] = 0e0;
	v[5254] = 0e0;
	v[5255] = 0e0;
	v[5256] = 0e0;
	v[5257] = 0e0;
	v[5258] = 0e0;
	v[5259] = 0e0;
	v[5260] = 0e0;
	v[5261] = 0e0;
	v[5262] = 0e0;
	v[5263] = 0e0;
	v[5264] = 0e0;
	v[5265] = 0e0;
	v[5266] = 0e0;
	v[5267] = 0e0;
	v[5268] = 0e0;
	v[5269] = 0e0;
	v[5270] = 0e0;
	v[5271] = 0e0;
	v[5272] = 0e0;
	v[5273] = 0e0;
	v[5274] = 0e0;
	v[1085] = dA[4] / 2e0;
	v[4795] = 0e0;
	v[4796] = 0e0;
	v[4797] = 0e0;
	v[4798] = -v[1085];
	v[4799] = -v[1083];
	v[4800] = 0e0;
	v[4801] = 0e0;
	v[4802] = 0e0;
	v[4803] = 0e0;
	v[4804] = 0e0;
	v[4805] = 0e0;
	v[4806] = 0e0;
	v[4807] = 0e0;
	v[4808] = 0e0;
	v[4809] = 0e0;
	v[4810] = 0e0;
	v[4811] = 0e0;
	v[4812] = 0e0;
	v[4813] = 0e0;
	v[4814] = 0e0;
	v[4815] = 0e0;
	v[4816] = 0e0;
	v[4817] = 0e0;
	v[4818] = 0e0;
	v[4819] = 0e0;
	v[4820] = 0e0;
	v[4821] = 0e0;
	v[4822] = 0e0;
	v[4823] = 0e0;
	v[4824] = 0e0;
	v[6153] = 0e0;
	v[6154] = 0e0;
	v[6155] = 0e0;
	v[6156] = v[1085];
	v[6157] = v[1083];
	v[6158] = 0e0;
	v[6159] = 0e0;
	v[6160] = 0e0;
	v[6161] = 0e0;
	v[6162] = 0e0;
	v[6163] = 0e0;
	v[6164] = 0e0;
	v[6165] = 0e0;
	v[6166] = 0e0;
	v[6167] = 0e0;
	v[6168] = 0e0;
	v[6169] = 0e0;
	v[6170] = 0e0;
	v[6171] = 0e0;
	v[6172] = 0e0;
	v[6173] = 0e0;
	v[6174] = 0e0;
	v[6175] = 0e0;
	v[6176] = 0e0;
	v[6177] = 0e0;
	v[6178] = 0e0;
	v[6179] = 0e0;
	v[6180] = 0e0;
	v[6181] = 0e0;
	v[6182] = 0e0;
	v[189] = (dA[3] * dA[4]) / 2e0;
	v[184] = Power(dA[4], 2);
	v[652] = -v[184] - v[191];
	v[1084] = dA[5] / 2e0;
	v[4855] = 0e0;
	v[4856] = 0e0;
	v[4857] = 0e0;
	v[4858] = 0e0;
	v[4859] = -v[1084];
	v[4860] = -v[1085];
	v[4861] = 0e0;
	v[4862] = 0e0;
	v[4863] = 0e0;
	v[4864] = 0e0;
	v[4865] = 0e0;
	v[4866] = 0e0;
	v[4867] = 0e0;
	v[4868] = 0e0;
	v[4869] = 0e0;
	v[4870] = 0e0;
	v[4871] = 0e0;
	v[4872] = 0e0;
	v[4873] = 0e0;
	v[4874] = 0e0;
	v[4875] = 0e0;
	v[4876] = 0e0;
	v[4877] = 0e0;
	v[4878] = 0e0;
	v[4879] = 0e0;
	v[4880] = 0e0;
	v[4881] = 0e0;
	v[4882] = 0e0;
	v[4883] = 0e0;
	v[4884] = 0e0;
	v[4825] = 0e0;
	v[4826] = 0e0;
	v[4827] = 0e0;
	v[4828] = -v[1084];
	v[4829] = 0e0;
	v[4830] = -v[1083];
	v[4831] = 0e0;
	v[4832] = 0e0;
	v[4833] = 0e0;
	v[4834] = 0e0;
	v[4835] = 0e0;
	v[4836] = 0e0;
	v[4837] = 0e0;
	v[4838] = 0e0;
	v[4839] = 0e0;
	v[4840] = 0e0;
	v[4841] = 0e0;
	v[4842] = 0e0;
	v[4843] = 0e0;
	v[4844] = 0e0;
	v[4845] = 0e0;
	v[4846] = 0e0;
	v[4847] = 0e0;
	v[4848] = 0e0;
	v[4849] = 0e0;
	v[4850] = 0e0;
	v[4851] = 0e0;
	v[4852] = 0e0;
	v[4853] = 0e0;
	v[4854] = 0e0;
	v[6213] = 0e0;
	v[6214] = 0e0;
	v[6215] = 0e0;
	v[6216] = v[1084];
	v[6217] = 0e0;
	v[6218] = v[1083];
	v[6219] = 0e0;
	v[6220] = 0e0;
	v[6221] = 0e0;
	v[6222] = 0e0;
	v[6223] = 0e0;
	v[6224] = 0e0;
	v[6225] = 0e0;
	v[6226] = 0e0;
	v[6227] = 0e0;
	v[6228] = 0e0;
	v[6229] = 0e0;
	v[6230] = 0e0;
	v[6231] = 0e0;
	v[6232] = 0e0;
	v[6233] = 0e0;
	v[6234] = 0e0;
	v[6235] = 0e0;
	v[6236] = 0e0;
	v[6237] = 0e0;
	v[6238] = 0e0;
	v[6239] = 0e0;
	v[6240] = 0e0;
	v[6241] = 0e0;
	v[6242] = 0e0;
	v[6183] = 0e0;
	v[6184] = 0e0;
	v[6185] = 0e0;
	v[6186] = 0e0;
	v[6187] = v[1084];
	v[6188] = v[1085];
	v[6189] = 0e0;
	v[6190] = 0e0;
	v[6191] = 0e0;
	v[6192] = 0e0;
	v[6193] = 0e0;
	v[6194] = 0e0;
	v[6195] = 0e0;
	v[6196] = 0e0;
	v[6197] = 0e0;
	v[6198] = 0e0;
	v[6199] = 0e0;
	v[6200] = 0e0;
	v[6201] = 0e0;
	v[6202] = 0e0;
	v[6203] = 0e0;
	v[6204] = 0e0;
	v[6205] = 0e0;
	v[6206] = 0e0;
	v[6207] = 0e0;
	v[6208] = 0e0;
	v[6209] = 0e0;
	v[6210] = 0e0;
	v[6211] = 0e0;
	v[6212] = 0e0;
	v[1082] = 2e0*dA[5];
	v[4765] = 0e0;
	v[4766] = 0e0;
	v[4767] = 0e0;
	v[4768] = -v[1087];
	v[4769] = -v[1086];
	v[4770] = -v[1082];
	v[4771] = 0e0;
	v[4772] = 0e0;
	v[4773] = 0e0;
	v[4774] = 0e0;
	v[4775] = 0e0;
	v[4776] = 0e0;
	v[4777] = 0e0;
	v[4778] = 0e0;
	v[4779] = 0e0;
	v[4780] = 0e0;
	v[4781] = 0e0;
	v[4782] = 0e0;
	v[4783] = 0e0;
	v[4784] = 0e0;
	v[4785] = 0e0;
	v[4786] = 0e0;
	v[4787] = 0e0;
	v[4788] = 0e0;
	v[4789] = 0e0;
	v[4790] = 0e0;
	v[4791] = 0e0;
	v[4792] = 0e0;
	v[4793] = 0e0;
	v[4794] = 0e0;
	v[6333] = 0e0;
	v[6334] = 0e0;
	v[6335] = 0e0;
	v[6336] = v[1087];
	v[6337] = v[1086];
	v[6338] = v[1082];
	v[6339] = 0e0;
	v[6340] = 0e0;
	v[6341] = 0e0;
	v[6342] = 0e0;
	v[6343] = 0e0;
	v[6344] = 0e0;
	v[6345] = 0e0;
	v[6346] = 0e0;
	v[6347] = 0e0;
	v[6348] = 0e0;
	v[6349] = 0e0;
	v[6350] = 0e0;
	v[6351] = 0e0;
	v[6352] = 0e0;
	v[6353] = 0e0;
	v[6354] = 0e0;
	v[6355] = 0e0;
	v[6356] = 0e0;
	v[6357] = 0e0;
	v[6358] = 0e0;
	v[6359] = 0e0;
	v[6360] = 0e0;
	v[6361] = 0e0;
	v[6362] = 0e0;
	v[5125] = 0e0;
	v[5126] = 0e0;
	v[5127] = 0e0;
	v[5128] = -v[1087];
	v[5129] = 0e0;
	v[5130] = -v[1082];
	v[5131] = 0e0;
	v[5132] = 0e0;
	v[5133] = 0e0;
	v[5134] = 0e0;
	v[5135] = 0e0;
	v[5136] = 0e0;
	v[5137] = 0e0;
	v[5138] = 0e0;
	v[5139] = 0e0;
	v[5140] = 0e0;
	v[5141] = 0e0;
	v[5142] = 0e0;
	v[5143] = 0e0;
	v[5144] = 0e0;
	v[5145] = 0e0;
	v[5146] = 0e0;
	v[5147] = 0e0;
	v[5148] = 0e0;
	v[5149] = 0e0;
	v[5150] = 0e0;
	v[5151] = 0e0;
	v[5152] = 0e0;
	v[5153] = 0e0;
	v[5154] = 0e0;
	v[5005] = 0e0;
	v[5006] = 0e0;
	v[5007] = 0e0;
	v[5008] = 0e0;
	v[5009] = -v[1086];
	v[5010] = -v[1082];
	v[5011] = 0e0;
	v[5012] = 0e0;
	v[5013] = 0e0;
	v[5014] = 0e0;
	v[5015] = 0e0;
	v[5016] = 0e0;
	v[5017] = 0e0;
	v[5018] = 0e0;
	v[5019] = 0e0;
	v[5020] = 0e0;
	v[5021] = 0e0;
	v[5022] = 0e0;
	v[5023] = 0e0;
	v[5024] = 0e0;
	v[5025] = 0e0;
	v[5026] = 0e0;
	v[5027] = 0e0;
	v[5028] = 0e0;
	v[5029] = 0e0;
	v[5030] = 0e0;
	v[5031] = 0e0;
	v[5032] = 0e0;
	v[5033] = 0e0;
	v[5034] = 0e0;
	v[670] = -dA[5] + v[189];
	v[664] = dA[5] + v[189];
	v[196] = (dA[4] * dA[5]) / 2e0;
	v[657] = -dA[3] + v[196];
	v[655] = dA[3] + v[196];
	v[194] = (dA[3] * dA[5]) / 2e0;
	v[665] = dA[4] + v[194];
	v[656] = -dA[4] + v[194];
	v[185] = Power(dA[5], 2);
	v[681] = 4e0 + v[184] + v[185] + v[191];
	v[2882] = 1e0 / Power(v[681], 3);
	v[1290] = 1e0 / Power(v[681], 2);
	v[1075] = -4e0*v[1290];
	v[675] = -v[184] - v[185];
	v[3048] = -2e0*v[1290] * v[675];
	v[662] = -v[185] - v[191];
	v[1081] = 2e0*dA[9];
	v[1077] = dA[9] / 2e0;
	v[210] = Power(dA[9], 2);
	v[1080] = 2e0*dA[10];
	v[5515] = 0e0;
	v[5516] = 0e0;
	v[5517] = 0e0;
	v[5518] = 0e0;
	v[5519] = 0e0;
	v[5520] = 0e0;
	v[5521] = 0e0;
	v[5522] = 0e0;
	v[5523] = 0e0;
	v[5524] = -v[1081];
	v[5525] = -v[1080];
	v[5526] = 0e0;
	v[5527] = 0e0;
	v[5528] = 0e0;
	v[5529] = 0e0;
	v[5530] = 0e0;
	v[5531] = 0e0;
	v[5532] = 0e0;
	v[5533] = 0e0;
	v[5534] = 0e0;
	v[5535] = 0e0;
	v[5536] = 0e0;
	v[5537] = 0e0;
	v[5538] = 0e0;
	v[5539] = 0e0;
	v[5540] = 0e0;
	v[5541] = 0e0;
	v[5542] = 0e0;
	v[5543] = 0e0;
	v[5544] = 0e0;
	v[1079] = dA[10] / 2e0;
	v[4915] = 0e0;
	v[4916] = 0e0;
	v[4917] = 0e0;
	v[4918] = 0e0;
	v[4919] = 0e0;
	v[4920] = 0e0;
	v[4921] = 0e0;
	v[4922] = 0e0;
	v[4923] = 0e0;
	v[4924] = -v[1079];
	v[4925] = -v[1077];
	v[4926] = 0e0;
	v[4927] = 0e0;
	v[4928] = 0e0;
	v[4929] = 0e0;
	v[4930] = 0e0;
	v[4931] = 0e0;
	v[4932] = 0e0;
	v[4933] = 0e0;
	v[4934] = 0e0;
	v[4935] = 0e0;
	v[4936] = 0e0;
	v[4937] = 0e0;
	v[4938] = 0e0;
	v[4939] = 0e0;
	v[4940] = 0e0;
	v[4941] = 0e0;
	v[4942] = 0e0;
	v[4943] = 0e0;
	v[4944] = 0e0;
	v[6243] = 0e0;
	v[6244] = 0e0;
	v[6245] = 0e0;
	v[6246] = 0e0;
	v[6247] = 0e0;
	v[6248] = 0e0;
	v[6249] = 0e0;
	v[6250] = 0e0;
	v[6251] = 0e0;
	v[6252] = v[1079];
	v[6253] = v[1077];
	v[6254] = 0e0;
	v[6255] = 0e0;
	v[6256] = 0e0;
	v[6257] = 0e0;
	v[6258] = 0e0;
	v[6259] = 0e0;
	v[6260] = 0e0;
	v[6261] = 0e0;
	v[6262] = 0e0;
	v[6263] = 0e0;
	v[6264] = 0e0;
	v[6265] = 0e0;
	v[6266] = 0e0;
	v[6267] = 0e0;
	v[6268] = 0e0;
	v[6269] = 0e0;
	v[6270] = 0e0;
	v[6271] = 0e0;
	v[6272] = 0e0;
	v[208] = (dA[10] * dA[9]) / 2e0;
	v[203] = Power(dA[10], 2);
	v[621] = -v[203] - v[210];
	v[1078] = dA[11] / 2e0;
	v[4975] = 0e0;
	v[4976] = 0e0;
	v[4977] = 0e0;
	v[4978] = 0e0;
	v[4979] = 0e0;
	v[4980] = 0e0;
	v[4981] = 0e0;
	v[4982] = 0e0;
	v[4983] = 0e0;
	v[4984] = 0e0;
	v[4985] = -v[1078];
	v[4986] = -v[1079];
	v[4987] = 0e0;
	v[4988] = 0e0;
	v[4989] = 0e0;
	v[4990] = 0e0;
	v[4991] = 0e0;
	v[4992] = 0e0;
	v[4993] = 0e0;
	v[4994] = 0e0;
	v[4995] = 0e0;
	v[4996] = 0e0;
	v[4997] = 0e0;
	v[4998] = 0e0;
	v[4999] = 0e0;
	v[5000] = 0e0;
	v[5001] = 0e0;
	v[5002] = 0e0;
	v[5003] = 0e0;
	v[5004] = 0e0;
	v[4945] = 0e0;
	v[4946] = 0e0;
	v[4947] = 0e0;
	v[4948] = 0e0;
	v[4949] = 0e0;
	v[4950] = 0e0;
	v[4951] = 0e0;
	v[4952] = 0e0;
	v[4953] = 0e0;
	v[4954] = -v[1078];
	v[4955] = 0e0;
	v[4956] = -v[1077];
	v[4957] = 0e0;
	v[4958] = 0e0;
	v[4959] = 0e0;
	v[4960] = 0e0;
	v[4961] = 0e0;
	v[4962] = 0e0;
	v[4963] = 0e0;
	v[4964] = 0e0;
	v[4965] = 0e0;
	v[4966] = 0e0;
	v[4967] = 0e0;
	v[4968] = 0e0;
	v[4969] = 0e0;
	v[4970] = 0e0;
	v[4971] = 0e0;
	v[4972] = 0e0;
	v[4973] = 0e0;
	v[4974] = 0e0;
	v[6303] = 0e0;
	v[6304] = 0e0;
	v[6305] = 0e0;
	v[6306] = 0e0;
	v[6307] = 0e0;
	v[6308] = 0e0;
	v[6309] = 0e0;
	v[6310] = 0e0;
	v[6311] = 0e0;
	v[6312] = v[1078];
	v[6313] = 0e0;
	v[6314] = v[1077];
	v[6315] = 0e0;
	v[6316] = 0e0;
	v[6317] = 0e0;
	v[6318] = 0e0;
	v[6319] = 0e0;
	v[6320] = 0e0;
	v[6321] = 0e0;
	v[6322] = 0e0;
	v[6323] = 0e0;
	v[6324] = 0e0;
	v[6325] = 0e0;
	v[6326] = 0e0;
	v[6327] = 0e0;
	v[6328] = 0e0;
	v[6329] = 0e0;
	v[6330] = 0e0;
	v[6331] = 0e0;
	v[6332] = 0e0;
	v[6273] = 0e0;
	v[6274] = 0e0;
	v[6275] = 0e0;
	v[6276] = 0e0;
	v[6277] = 0e0;
	v[6278] = 0e0;
	v[6279] = 0e0;
	v[6280] = 0e0;
	v[6281] = 0e0;
	v[6282] = 0e0;
	v[6283] = v[1078];
	v[6284] = v[1079];
	v[6285] = 0e0;
	v[6286] = 0e0;
	v[6287] = 0e0;
	v[6288] = 0e0;
	v[6289] = 0e0;
	v[6290] = 0e0;
	v[6291] = 0e0;
	v[6292] = 0e0;
	v[6293] = 0e0;
	v[6294] = 0e0;
	v[6295] = 0e0;
	v[6296] = 0e0;
	v[6297] = 0e0;
	v[6298] = 0e0;
	v[6299] = 0e0;
	v[6300] = 0e0;
	v[6301] = 0e0;
	v[6302] = 0e0;
	v[1076] = 2e0*dA[11];
	v[4885] = 0e0;
	v[4886] = 0e0;
	v[4887] = 0e0;
	v[4888] = 0e0;
	v[4889] = 0e0;
	v[4890] = 0e0;
	v[4891] = 0e0;
	v[4892] = 0e0;
	v[4893] = 0e0;
	v[4894] = -v[1081];
	v[4895] = -v[1080];
	v[4896] = -v[1076];
	v[4897] = 0e0;
	v[4898] = 0e0;
	v[4899] = 0e0;
	v[4900] = 0e0;
	v[4901] = 0e0;
	v[4902] = 0e0;
	v[4903] = 0e0;
	v[4904] = 0e0;
	v[4905] = 0e0;
	v[4906] = 0e0;
	v[4907] = 0e0;
	v[4908] = 0e0;
	v[4909] = 0e0;
	v[4910] = 0e0;
	v[4911] = 0e0;
	v[4912] = 0e0;
	v[4913] = 0e0;
	v[4914] = 0e0;
	v[6453] = 0e0;
	v[6454] = 0e0;
	v[6455] = 0e0;
	v[6456] = 0e0;
	v[6457] = 0e0;
	v[6458] = 0e0;
	v[6459] = 0e0;
	v[6460] = 0e0;
	v[6461] = 0e0;
	v[6462] = v[1081];
	v[6463] = v[1080];
	v[6464] = v[1076];
	v[6465] = 0e0;
	v[6466] = 0e0;
	v[6467] = 0e0;
	v[6468] = 0e0;
	v[6469] = 0e0;
	v[6470] = 0e0;
	v[6471] = 0e0;
	v[6472] = 0e0;
	v[6473] = 0e0;
	v[6474] = 0e0;
	v[6475] = 0e0;
	v[6476] = 0e0;
	v[6477] = 0e0;
	v[6478] = 0e0;
	v[6479] = 0e0;
	v[6480] = 0e0;
	v[6481] = 0e0;
	v[6482] = 0e0;
	v[5395] = 0e0;
	v[5396] = 0e0;
	v[5397] = 0e0;
	v[5398] = 0e0;
	v[5399] = 0e0;
	v[5400] = 0e0;
	v[5401] = 0e0;
	v[5402] = 0e0;
	v[5403] = 0e0;
	v[5404] = -v[1081];
	v[5405] = 0e0;
	v[5406] = -v[1076];
	v[5407] = 0e0;
	v[5408] = 0e0;
	v[5409] = 0e0;
	v[5410] = 0e0;
	v[5411] = 0e0;
	v[5412] = 0e0;
	v[5413] = 0e0;
	v[5414] = 0e0;
	v[5415] = 0e0;
	v[5416] = 0e0;
	v[5417] = 0e0;
	v[5418] = 0e0;
	v[5419] = 0e0;
	v[5420] = 0e0;
	v[5421] = 0e0;
	v[5422] = 0e0;
	v[5423] = 0e0;
	v[5424] = 0e0;
	v[5275] = 0e0;
	v[5276] = 0e0;
	v[5277] = 0e0;
	v[5278] = 0e0;
	v[5279] = 0e0;
	v[5280] = 0e0;
	v[5281] = 0e0;
	v[5282] = 0e0;
	v[5283] = 0e0;
	v[5284] = 0e0;
	v[5285] = -v[1080];
	v[5286] = -v[1076];
	v[5287] = 0e0;
	v[5288] = 0e0;
	v[5289] = 0e0;
	v[5290] = 0e0;
	v[5291] = 0e0;
	v[5292] = 0e0;
	v[5293] = 0e0;
	v[5294] = 0e0;
	v[5295] = 0e0;
	v[5296] = 0e0;
	v[5297] = 0e0;
	v[5298] = 0e0;
	v[5299] = 0e0;
	v[5300] = 0e0;
	v[5301] = 0e0;
	v[5302] = 0e0;
	v[5303] = 0e0;
	v[5304] = 0e0;
	v[639] = -dA[11] + v[208];
	v[633] = dA[11] + v[208];
	v[215] = (dA[10] * dA[11]) / 2e0;
	v[626] = -dA[9] + v[215];
	v[624] = dA[9] + v[215];
	v[213] = (dA[11] * dA[9]) / 2e0;
	v[634] = dA[10] + v[213];
	v[625] = -dA[10] + v[213];
	v[204] = Power(dA[11], 2);
	v[650] = 4e0 + v[203] + v[204] + v[210];
	v[2860] = 1e0 / Power(v[650], 3);
	v[1301] = 1e0 / Power(v[650], 2);
	v[1068] = -4e0*v[1301];
	v[644] = -v[203] - v[204];
	v[3059] = -2e0*v[1301] * v[644];
	v[631] = -v[204] - v[210];
	v[353] = (*a4)*dA[3] + (*a6)*dduiA[3] + (*a5)*duiA[3];
	v[359] = (*a4)*dA[4] + (*a6)*dduiA[4] + (*a5)*duiA[4];
	v[361] = (*a4)*dA[5] + (*a6)*dduiA[5] + (*a5)*duiA[5];
	v[379] = (*a4)*dA[9] + (*a6)*dduiA[9] + (*a5)*duiA[9];
	v[385] = (*a4)*dA[10] + (*a6)*dduiA[10] + (*a5)*duiA[10];
	v[387] = (*a4)*dA[11] + (*a6)*dduiA[11] + (*a5)*duiA[11];
	v[183] = 4e0 / v[681];
	v[350] = (v[183] * v[183]);
	v[3963] = 1e0 / Power(v[350], 3);
	v[3642] = QAAi[2][0] * v[350];
	v[3641] = QAAi[2][1] * v[350];
	v[3340] = v[361] / v[350];
	v[3339] = v[359] / v[350];
	v[3338] = v[353] / v[350];
	v[186] = 1e0 + (v[183] * v[675]) / 2e0;
	v[1821] = v[186] * v[3338];
	v[187] = v[183] * v[670];
	v[1823] = v[187] * v[3339];
	v[2315] = v[1821] + v[1823];
	v[188] = v[183] * v[665];
	v[3743] = v[188] / v[350];
	v[1824] = v[188] * v[3340];
	v[2320] = v[1821] + v[1824];
	v[2309] = v[1823] + v[2320];
	v[190] = v[183] * v[664];
	v[1828] = v[190] * v[3338];
	v[192] = 1e0 + (v[183] * v[662]) / 2e0;
	v[1816] = v[192] * v[3339];
	v[2311] = v[1816] + v[1828];
	v[193] = v[183] * v[657];
	v[3744] = v[193] / v[350];
	v[1817] = v[193] * v[3340];
	v[2321] = v[1816] + v[1817];
	v[2314] = v[1828] + v[2321];
	v[195] = v[183] * v[656];
	v[1832] = v[195] * v[3338];
	v[197] = v[183] * v[655];
	v[3745] = v[197] / v[350];
	v[1812] = v[197] * v[3339];
	v[198] = 1e0 + (v[183] * v[652]) / 2e0;
	v[1813] = v[198] * v[3340];
	v[2319] = v[1812] + v[1813] + v[1832];
	v[2316] = -v[1832] + v[2319];
	v[2310] = -v[1812] + v[2319];
	v[199] = -(dA[5] * v[183]) / 2e0;
	v[3770] = 2e0*v[199];
	v[3529] = 2e0*v[199];
	v[3521] = 2e0*v[199];
	v[356] = -(v[183] * v[199]);
	v[200] = (dA[4] * v[183]) / 2e0;
	v[3771] = 2e0*v[200];
	v[3530] = 2e0*v[200];
	v[3522] = 2e0*v[200];
	v[368] = -(v[199] * v[200]);
	v[365] = -(v[183] * v[200]);
	v[201] = -(dA[3] * v[183]) / 2e0;
	v[3769] = 2e0*v[201];
	v[3520] = 2e0*v[201];
	v[369] = -(v[183] * v[201]);
	v[3357] = v[368] - v[369];
	v[366] = v[199] * v[201];
	v[3355] = -v[365] + v[366];
	v[357] = -(v[200] * v[201]);
	v[3353] = -v[356] + v[357];
	v[202] = 4e0 / v[650];
	v[376] = (v[202] * v[202]);
	v[3960] = 1e0 / Power(v[376], 3);
	v[3636] = QBAi[2][0] * v[376];
	v[3635] = QBAi[2][1] * v[376];
	v[3343] = v[387] / v[376];
	v[3342] = v[385] / v[376];
	v[3341] = v[379] / v[376];
	v[205] = 1e0 + (v[202] * v[644]) / 2e0;
	v[1794] = v[205] * v[3341];
	v[206] = v[202] * v[639];
	v[1796] = v[206] * v[3342];
	v[2330] = v[1794] + v[1796];
	v[207] = v[202] * v[634];
	v[3740] = v[207] / v[376];
	v[1797] = v[207] * v[3343];
	v[2335] = v[1794] + v[1797];
	v[2324] = v[1796] + v[2335];
	v[209] = v[202] * v[633];
	v[1801] = v[209] * v[3341];
	v[211] = 1e0 + (v[202] * v[631]) / 2e0;
	v[1789] = v[211] * v[3342];
	v[2326] = v[1789] + v[1801];
	v[212] = v[202] * v[626];
	v[3741] = v[212] / v[376];
	v[1790] = v[212] * v[3343];
	v[2336] = v[1789] + v[1790];
	v[2329] = v[1801] + v[2336];
	v[214] = v[202] * v[625];
	v[1805] = v[214] * v[3341];
	v[216] = v[202] * v[624];
	v[3742] = v[216] / v[376];
	v[1785] = v[216] * v[3342];
	v[217] = 1e0 + (v[202] * v[621]) / 2e0;
	v[1786] = v[217] * v[3343];
	v[2334] = v[1785] + v[1786] + v[1805];
	v[2331] = -v[1805] + v[2334];
	v[2325] = -v[1785] + v[2334];
	v[218] = -(dA[11] * v[202]) / 2e0;
	v[3763] = 2e0*v[218];
	v[3531] = 2e0*v[218];
	v[3508] = 2e0*v[218];
	v[382] = -(v[202] * v[218]);
	v[219] = (dA[10] * v[202]) / 2e0;
	v[3764] = 2e0*v[219];
	v[3532] = 2e0*v[219];
	v[3509] = 2e0*v[219];
	v[394] = -(v[218] * v[219]);
	v[391] = -(v[202] * v[219]);
	v[220] = -(dA[9] * v[202]) / 2e0;
	v[3762] = 2e0*v[220];
	v[3507] = 2e0*v[220];
	v[395] = -(v[202] * v[220]);
	v[3362] = v[394] - v[395];
	v[392] = v[218] * v[220];
	v[3360] = -v[391] + v[392];
	v[383] = -(v[219] * v[220]);
	v[3358] = -v[382] + v[383];
	v[221] = QAAi[0][0] * v[186] + QAAi[1][0] * v[187] + QAAi[2][0] * v[188];
	v[222] = QAAi[0][1] * v[186] + QAAi[1][1] * v[187] + QAAi[2][1] * v[188];
	v[224] = QAAi[0][0] * v[190] + QAAi[1][0] * v[192] + QAAi[2][0] * v[193];
	v[225] = QAAi[0][1] * v[190] + QAAi[1][1] * v[192] + QAAi[2][1] * v[193];
	v[227] = QAAi[0][0] * v[195] + QAAi[1][0] * v[197] + QAAi[2][0] * v[198];
	v[228] = QAAi[0][1] * v[195] + QAAi[1][1] * v[197] + QAAi[2][1] * v[198];
	v[230] = QBAi[0][0] * v[205] + QBAi[1][0] * v[206] + QBAi[2][0] * v[207];
	v[231] = QBAi[0][1] * v[205] + QBAi[1][1] * v[206] + QBAi[2][1] * v[207];
	v[233] = QBAi[0][0] * v[209] + QBAi[1][0] * v[211] + QBAi[2][0] * v[212];
	v[234] = QBAi[0][1] * v[209] + QBAi[1][1] * v[211] + QBAi[2][1] * v[212];
	v[236] = QBAi[0][0] * v[214] + QBAi[1][0] * v[216] + QBAi[2][0] * v[217];
	v[237] = QBAi[0][1] * v[214] + QBAi[1][1] * v[216] + QBAi[2][1] * v[217];
	v[239] = dA[0] + xAAi[0];
	v[240] = dA[1] + xAAi[1];
	v[241] = dA[2] + xAAi[2];
	v[242] = dA[6] + xBAi[0];
	v[243] = dA[7] + xBAi[1];
	v[244] = dA[8] + xBAi[2];
	v[245] = (1e0 - ci[0]) / 2e0;
	v[246] = (1e0 + ci[0]) / 2e0;
	v[247] = (1e0 - cp[0]) / 2e0;
	v[248] = (1e0 + cp[0]) / 2e0;
	v[1397] = v[222] * v[247] + v[231] * v[248];
	v[1396] = v[221] * v[247] + v[230] * v[248];
	v[1394] = v[225] * v[247] + v[234] * v[248];
	v[1393] = v[224] * v[247] + v[233] * v[248];
	v[1389] = v[228] * v[247] + v[237] * v[248];
	v[1388] = v[227] * v[247] + v[236] * v[248];
	v[249] = 2e0 / (*eA);
	v[3344] = -1e0 + v[249];
	v[1481] = -2e0 + v[249];
	v[3649] = v[1142] * Power(v[440], v[1481]);
	v[3648] = v[1144] * Power(v[438], v[1481]);
	v[1280] = Power(v[438], v[3344]);
	v[3448] = v[1143] * v[1280];
	v[1277] = Power(v[440], v[3344]);
	v[3451] = v[1142] * v[1277] + v[1144] * v[1280];
	v[3450] = v[1141] * v[1277];
	v[1145] = v[249] * v[3451];
	v[437] = Power(v[438], v[249]) + Power(v[440], v[249]);
	v[1429] = -1e0 - 1e0 / v[249];
	v[1860] = -((v[1429] * Power(v[437], -1e0 + v[1429])) / v[249]);
	v[3752] = v[1145] * v[1860];
	v[1278] = Power(v[437], v[1429]);
	v[3760] = -(v[1278] * v[3344]);
	v[3465] = -(v[1278] / v[249]);
	v[2983] = -(v[1278] * v[3448]);
	v[2982] = -(v[1278] * v[3450]);
	v[441] = v[1145] * v[3465];
	v[250] = 1e0 / Power(Power(fabs(v[251]), v[249]) + Power(fabs(v[253]), v[249]), 1 / v[249]);
	v[252] = (*aA)*v[250] * v[251];
	v[254] = (*bA)*v[250] * v[253];
	v[256] = 1e0 / Power(v[437], 1 / v[249]);
	v[3449] = (*bA)*v[256];
	v[3347] = (*aA)*v[256];
	v[1337] = v[1518] * v[3449];
	v[1334] = -(v[1140] * v[3347]);
	v[443] = v[1337] + v[3348] * v[441];
	v[442] = v[1334] + v[3444] * v[441];
	v[449] = v[221] * v[442] + v[222] * v[443];
	v[448] = v[230] * v[442] + v[231] * v[443];
	v[450] = v[248] * v[448] + v[247] * v[449];
	v[447] = v[224] * v[442] + v[225] * v[443];
	v[446] = v[233] * v[442] + v[234] * v[443];
	v[451] = v[248] * v[446] + v[247] * v[447];
	v[445] = v[227] * v[442] + v[228] * v[443];
	v[444] = v[236] * v[442] + v[237] * v[443];
	v[452] = v[248] * v[444] + v[247] * v[445];
	v[258] = v[1518] * v[3347];
	v[260] = v[256] * v[3348];
	v[1438] = QBAi[2][0] * v[258] + QBAi[2][1] * v[260];
	v[1437] = QBAi[1][0] * v[258] + QBAi[1][1] * v[260];
	v[1436] = QBAi[0][0] * v[258] + QBAi[0][1] * v[260];
	v[1435] = QAAi[2][0] * v[258] + QAAi[2][1] * v[260];
	v[1434] = QAAi[1][0] * v[258] + QAAi[1][1] * v[260];
	v[1433] = QAAi[0][0] * v[258] + QAAi[0][1] * v[260];
	v[433] = v[244] + v[236] * v[258] + v[237] * v[260];
	v[432] = v[241] + v[227] * v[258] + v[228] * v[260];
	v[3447] = -v[432] + v[433];
	v[434] = v[3447] / 2e0;
	v[430] = v[243] + v[233] * v[258] + v[234] * v[260];
	v[429] = v[240] + v[224] * v[258] + v[225] * v[260];
	v[3446] = -v[429] + v[430];
	v[431] = v[3446] / 2e0;
	v[427] = v[242] + v[230] * v[258] + v[231] * v[260];
	v[426] = v[239] + v[221] * v[258] + v[222] * v[260];
	v[3445] = -v[426] + v[427];
	v[428] = v[3445] / 2e0;
	v[270] = dB[0] + xAi[0];
	v[467] = v[270] * v[455];
	v[271] = dB[1] + xAi[1];
	v[469] = v[271] * v[455];
	v[272] = dB[2] + xAi[2];
	v[471] = v[272] * v[455];
	v[273] = dB[3] + xBi[0];
	v[274] = dB[4] + xBi[1];
	v[275] = dB[5] + xBi[2];
	v[276] = dB[6] + xCi[0];
	v[277] = dB[7] + xCi[1];
	v[278] = dB[8] + xCi[2];
	v[279] = dB[9] + xDi[0];
	v[280] = dB[10] + xDi[1];
	v[281] = dB[11] + xDi[2];
	v[282] = dB[12] + xEi[0];
	v[3674] = v[279] - v[282];
	v[283] = dB[13] + xEi[1];
	v[3675] = v[280] - v[283];
	v[284] = dB[14] + xEi[2];
	v[3676] = v[281] - v[284];
	v[285] = dB[15] + xFi[0];
	v[3677] = v[282] - v[285];
	v[468] = v[276] * v[464] + v[3674] * v[465] + v[285] * v[466] + v[467];
	v[459] = v[273] * v[456] + v[279] * v[457] + v[3677] * v[458] + v[467];
	v[286] = dB[16] + xFi[1];
	v[3678] = v[283] - v[286];
	v[470] = v[277] * v[464] + v[3675] * v[465] + v[286] * v[466] + v[469];
	v[460] = v[274] * v[456] + v[280] * v[457] + v[3678] * v[458] + v[469];
	v[287] = dB[17] + xFi[2];
	v[3679] = v[284] - v[287];
	v[472] = v[278] * v[464] + v[3676] * v[465] + v[287] * v[466] + v[471];
	v[461] = v[275] * v[456] + v[281] * v[457] + v[3679] * v[458] + v[471];
	v[288] = v[296] + v[3349] + v[3350];
	v[297] = -ci[2] - ci[3] - v[295] - v[296];
	v[298] = 1e0 + ci[2] + ci[3] + v[296];
	v[300] = v[295] + v[297] - v[299];
	v[301] = v[309] + v[3351] + v[3352];
	v[310] = -cp[2] - cp[3] - v[308] - v[309];
	v[311] = 0.5e0 + v[309] + v[455];
	v[313] = v[308] + v[310] - v[312];
	v[10331] = 0e0;
	v[10332] = 0e0;
	v[10333] = v[247];
	v[10334] = 0e0;
	v[10335] = 0e0;
	v[10336] = 0e0;
	v[10337] = 0e0;
	v[10338] = 0e0;
	v[10339] = v[248];
	v[10340] = 0e0;
	v[10341] = 0e0;
	v[10342] = 0e0;
	v[10343] = 0e0;
	v[10344] = 0e0;
	v[10345] = -v[301];
	v[10346] = 0e0;
	v[10347] = 0e0;
	v[10348] = -v[3351];
	v[10349] = 0e0;
	v[10350] = 0e0;
	v[10351] = -v[3352];
	v[10352] = 0e0;
	v[10353] = 0e0;
	v[10354] = -v[310];
	v[10355] = 0e0;
	v[10356] = 0e0;
	v[10357] = -v[311];
	v[10358] = 0e0;
	v[10359] = 0e0;
	v[10360] = -v[313];
	v[10361] = 0e0;
	v[10362] = v[247];
	v[10363] = 0e0;
	v[10364] = 0e0;
	v[10365] = 0e0;
	v[10366] = 0e0;
	v[10367] = 0e0;
	v[10368] = v[248];
	v[10369] = 0e0;
	v[10370] = 0e0;
	v[10371] = 0e0;
	v[10372] = 0e0;
	v[10373] = 0e0;
	v[10374] = -v[301];
	v[10375] = 0e0;
	v[10376] = 0e0;
	v[10377] = -v[3351];
	v[10378] = 0e0;
	v[10379] = 0e0;
	v[10380] = -v[3352];
	v[10381] = 0e0;
	v[10382] = 0e0;
	v[10383] = -v[310];
	v[10384] = 0e0;
	v[10385] = 0e0;
	v[10386] = -v[311];
	v[10387] = 0e0;
	v[10388] = 0e0;
	v[10389] = -v[313];
	v[10390] = 0e0;
	v[10391] = v[247];
	v[10392] = 0e0;
	v[10393] = 0e0;
	v[10394] = 0e0;
	v[10395] = 0e0;
	v[10396] = 0e0;
	v[10397] = v[248];
	v[10398] = 0e0;
	v[10399] = 0e0;
	v[10400] = 0e0;
	v[10401] = 0e0;
	v[10402] = 0e0;
	v[10403] = -v[301];
	v[10404] = 0e0;
	v[10405] = 0e0;
	v[10406] = -v[3351];
	v[10407] = 0e0;
	v[10408] = 0e0;
	v[10409] = -v[3352];
	v[10410] = 0e0;
	v[10411] = 0e0;
	v[10412] = -v[310];
	v[10413] = 0e0;
	v[10414] = 0e0;
	v[10415] = -v[311];
	v[10416] = 0e0;
	v[10417] = 0e0;
	v[10418] = -v[313];
	v[10419] = 0e0;
	v[10420] = 0e0;
	v[5605] = -v[247];
	v[5606] = 0e0;
	v[5607] = 0e0;
	v[5608] = 0e0;
	v[5609] = 0e0;
	v[5610] = 0e0;
	v[5611] = -v[248];
	v[5612] = 0e0;
	v[5613] = 0e0;
	v[5614] = 0e0;
	v[5615] = 0e0;
	v[5616] = 0e0;
	v[5617] = v[301];
	v[5618] = 0e0;
	v[5619] = 0e0;
	v[5620] = v[3351];
	v[5621] = 0e0;
	v[5622] = 0e0;
	v[5623] = v[3352];
	v[5624] = 0e0;
	v[5625] = 0e0;
	v[5626] = v[310];
	v[5627] = 0e0;
	v[5628] = 0e0;
	v[5629] = v[311];
	v[5630] = 0e0;
	v[5631] = 0e0;
	v[5632] = v[313];
	v[5633] = 0e0;
	v[5634] = 0e0;
	v[5575] = 0e0;
	v[5576] = -v[247];
	v[5577] = 0e0;
	v[5578] = 0e0;
	v[5579] = 0e0;
	v[5580] = 0e0;
	v[5581] = 0e0;
	v[5582] = -v[248];
	v[5583] = 0e0;
	v[5584] = 0e0;
	v[5585] = 0e0;
	v[5586] = 0e0;
	v[5587] = 0e0;
	v[5588] = v[301];
	v[5589] = 0e0;
	v[5590] = 0e0;
	v[5591] = v[3351];
	v[5592] = 0e0;
	v[5593] = 0e0;
	v[5594] = v[3352];
	v[5595] = 0e0;
	v[5596] = 0e0;
	v[5597] = v[310];
	v[5598] = 0e0;
	v[5599] = 0e0;
	v[5600] = v[311];
	v[5601] = 0e0;
	v[5602] = 0e0;
	v[5603] = v[313];
	v[5604] = 0e0;
	v[5545] = 0e0;
	v[5546] = 0e0;
	v[5547] = -v[247];
	v[5548] = 0e0;
	v[5549] = 0e0;
	v[5550] = 0e0;
	v[5551] = 0e0;
	v[5552] = 0e0;
	v[5553] = -v[248];
	v[5554] = 0e0;
	v[5555] = 0e0;
	v[5556] = 0e0;
	v[5557] = 0e0;
	v[5558] = 0e0;
	v[5559] = v[301];
	v[5560] = 0e0;
	v[5561] = 0e0;
	v[5562] = v[3351];
	v[5563] = 0e0;
	v[5564] = 0e0;
	v[5565] = v[3352];
	v[5566] = 0e0;
	v[5567] = 0e0;
	v[5568] = v[310];
	v[5569] = 0e0;
	v[5570] = 0e0;
	v[5571] = v[311];
	v[5572] = 0e0;
	v[5573] = 0e0;
	v[5574] = v[313];
	v[323] = (*a4)*dA[0] + (*a6)*dduiA[0] + (*a5)*duiA[0];
	v[324] = (*a4)*dA[1] + (*a6)*dduiA[1] + (*a5)*duiA[1];
	v[325] = (*a4)*dA[2] + (*a6)*dduiA[2] + (*a5)*duiA[2];
	v[3419] = v[247] * v[325];
	v[326] = (*a4)*dA[6] + (*a6)*dduiA[6] + (*a5)*duiA[6];
	v[327] = (*a4)*dA[7] + (*a6)*dduiA[7] + (*a5)*duiA[7];
	v[328] = (*a4)*dA[8] + (*a6)*dduiA[8] + (*a5)*duiA[8];
	v[3420] = v[248] * v[328];
	v[329] = (*a4)*dB[0] + (*a6)*dduiB[0] + (*a5)*duiB[0];
	v[330] = (*a4)*dB[1] + (*a6)*dduiB[1] + (*a5)*duiB[1];
	v[331] = (*a4)*dB[2] + (*a6)*dduiB[2] + (*a5)*duiB[2];
	v[3421] = -(v[301] * v[331]);
	v[332] = (*a4)*dB[3] + (*a6)*dduiB[3] + (*a5)*duiB[3];
	v[333] = (*a4)*dB[4] + (*a6)*dduiB[4] + (*a5)*duiB[4];
	v[334] = (*a4)*dB[5] + (*a6)*dduiB[5] + (*a5)*duiB[5];
	v[3422] = -(v[334] * v[3351]);
	v[335] = (*a4)*dB[6] + (*a6)*dduiB[6] + (*a5)*duiB[6];
	v[336] = (*a4)*dB[7] + (*a6)*dduiB[7] + (*a5)*duiB[7];
	v[337] = (*a4)*dB[8] + (*a6)*dduiB[8] + (*a5)*duiB[8];
	v[3423] = -(v[3352] * v[337]);
	v[338] = (*a4)*dB[9] + (*a6)*dduiB[9] + (*a5)*duiB[9];
	v[339] = (*a4)*dB[10] + (*a6)*dduiB[10] + (*a5)*duiB[10];
	v[340] = (*a4)*dB[11] + (*a6)*dduiB[11] + (*a5)*duiB[11];
	v[3424] = -(v[310] * v[340]);
	v[341] = (*a4)*dB[12] + (*a6)*dduiB[12] + (*a5)*duiB[12];
	v[342] = (*a4)*dB[13] + (*a6)*dduiB[13] + (*a5)*duiB[13];
	v[343] = (*a4)*dB[14] + (*a6)*dduiB[14] + (*a5)*duiB[14];
	v[3425] = -(v[311] * v[343]);
	v[344] = (*a4)*dB[15] + (*a6)*dduiB[15] + (*a5)*duiB[15];
	v[345] = (*a4)*dB[16] + (*a6)*dduiB[16] + (*a5)*duiB[16];
	v[346] = (*a4)*dB[17] + (*a6)*dduiB[17] + (*a5)*duiB[17];
	v[3426] = -(v[313] * v[346]);
	v[348] = v[365] + v[366];
	v[3356] = v[348] / v[350];
	v[349] = v[356] + v[357];
	v[3354] = v[349] / v[350];
	v[351] = (v[201] * v[201]) + v[350];
	v[3670] = v[198] * v[348] + v[188] * v[351];
	v[3669] = v[192] * v[349] + v[187] * v[351];
	v[2922] = v[351] / v[350];
	v[1937] = v[3355] / v[350];
	v[1935] = v[3353] / v[350];
	v[7293] = 0e0;
	v[7294] = 0e0;
	v[7295] = 0e0;
	v[7296] = 0e0;
	v[7297] = v[1935];
	v[7298] = v[1937];
	v[7299] = 0e0;
	v[7300] = 0e0;
	v[7301] = 0e0;
	v[7302] = 0e0;
	v[7303] = 0e0;
	v[7304] = 0e0;
	v[7305] = 0e0;
	v[7306] = 0e0;
	v[7307] = 0e0;
	v[7308] = 0e0;
	v[7309] = 0e0;
	v[7310] = 0e0;
	v[7311] = 0e0;
	v[7312] = 0e0;
	v[7313] = 0e0;
	v[7314] = 0e0;
	v[7315] = 0e0;
	v[7316] = 0e0;
	v[7317] = 0e0;
	v[7318] = 0e0;
	v[7319] = 0e0;
	v[7320] = 0e0;
	v[7321] = 0e0;
	v[7322] = 0e0;
	v[352] = v[2922] * v[353] + v[1935] * v[359] + v[1937] * v[361];
	v[354] = (v[200] * v[200]) + v[350];
	v[3667] = v[186] * v[3353] + v[190] * v[354];
	v[360] = v[368] + v[369];
	v[3668] = v[193] * v[354] + v[198] * v[360];
	v[2923] = v[354] / v[350];
	v[1936] = v[3357] / v[350];
	v[7323] = 0e0;
	v[7324] = 0e0;
	v[7325] = 0e0;
	v[7326] = v[3354];
	v[7327] = 0e0;
	v[7328] = v[1936];
	v[7329] = 0e0;
	v[7330] = 0e0;
	v[7331] = 0e0;
	v[7332] = 0e0;
	v[7333] = 0e0;
	v[7334] = 0e0;
	v[7335] = 0e0;
	v[7336] = 0e0;
	v[7337] = 0e0;
	v[7338] = 0e0;
	v[7339] = 0e0;
	v[7340] = 0e0;
	v[7341] = 0e0;
	v[7342] = 0e0;
	v[7343] = 0e0;
	v[7344] = 0e0;
	v[7345] = 0e0;
	v[7346] = 0e0;
	v[7347] = 0e0;
	v[7348] = 0e0;
	v[7349] = 0e0;
	v[7350] = 0e0;
	v[7351] = 0e0;
	v[7352] = 0e0;
	v[362] = v[3354] * v[353] + v[2923] * v[359] + v[1936] * v[361];
	v[363] = (v[199] * v[199]) + v[350];
	v[3665] = v[186] * v[3355] + v[195] * v[363];
	v[3666] = v[192] * v[3357] + v[197] * v[363];
	v[2924] = v[363] / v[350];
	v[1934] = v[360] / v[350];
	v[7353] = 0e0;
	v[7354] = 0e0;
	v[7355] = 0e0;
	v[7356] = v[3356];
	v[7357] = v[1934];
	v[7358] = 0e0;
	v[7359] = 0e0;
	v[7360] = 0e0;
	v[7361] = 0e0;
	v[7362] = 0e0;
	v[7363] = 0e0;
	v[7364] = 0e0;
	v[7365] = 0e0;
	v[7366] = 0e0;
	v[7367] = 0e0;
	v[7368] = 0e0;
	v[7369] = 0e0;
	v[7370] = 0e0;
	v[7371] = 0e0;
	v[7372] = 0e0;
	v[7373] = 0e0;
	v[7374] = 0e0;
	v[7375] = 0e0;
	v[7376] = 0e0;
	v[7377] = 0e0;
	v[7378] = 0e0;
	v[7379] = 0e0;
	v[7380] = 0e0;
	v[7381] = 0e0;
	v[7382] = 0e0;
	v[372] = v[3356] * v[353] + v[1934] * v[359] + v[2924] * v[361];
	v[374] = v[391] + v[392];
	v[3361] = v[374] / v[376];
	v[375] = v[382] + v[383];
	v[3359] = v[375] / v[376];
	v[377] = (v[220] * v[220]) + v[376];
	v[3658] = v[217] * v[374] + v[207] * v[377];
	v[3657] = v[211] * v[375] + v[206] * v[377];
	v[2925] = v[377] / v[376];
	v[1943] = v[3360] / v[376];
	v[1941] = v[3358] / v[376];
	v[7383] = 0e0;
	v[7384] = 0e0;
	v[7385] = 0e0;
	v[7386] = 0e0;
	v[7387] = 0e0;
	v[7388] = 0e0;
	v[7389] = 0e0;
	v[7390] = 0e0;
	v[7391] = 0e0;
	v[7392] = 0e0;
	v[7393] = v[1941];
	v[7394] = v[1943];
	v[7395] = 0e0;
	v[7396] = 0e0;
	v[7397] = 0e0;
	v[7398] = 0e0;
	v[7399] = 0e0;
	v[7400] = 0e0;
	v[7401] = 0e0;
	v[7402] = 0e0;
	v[7403] = 0e0;
	v[7404] = 0e0;
	v[7405] = 0e0;
	v[7406] = 0e0;
	v[7407] = 0e0;
	v[7408] = 0e0;
	v[7409] = 0e0;
	v[7410] = 0e0;
	v[7411] = 0e0;
	v[7412] = 0e0;
	v[378] = v[2925] * v[379] + v[1941] * v[385] + v[1943] * v[387];
	v[380] = (v[219] * v[219]) + v[376];
	v[3655] = v[205] * v[3358] + v[209] * v[380];
	v[386] = v[394] + v[395];
	v[3656] = v[212] * v[380] + v[217] * v[386];
	v[2926] = v[380] / v[376];
	v[1942] = v[3362] / v[376];
	v[7413] = 0e0;
	v[7414] = 0e0;
	v[7415] = 0e0;
	v[7416] = 0e0;
	v[7417] = 0e0;
	v[7418] = 0e0;
	v[7419] = 0e0;
	v[7420] = 0e0;
	v[7421] = 0e0;
	v[7422] = v[3359];
	v[7423] = 0e0;
	v[7424] = v[1942];
	v[7425] = 0e0;
	v[7426] = 0e0;
	v[7427] = 0e0;
	v[7428] = 0e0;
	v[7429] = 0e0;
	v[7430] = 0e0;
	v[7431] = 0e0;
	v[7432] = 0e0;
	v[7433] = 0e0;
	v[7434] = 0e0;
	v[7435] = 0e0;
	v[7436] = 0e0;
	v[7437] = 0e0;
	v[7438] = 0e0;
	v[7439] = 0e0;
	v[7440] = 0e0;
	v[7441] = 0e0;
	v[7442] = 0e0;
	v[388] = v[3359] * v[379] + v[2926] * v[385] + v[1942] * v[387];
	v[389] = (v[218] * v[218]) + v[376];
	v[3653] = v[205] * v[3360] + v[214] * v[389];
	v[3654] = v[211] * v[3362] + v[216] * v[389];
	v[2927] = v[389] / v[376];
	v[1940] = v[386] / v[376];
	v[7443] = 0e0;
	v[7444] = 0e0;
	v[7445] = 0e0;
	v[7446] = 0e0;
	v[7447] = 0e0;
	v[7448] = 0e0;
	v[7449] = 0e0;
	v[7450] = 0e0;
	v[7451] = 0e0;
	v[7452] = v[3361];
	v[7453] = v[1940];
	v[7454] = 0e0;
	v[7455] = 0e0;
	v[7456] = 0e0;
	v[7457] = 0e0;
	v[7458] = 0e0;
	v[7459] = 0e0;
	v[7460] = 0e0;
	v[7461] = 0e0;
	v[7462] = 0e0;
	v[7463] = 0e0;
	v[7464] = 0e0;
	v[7465] = 0e0;
	v[7466] = 0e0;
	v[7467] = 0e0;
	v[7468] = 0e0;
	v[7469] = 0e0;
	v[7470] = 0e0;
	v[7471] = 0e0;
	v[7472] = 0e0;
	v[398] = v[3361] * v[379] + v[1940] * v[385] + v[2927] * v[387];
	v[399] = -(v[270] * v[301]) - v[279] * v[310] - v[282] * v[311] - v[285] * v[313] - v[273] * v[3351] - v[276] * v[3352]
		+ v[247] * v[426] + v[248] * v[427];
	v[3466] = 2e0*v[399];
	v[3382] = v[248] * v[399];
	v[3381] = v[247] * v[399];
	v[871] = -(v[399] * v[465]);
	v[856] = -(v[399] * v[455]);
	v[824] = -(v[399] * v[458]);
	v[496] = -v[399] / 2e0;
	v[400] = -(v[271] * v[301]) - v[280] * v[310] - v[283] * v[311] - v[286] * v[313] - v[274] * v[3351] - v[277] * v[3352]
		+ v[247] * v[429] + v[248] * v[430];
	v[3467] = 2e0*v[400];
	v[3384] = v[248] * v[400];
	v[3383] = v[247] * v[400];
	v[873] = -(v[400] * v[465]);
	v[858] = -(v[400] * v[455]);
	v[826] = -(v[400] * v[458]);
	v[487] = -v[400] / 2e0;
	v[401] = -(v[272] * v[301]) - v[281] * v[310] - v[284] * v[311] - v[287] * v[313] - v[275] * v[3351] - v[278] * v[3352]
		+ v[247] * v[432] + v[248] * v[433];
	v[3468] = 2e0*v[401];
	v[3805] = v[231] * v[3466] + v[234] * v[3467] + v[237] * v[3468];
	v[3804] = v[230] * v[3466] + v[233] * v[3467] + v[236] * v[3468];
	v[3802] = -(v[222] * v[3466]) - v[225] * v[3467] - v[228] * v[3468];
	v[3801] = -(v[221] * v[3466]) - v[224] * v[3467] - v[227] * v[3468];
	v[3386] = v[248] * v[401];
	v[3385] = v[247] * v[401];
	v[1773] = sqrt((v[399] * v[399]) + (v[400] * v[400]) + (v[401] * v[401]));
	v[2674] = 1e0 / Power(v[1773], 2);
	v[1056] = v[1438] * v[248];
	v[1057] = v[1437] * v[248];
	v[1058] = v[1436] * v[248];
	v[1059] = v[1435] * v[247];
	v[1060] = v[1434] * v[247];
	v[1061] = v[1433] * v[247];
	v[1062] = v[1056] * v[202];
	v[1063] = v[1057] * v[202];
	v[1064] = v[1058] * v[202];
	v[1065] = v[1056] * v[634] + v[1057] * v[639] + (v[1058] * v[644]) / 2e0;
	v[3400] = v[1065] * v[1068];
	v[1066] = v[1056] * v[626] + (v[1057] * v[631]) / 2e0 + v[1058] * v[633];
	v[3401] = v[1066] * v[1068];
	v[1067] = (v[1056] * v[621]) / 2e0 + v[1057] * v[624] + v[1058] * v[625];
	v[3402] = v[1067] * v[1068];
	v[1069] = v[1059] * v[183];
	v[1070] = v[1060] * v[183];
	v[1071] = v[1061] * v[183];
	v[1072] = v[1059] * v[665] + v[1060] * v[670] + (v[1061] * v[675]) / 2e0;
	v[3406] = v[1072] * v[1075];
	v[1073] = v[1059] * v[657] + (v[1060] * v[662]) / 2e0 + v[1061] * v[664];
	v[3409] = v[1073] * v[1075];
	v[1074] = (v[1059] * v[652]) / 2e0 + v[1060] * v[655] + v[1061] * v[656];
	v[3416] = v[1074] * v[1075];
	v[875] = -(v[401] * v[465]);
	v[860] = -(v[401] * v[455]);
	v[828] = -(v[401] * v[458]);
	v[478] = -v[401] / 2e0;
	v[402] = v[245] * (QAAi[0][0] * v[252] + QAAi[0][1] * v[254] + xAAi[0]) - v[288] * xAi[0] + v[246] * (QBAi[0][0] * v[252]
		+ QBAi[0][1] * v[254] + xBAi[0]) - v[3349] * xBi[0] - v[3350] * xCi[0] - v[297] * xDi[0] - v[298] * xEi[0]
		- v[300] * xFi[0];
	v[403] = v[245] * (QAAi[1][0] * v[252] + QAAi[1][1] * v[254] + xAAi[1]) - v[288] * xAi[1] + v[246] * (QBAi[1][0] * v[252]
		+ QBAi[1][1] * v[254] + xBAi[1]) - v[3349] * xBi[1] - v[3350] * xCi[1] - v[297] * xDi[1] - v[298] * xEi[1]
		- v[300] * xFi[1];
	v[404] = v[245] * (QAAi[2][0] * v[252] + QAAi[2][1] * v[254] + xAAi[2]) - v[288] * xAi[2] + v[246] * (QBAi[2][0] * v[252]
		+ QBAi[2][1] * v[254] + xBAi[2]) - v[3349] * xBi[2] - v[3350] * xCi[2] - v[297] * xDi[2] - v[298] * xEi[2]
		- v[300] * xFi[2];
	if (v[1773] > 0.1e-7) { v01 = 1e0 / v[1773]; v02 = (-(v01 / v[1773])); v03 = (2e0*v01) / Power(v[1773], 2); }
	else {
		v01 = (12500000e0 / 3e0)*(24e0 - (-0.1e-7 + v[1773])*(0.24e10 - 2e0*(-1e0 + 100000000e0*v[1773])*
			(0.2399999997e10 - 0.1199999994e18*v[1773] - 0.3e17*(v[1773] * v[1773]))));
		v02 = (-50000000e0 / 3e0)*(0.3599999994e10 - 0.4799999982e18*v[1773] + 0.6e25*Power(v[1773], 3)
			+ 0.1799999982e26*(v[1773] * v[1773]));
		v03 = 0.1e17*(799999997e0 - 0.599999994e17*v[1773] - 0.3e17*(v[1773] * v[1773]));
	};
	v[411] = v03;
	v[412] = v02;
	v[413] = v01;
	v[414] = v[399] * v[413];
	v[3379] = -(v[344] * v[414]);
	v[3377] = -(v[341] * v[414]);
	v[3375] = -(v[335] * v[414]);
	v[3373] = -(v[332] * v[414]);
	v[3371] = -(v[329] * v[414]);
	v[3369] = -(v[338] * v[414]);
	v[3367] = v[323] * v[414];
	v[3365] = v[326] * v[414];
	v[1088] = (v[414] * v[414]);
	v[415] = v[400] * v[413];
	v[3380] = -(v[345] * v[415]);
	v[3378] = -(v[342] * v[415]);
	v[3376] = -(v[336] * v[415]);
	v[3374] = -(v[333] * v[415]);
	v[3372] = -(v[330] * v[415]);
	v[3370] = -(v[339] * v[415]);
	v[3368] = v[324] * v[415];
	v[3366] = v[327] * v[415];
	v[3363] = v[414] * v[415];
	v[3442] = v[248] * v[3365] + v[248] * v[3366] + v[247] * v[3367] + v[247] * v[3368] + v[310] * v[3369] + v[310] * v[3370]
		+ v[301] * v[3371] + v[301] * v[3372] + v[3351] * v[3373] + v[3351] * v[3374] + v[3352] * v[3375] + v[3352] * v[3376]
		+ v[311] * v[3377] + v[311] * v[3378] + v[313] * v[3379] + v[313] * v[3380];
	v[2493] = (*cn)*v[3363];
	v[1110] = (v[415] * v[415]);
	v[1109] = -(v[313] * v[3363]);
	v[1108] = -(v[311] * v[3363]);
	v[1107] = -(v[310] * v[3363]);
	v[1106] = -(v[3352] * v[3363]);
	v[1105] = -(v[3351] * v[3363]);
	v[1104] = -(v[301] * v[3363]);
	v[1103] = v[248] * v[3363];
	v[1102] = v[247] * v[3363];
	v[416] = v[401] * v[413];
	v[3364] = (*cn)*v[416];
	v[2509] = v[3364] * v[398];
	v[2505] = v[3364] * v[378];
	v[2503] = v[3364] * v[388];
	v[2495] = v[3364] * v[372];
	v[2489] = v[3364] * v[352];
	v[2487] = v[3364] * v[362];
	v[1138] = (v[416] * v[416]);
	v[3241] = v[1138] * v[328] + (v[3365] + v[3366])*v[416];
	v[3240] = v[1138] * v[325] + (v[3367] + v[3368])*v[416];
	v[3942] = -v[3240] + v[3241];
	v[3222] = -(v[1138] * v[340]) + (v[3369] + v[3370])*v[416];
	v[3181] = -(v[1138] * v[331]) + (v[3371] + v[3372])*v[416];
	v[3179] = -(v[1138] * v[334]) + (v[3373] + v[3374])*v[416];
	v[3177] = -(v[1138] * v[337]) + (v[3375] + v[3376])*v[416];
	v[3175] = -(v[1138] * v[343]) + (v[3377] + v[3378])*v[416];
	v[3173] = -(v[1138] * v[346]) + (v[3379] + v[3380])*v[416];
	v[2547] = (v[3419] + v[3420] + v[3421] + v[3422] + v[3423] + v[3424] + v[3425] + v[3426])*v[416];
	v[417] = sqrt((v[402] * v[402]) + (v[403] * v[403]) + (v[404] * v[404]));
	if (v[417] > 0.1e-7) { v04 = 1e0 / v[417]; v05 = (-(v04 / v[417])); v06 = (2e0*v04) / Power(v[417], 2); }
	else {
		v04 = (12500000e0 / 3e0)*(24e0 - (-0.1e-7 + v[417])*(0.24e10 - 2e0*(-1e0 + 100000000e0*v[417])*(0.2399999997e10
			- 0.1199999994e18*v[417] - 0.3e17*(v[417] * v[417]))));
		v05 = (-50000000e0 / 3e0)*(0.3599999994e10 - 0.4799999982e18*v[417] + 0.6e25*Power(v[417], 3)
			+ 0.1799999982e26*(v[417] * v[417]));
		v06 = 0.1e17*(799999997e0 - 0.599999994e17*v[417] - 0.3e17*(v[417] * v[417]));
	};
	v[422] = v04;
	v[423] = v[402] * v[422];
	v[424] = v[403] * v[422];
	v[425] = v[404] * v[422];
	v[474] = v[247] * v[434] + v[478];
	v[475] = v[247] * v[452];
	v[476] = -(v[247] * v[461]);
	v[477] = -(v[247] * v[472]);
	v[479] = v[248] * v[434] - v[478];
	v[480] = v[248] * v[452];
	v[481] = -(v[248] * v[461]);
	v[482] = -(v[248] * v[472]);
	v[483] = v[247] * v[431] + v[487];
	v[484] = v[247] * v[451];
	v[485] = -(v[247] * v[460]);
	v[486] = -(v[247] * v[470]);
	v[488] = v[248] * v[431] - v[487];
	v[489] = v[248] * v[451];
	v[490] = -(v[248] * v[460]);
	v[491] = -(v[248] * v[470]);
	v[492] = v[247] * v[428] + v[496];
	v[493] = v[247] * v[450];
	v[494] = -(v[247] * v[459]);
	v[495] = -(v[247] * v[468]);
	v[497] = v[248] * v[428] - v[496];
	v[498] = v[248] * v[450];
	v[499] = -(v[248] * v[459]);
	v[500] = -(v[248] * v[468]);
	v[501] = v[260] * v[492];
	v[502] = v[3381] * v[443] + v[260] * v[493];
	v[503] = v[260] * v[494];
	v[504] = v[260] * v[495];
	v[505] = v[258] * v[492];
	v[506] = v[3381] * v[442] + v[258] * v[493];
	v[507] = v[258] * v[494];
	v[508] = v[258] * v[495];
	v[509] = v[260] * v[497];
	v[510] = v[3382] * v[443] + v[260] * v[498];
	v[511] = v[260] * v[499];
	v[512] = v[260] * v[500];
	v[513] = v[258] * v[497];
	v[514] = v[3382] * v[442] + v[258] * v[498];
	v[515] = v[258] * v[499];
	v[516] = v[258] * v[500];
	v[517] = v[260] * v[483];
	v[518] = v[3383] * v[443] + v[260] * v[484];
	v[519] = v[260] * v[485];
	v[520] = v[260] * v[486];
	v[521] = v[258] * v[483];
	v[522] = v[3383] * v[442] + v[258] * v[484];
	v[523] = v[258] * v[485];
	v[524] = v[258] * v[486];
	v[525] = v[260] * v[488];
	v[526] = v[3384] * v[443] + v[260] * v[489];
	v[527] = v[260] * v[490];
	v[528] = v[260] * v[491];
	v[529] = v[258] * v[488];
	v[530] = v[3384] * v[442] + v[258] * v[489];
	v[531] = v[258] * v[490];
	v[532] = v[258] * v[491];
	v[533] = v[260] * v[474];
	v[534] = v[3385] * v[443] + v[260] * v[475];
	v[535] = v[260] * v[476];
	v[536] = v[260] * v[477];
	v[537] = v[258] * v[474];
	v[538] = v[3385] * v[442] + v[258] * v[475];
	v[539] = v[258] * v[476];
	v[540] = v[258] * v[477];
	v[541] = v[260] * v[479];
	v[542] = v[3386] * v[443] + v[260] * v[480];
	v[543] = v[260] * v[481];
	v[544] = v[260] * v[482];
	v[545] = v[258] * v[479];
	v[546] = v[3386] * v[442] + v[258] * v[480];
	v[547] = v[258] * v[481];
	v[548] = v[258] * v[482];
	v[549] = QBAi[2][1] * v[541] + QBAi[2][0] * v[545];
	v[550] = QBAi[2][1] * v[542] + QBAi[2][0] * v[546];
	v[551] = QBAi[2][1] * v[543] + QBAi[2][0] * v[547];
	v[552] = QBAi[2][1] * v[544] + QBAi[2][0] * v[548];
	v[553] = QBAi[1][1] * v[541] + QBAi[1][0] * v[545];
	v[708] = v[202] * v[553];
	v[554] = QBAi[1][1] * v[542] + QBAi[1][0] * v[546];
	v[752] = v[202] * v[554];
	v[555] = QBAi[1][1] * v[543] + QBAi[1][0] * v[547];
	v[796] = v[202] * v[555];
	v[556] = QBAi[1][1] * v[544] + QBAi[1][0] * v[548];
	v[843] = v[202] * v[556];
	v[557] = QBAi[0][1] * v[541] + QBAi[0][0] * v[545];
	v[711] = v[202] * v[557];
	v[558] = QBAi[0][1] * v[542] + QBAi[0][0] * v[546];
	v[755] = v[202] * v[558];
	v[559] = QBAi[0][1] * v[543] + QBAi[0][0] * v[547];
	v[799] = v[202] * v[559];
	v[560] = QBAi[0][1] * v[544] + QBAi[0][0] * v[548];
	v[846] = v[202] * v[560];
	v[561] = QBAi[2][1] * v[525] + QBAi[2][0] * v[529];
	v[709] = v[202] * v[561];
	v[562] = QBAi[2][1] * v[526] + QBAi[2][0] * v[530];
	v[753] = v[202] * v[562];
	v[563] = QBAi[2][1] * v[527] + QBAi[2][0] * v[531];
	v[797] = v[202] * v[563];
	v[564] = QBAi[2][1] * v[528] + QBAi[2][0] * v[532];
	v[844] = v[202] * v[564];
	v[565] = QBAi[1][1] * v[525] + QBAi[1][0] * v[529];
	v[566] = QBAi[1][1] * v[526] + QBAi[1][0] * v[530];
	v[567] = QBAi[1][1] * v[527] + QBAi[1][0] * v[531];
	v[568] = QBAi[1][1] * v[528] + QBAi[1][0] * v[532];
	v[569] = QBAi[0][1] * v[525] + QBAi[0][0] * v[529];
	v[716] = v[202] * v[569];
	v[570] = QBAi[0][1] * v[526] + QBAi[0][0] * v[530];
	v[760] = v[202] * v[570];
	v[571] = QBAi[0][1] * v[527] + QBAi[0][0] * v[531];
	v[804] = v[202] * v[571];
	v[572] = QBAi[0][1] * v[528] + QBAi[0][0] * v[532];
	v[851] = v[202] * v[572];
	v[573] = QBAi[2][1] * v[509] + QBAi[2][0] * v[513];
	v[712] = v[202] * v[573];
	v[574] = QBAi[2][1] * v[510] + QBAi[2][0] * v[514];
	v[756] = v[202] * v[574];
	v[575] = QBAi[2][1] * v[511] + QBAi[2][0] * v[515];
	v[800] = v[202] * v[575];
	v[576] = QBAi[2][1] * v[512] + QBAi[2][0] * v[516];
	v[847] = v[202] * v[576];
	v[577] = QBAi[1][1] * v[509] + QBAi[1][0] * v[513];
	v[717] = v[202] * v[577];
	v[578] = QBAi[1][1] * v[510] + QBAi[1][0] * v[514];
	v[761] = v[202] * v[578];
	v[579] = QBAi[1][1] * v[511] + QBAi[1][0] * v[515];
	v[805] = v[202] * v[579];
	v[580] = QBAi[1][1] * v[512] + QBAi[1][0] * v[516];
	v[852] = v[202] * v[580];
	v[581] = QBAi[0][1] * v[509] + QBAi[0][0] * v[513];
	v[582] = QBAi[0][1] * v[510] + QBAi[0][0] * v[514];
	v[583] = QBAi[0][1] * v[511] + QBAi[0][0] * v[515];
	v[584] = QBAi[0][1] * v[512] + QBAi[0][0] * v[516];
	v[585] = QAAi[2][1] * v[533] + QAAi[2][0] * v[537];
	v[586] = QAAi[2][1] * v[534] + QAAi[2][0] * v[538];
	v[587] = QAAi[2][1] * v[535] + QAAi[2][0] * v[539];
	v[588] = QAAi[2][1] * v[536] + QAAi[2][0] * v[540];
	v[589] = QAAi[1][1] * v[533] + QAAi[1][0] * v[537];
	v[695] = v[183] * v[589];
	v[590] = QAAi[1][1] * v[534] + QAAi[1][0] * v[538];
	v[739] = v[183] * v[590];
	v[591] = QAAi[1][1] * v[535] + QAAi[1][0] * v[539];
	v[783] = v[183] * v[591];
	v[592] = QAAi[1][1] * v[536] + QAAi[1][0] * v[540];
	v[830] = v[183] * v[592];
	v[593] = QAAi[0][1] * v[533] + QAAi[0][0] * v[537];
	v[698] = v[183] * v[593];
	v[594] = QAAi[0][1] * v[534] + QAAi[0][0] * v[538];
	v[742] = v[183] * v[594];
	v[595] = QAAi[0][1] * v[535] + QAAi[0][0] * v[539];
	v[786] = v[183] * v[595];
	v[596] = QAAi[0][1] * v[536] + QAAi[0][0] * v[540];
	v[833] = v[183] * v[596];
	v[597] = QAAi[2][1] * v[517] + QAAi[2][0] * v[521];
	v[696] = v[183] * v[597];
	v[598] = QAAi[2][1] * v[518] + QAAi[2][0] * v[522];
	v[740] = v[183] * v[598];
	v[599] = QAAi[2][1] * v[519] + QAAi[2][0] * v[523];
	v[784] = v[183] * v[599];
	v[600] = QAAi[2][1] * v[520] + QAAi[2][0] * v[524];
	v[831] = v[183] * v[600];
	v[601] = QAAi[1][1] * v[517] + QAAi[1][0] * v[521];
	v[602] = QAAi[1][1] * v[518] + QAAi[1][0] * v[522];
	v[603] = QAAi[1][1] * v[519] + QAAi[1][0] * v[523];
	v[604] = QAAi[1][1] * v[520] + QAAi[1][0] * v[524];
	v[605] = QAAi[0][1] * v[517] + QAAi[0][0] * v[521];
	v[703] = v[183] * v[605];
	v[606] = QAAi[0][1] * v[518] + QAAi[0][0] * v[522];
	v[747] = v[183] * v[606];
	v[607] = QAAi[0][1] * v[519] + QAAi[0][0] * v[523];
	v[791] = v[183] * v[607];
	v[608] = QAAi[0][1] * v[520] + QAAi[0][0] * v[524];
	v[838] = v[183] * v[608];
	v[609] = QAAi[2][1] * v[501] + QAAi[2][0] * v[505];
	v[699] = v[183] * v[609];
	v[610] = QAAi[2][1] * v[502] + QAAi[2][0] * v[506];
	v[743] = v[183] * v[610];
	v[611] = QAAi[2][1] * v[503] + QAAi[2][0] * v[507];
	v[787] = v[183] * v[611];
	v[612] = QAAi[2][1] * v[504] + QAAi[2][0] * v[508];
	v[834] = v[183] * v[612];
	v[613] = QAAi[1][1] * v[501] + QAAi[1][0] * v[505];
	v[704] = v[183] * v[613];
	v[614] = QAAi[1][1] * v[502] + QAAi[1][0] * v[506];
	v[748] = v[183] * v[614];
	v[615] = QAAi[1][1] * v[503] + QAAi[1][0] * v[507];
	v[792] = v[183] * v[615];
	v[616] = QAAi[1][1] * v[504] + QAAi[1][0] * v[508];
	v[839] = v[183] * v[616];
	v[617] = QAAi[0][1] * v[501] + QAAi[0][0] * v[505];
	v[618] = QAAi[0][1] * v[502] + QAAi[0][0] * v[506];
	v[619] = QAAi[0][1] * v[503] + QAAi[0][0] * v[507];
	v[620] = QAAi[0][1] * v[504] + QAAi[0][0] * v[508];
	v[622] = v[621] / 2e0;
	v[623] = -v[202] / 2e0;
	v[854] = v[584] * v[623];
	v[853] = v[568] * v[623];
	v[807] = v[583] * v[623];
	v[806] = v[567] * v[623];
	v[763] = v[582] * v[623];
	v[762] = v[566] * v[623];
	v[719] = v[581] * v[623];
	v[718] = v[565] * v[623];
	v[627] = v[708] + v[709];
	v[628] = v[752] + v[753];
	v[629] = v[796] + v[797];
	v[630] = v[843] + v[844];
	v[632] = v[631] / 2e0;
	v[635] = v[711] + v[712];
	v[636] = v[755] + v[756];
	v[637] = v[799] + v[800];
	v[638] = v[846] + v[847];
	v[640] = v[716] + v[717];
	v[641] = v[760] + v[761];
	v[642] = v[804] + v[805];
	v[643] = v[851] + v[852];
	v[645] = v[644] / 2e0;
	v[849] = v[1068] * (v[552] * v[622] + v[556] * v[624] + v[560] * v[625] + v[564] * v[626] + v[568] * v[632] + v[572] * v[633]
		+ v[576] * v[634] + v[580] * v[639] + v[584] * v[645]);
	v[3394] = v[552] * v[623] + v[849];
	v[802] = v[1068] * (v[551] * v[622] + v[555] * v[624] + v[559] * v[625] + v[563] * v[626] + v[567] * v[632] + v[571] * v[633]
		+ v[575] * v[634] + v[579] * v[639] + v[583] * v[645]);
	v[3392] = v[551] * v[623] + v[802];
	v[758] = v[1068] * (v[550] * v[622] + v[554] * v[624] + v[558] * v[625] + v[562] * v[626] + v[566] * v[632] + v[570] * v[633]
		+ v[574] * v[634] + v[578] * v[639] + v[582] * v[645]);
	v[3390] = v[550] * v[623] + v[758];
	v[714] = v[1068] * (v[549] * v[622] + v[553] * v[624] + v[557] * v[625] + v[561] * v[626] + v[565] * v[632] + v[569] * v[633]
		+ v[573] * v[634] + v[577] * v[639] + v[581] * v[645]);
	v[3388] = v[549] * v[623] + v[714];
	v[653] = v[652] / 2e0;
	v[654] = -v[183] / 2e0;
	v[841] = v[620] * v[654];
	v[840] = v[604] * v[654];
	v[794] = v[619] * v[654];
	v[793] = v[603] * v[654];
	v[750] = v[618] * v[654];
	v[749] = v[602] * v[654];
	v[706] = v[617] * v[654];
	v[705] = v[601] * v[654];
	v[658] = v[695] + v[696];
	v[659] = v[739] + v[740];
	v[660] = v[783] + v[784];
	v[661] = v[830] + v[831];
	v[663] = v[662] / 2e0;
	v[666] = v[698] + v[699];
	v[667] = v[742] + v[743];
	v[668] = v[786] + v[787];
	v[669] = v[833] + v[834];
	v[671] = v[703] + v[704];
	v[672] = v[747] + v[748];
	v[673] = v[791] + v[792];
	v[674] = v[838] + v[839];
	v[676] = v[675] / 2e0;
	v[836] = v[1075] * (v[588] * v[653] + v[592] * v[655] + v[596] * v[656] + v[600] * v[657] + v[604] * v[663] + v[608] * v[664]
		+ v[612] * v[665] + v[616] * v[670] + v[620] * v[676]);
	v[3393] = v[588] * v[654] + v[836];
	v[789] = v[1075] * (v[587] * v[653] + v[591] * v[655] + v[595] * v[656] + v[599] * v[657] + v[603] * v[663] + v[607] * v[664]
		+ v[611] * v[665] + v[615] * v[670] + v[619] * v[676]);
	v[3391] = v[587] * v[654] + v[789];
	v[745] = v[1075] * (v[586] * v[653] + v[590] * v[655] + v[594] * v[656] + v[598] * v[657] + v[602] * v[663] + v[606] * v[664]
		+ v[610] * v[665] + v[614] * v[670] + v[618] * v[676]);
	v[3389] = v[586] * v[654] + v[745];
	v[701] = v[1075] * (v[585] * v[653] + v[589] * v[655] + v[593] * v[656] + v[597] * v[657] + v[601] * v[663] + v[605] * v[664]
		+ v[609] * v[665] + v[613] * v[670] + v[617] * v[676]);
	v[3387] = v[585] * v[654] + v[701];
	v[697] = v[1084] * v[666] + v[1085] * v[671] + v[695] - v[696] + v[1087] * (v[3387] + v[705]);
	v[702] = v[1084] * v[658] + v[1083] * v[671] - v[698] + v[699] + v[1086] * (v[3387] + v[706]);
	v[707] = v[1085] * v[658] + v[1083] * v[666] + v[703] - v[704] + v[1082] * (v[701] + v[705] + v[706]);
	v[710] = v[1078] * v[635] + v[1079] * v[640] + v[708] - v[709] + v[1081] * (v[3388] + v[718]);
	v[715] = v[1078] * v[627] + v[1077] * v[640] - v[711] + v[712] + v[1080] * (v[3388] + v[719]);
	v[720] = v[1079] * v[627] + v[1077] * v[635] + v[716] - v[717] + v[1076] * (v[714] + v[718] + v[719]);
	v[721] = -(v[301] * v[428]);
	v[722] = -(v[301] * v[431]);
	v[723] = -(v[301] * v[434]);
	v[724] = -(v[3351] * v[428]);
	v[725] = -(v[3351] * v[431]);
	v[726] = -(v[3351] * v[434]);
	v[727] = -(v[3352] * v[428]);
	v[728] = -(v[3352] * v[431]);
	v[729] = -(v[3352] * v[434]);
	v[730] = -(v[310] * v[428]);
	v[731] = -(v[310] * v[431]);
	v[732] = -(v[310] * v[434]);
	v[733] = -(v[311] * v[428]);
	v[734] = -(v[311] * v[431]);
	v[735] = -(v[311] * v[434]);
	v[736] = -(v[313] * v[428]);
	v[737] = -(v[313] * v[431]);
	v[738] = -(v[313] * v[434]);
	v[741] = v[1084] * v[667] + v[1085] * v[672] + v[739] - v[740] + v[1087] * (v[3389] + v[749]);
	v[746] = v[1084] * v[659] + v[1083] * v[672] - v[742] + v[743] + v[1086] * (v[3389] + v[750]);
	v[751] = v[1085] * v[659] + v[1083] * v[667] + v[747] - v[748] + v[1082] * (v[745] + v[749] + v[750]);
	v[754] = v[1078] * v[636] + v[1079] * v[641] + v[752] - v[753] + v[1081] * (v[3390] + v[762]);
	v[759] = v[1078] * v[628] + v[1077] * v[641] - v[755] + v[756] + v[1080] * (v[3390] + v[763]);
	v[764] = v[1079] * v[628] + v[1077] * v[636] + v[760] - v[761] + v[1076] * (v[758] + v[762] + v[763]);
	v[765] = -(v[301] * v[450]);
	v[766] = -(v[301] * v[451]);
	v[767] = -(v[301] * v[452]);
	v[768] = -(v[3351] * v[450]);
	v[769] = -(v[3351] * v[451]);
	v[770] = -(v[3351] * v[452]);
	v[771] = -(v[3352] * v[450]);
	v[772] = -(v[3352] * v[451]);
	v[773] = -(v[3352] * v[452]);
	v[774] = -(v[310] * v[450]);
	v[775] = -(v[310] * v[451]);
	v[776] = -(v[310] * v[452]);
	v[777] = -(v[311] * v[450]);
	v[778] = -(v[311] * v[451]);
	v[779] = -(v[311] * v[452]);
	v[780] = -(v[313] * v[450]);
	v[781] = -(v[313] * v[451]);
	v[782] = -(v[313] * v[452]);
	v[785] = v[1084] * v[668] + v[1085] * v[673] + v[783] - v[784] + v[1087] * (v[3391] + v[793]);
	v[790] = v[1084] * v[660] + v[1083] * v[673] - v[786] + v[787] + v[1086] * (v[3391] + v[794]);
	v[795] = v[1085] * v[660] + v[1083] * v[668] + v[791] - v[792] + v[1082] * (v[789] + v[793] + v[794]);
	v[798] = v[1078] * v[637] + v[1079] * v[642] + v[796] - v[797] + v[1081] * (v[3392] + v[806]);
	v[803] = v[1078] * v[629] + v[1077] * v[642] - v[799] + v[800] + v[1080] * (v[3392] + v[807]);
	v[808] = v[1079] * v[629] + v[1077] * v[637] + v[804] - v[805] + v[1076] * (v[802] + v[806] + v[807]);
	v[809] = v[301] * v[459] + v[856];
	v[810] = v[301] * v[460] + v[858];
	v[811] = v[301] * v[461] + v[860];
	v[812] = -(v[399] * v[456]) + v[3351] * v[459];
	v[813] = -(v[400] * v[456]) + v[3351] * v[460];
	v[814] = -(v[401] * v[456]) + v[3351] * v[461];
	v[815] = v[3352] * v[459];
	v[816] = v[3352] * v[460];
	v[817] = v[3352] * v[461];
	v[818] = -(v[399] * v[457]) + v[310] * v[459];
	v[819] = -(v[400] * v[457]) + v[310] * v[460];
	v[820] = -(v[401] * v[457]) + v[310] * v[461];
	v[821] = v[311] * v[459] + v[824];
	v[822] = v[311] * v[460] + v[826];
	v[823] = v[311] * v[461] + v[828];
	v[825] = v[313] * v[459] - v[824];
	v[827] = v[313] * v[460] - v[826];
	v[829] = v[313] * v[461] - v[828];
	v[832] = v[1084] * v[669] + v[1085] * v[674] + v[830] - v[831] + v[1087] * (v[3393] + v[840]);
	v[837] = v[1084] * v[661] + v[1083] * v[674] - v[833] + v[834] + v[1086] * (v[3393] + v[841]);
	v[842] = v[1085] * v[661] + v[1083] * v[669] + v[838] - v[839] + v[1082] * (v[836] + v[840] + v[841]);
	v[845] = v[1078] * v[638] + v[1079] * v[643] + v[843] - v[844] + v[1081] * (v[3394] + v[853]);
	v[850] = v[1078] * v[630] + v[1077] * v[643] - v[846] + v[847] + v[1080] * (v[3394] + v[854]);
	v[855] = v[1079] * v[630] + v[1077] * v[638] + v[851] - v[852] + v[1076] * (v[849] + v[853] + v[854]);
	v[857] = v[301] * v[468] + v[856];
	v[859] = v[301] * v[470] + v[858];
	v[861] = v[301] * v[472] + v[860];
	v[862] = v[3351] * v[468];
	v[863] = v[3351] * v[470];
	v[864] = v[3351] * v[472];
	v[865] = -(v[399] * v[464]) + v[3352] * v[468];
	v[866] = -(v[400] * v[464]) + v[3352] * v[470];
	v[867] = -(v[401] * v[464]) + v[3352] * v[472];
	v[868] = v[310] * v[468] + v[871];
	v[869] = v[310] * v[470] + v[873];
	v[870] = v[310] * v[472] + v[875];
	v[872] = v[311] * v[468] - v[871];
	v[874] = v[311] * v[470] - v[873];
	v[876] = v[311] * v[472] - v[875];
	v[877] = -(v[399] * v[466]) + v[313] * v[468];
	v[878] = -(v[400] * v[466]) + v[313] * v[470];
	v[879] = -(v[401] * v[466]) + v[313] * v[472];
	v[896] = -(invH[0][0] * v[492]) - invH[0][1] * v[493] - invH[0][2] * v[494] - invH[0][3] * v[495];
	v[897] = -(invH[0][0] * v[483]) - invH[0][1] * v[484] - invH[0][2] * v[485] - invH[0][3] * v[486];
	v[898] = -(invH[0][0] * v[474]) - invH[0][1] * v[475] - invH[0][2] * v[476] - invH[0][3] * v[477];
	v[899] = -(invH[0][0] * v[697]) - invH[0][1] * v[741] - invH[0][2] * v[785] - invH[0][3] * v[832];
	v[900] = -(invH[0][0] * v[702]) - invH[0][1] * v[746] - invH[0][2] * v[790] - invH[0][3] * v[837];
	v[901] = -(invH[0][0] * v[707]) - invH[0][1] * v[751] - invH[0][2] * v[795] - invH[0][3] * v[842];
	v[902] = -(invH[0][0] * v[497]) - invH[0][1] * v[498] - invH[0][2] * v[499] - invH[0][3] * v[500];
	v[903] = -(invH[0][0] * v[488]) - invH[0][1] * v[489] - invH[0][2] * v[490] - invH[0][3] * v[491];
	v[904] = -(invH[0][0] * v[479]) - invH[0][1] * v[480] - invH[0][2] * v[481] - invH[0][3] * v[482];
	v[905] = -(invH[0][0] * v[710]) - invH[0][1] * v[754] - invH[0][2] * v[798] - invH[0][3] * v[845];
	v[906] = -(invH[0][0] * v[715]) - invH[0][1] * v[759] - invH[0][2] * v[803] - invH[0][3] * v[850];
	v[907] = -(invH[0][0] * v[720]) - invH[0][1] * v[764] - invH[0][2] * v[808] - invH[0][3] * v[855];
	v[908] = -(invH[0][0] * v[721]) - invH[0][1] * v[765] - invH[0][2] * v[809] - invH[0][3] * v[857];
	v[909] = -(invH[0][0] * v[722]) - invH[0][1] * v[766] - invH[0][2] * v[810] - invH[0][3] * v[859];
	v[910] = -(invH[0][0] * v[723]) - invH[0][1] * v[767] - invH[0][2] * v[811] - invH[0][3] * v[861];
	v[911] = -(invH[0][0] * v[724]) - invH[0][1] * v[768] - invH[0][2] * v[812] - invH[0][3] * v[862];
	v[912] = -(invH[0][0] * v[725]) - invH[0][1] * v[769] - invH[0][2] * v[813] - invH[0][3] * v[863];
	v[913] = -(invH[0][0] * v[726]) - invH[0][1] * v[770] - invH[0][2] * v[814] - invH[0][3] * v[864];
	v[914] = -(invH[0][0] * v[727]) - invH[0][1] * v[771] - invH[0][2] * v[815] - invH[0][3] * v[865];
	v[915] = -(invH[0][0] * v[728]) - invH[0][1] * v[772] - invH[0][2] * v[816] - invH[0][3] * v[866];
	v[916] = -(invH[0][0] * v[729]) - invH[0][1] * v[773] - invH[0][2] * v[817] - invH[0][3] * v[867];
	v[917] = -(invH[0][0] * v[730]) - invH[0][1] * v[774] - invH[0][2] * v[818] - invH[0][3] * v[868];
	v[918] = -(invH[0][0] * v[731]) - invH[0][1] * v[775] - invH[0][2] * v[819] - invH[0][3] * v[869];
	v[919] = -(invH[0][0] * v[732]) - invH[0][1] * v[776] - invH[0][2] * v[820] - invH[0][3] * v[870];
	v[920] = -(invH[0][0] * v[733]) - invH[0][1] * v[777] - invH[0][2] * v[821] - invH[0][3] * v[872];
	v[921] = -(invH[0][0] * v[734]) - invH[0][1] * v[778] - invH[0][2] * v[822] - invH[0][3] * v[874];
	v[922] = -(invH[0][0] * v[735]) - invH[0][1] * v[779] - invH[0][2] * v[823] - invH[0][3] * v[876];
	v[923] = -(invH[0][0] * v[736]) - invH[0][1] * v[780] - invH[0][2] * v[825] - invH[0][3] * v[877];
	v[924] = -(invH[0][0] * v[737]) - invH[0][1] * v[781] - invH[0][2] * v[827] - invH[0][3] * v[878];
	v[925] = -(invH[0][0] * v[738]) - invH[0][1] * v[782] - invH[0][2] * v[829] - invH[0][3] * v[879];
	v[1659] = -(v[323] * v[896]) - v[324] * v[897] - v[325] * v[898] - v[352] * v[899] - v[362] * v[900] - v[372] * v[901]
		- v[326] * v[902] - v[327] * v[903] - v[328] * v[904] - v[378] * v[905] - v[388] * v[906] - v[398] * v[907] - v[329] * v[908]
		- v[330] * v[909] - v[331] * v[910] - v[332] * v[911] - v[333] * v[912] - v[334] * v[913] - v[335] * v[914] - v[336] * v[915]
		- v[337] * v[916] - v[338] * v[917] - v[339] * v[918] - v[340] * v[919] - v[341] * v[920] - v[342] * v[921] - v[343] * v[922]
		- v[344] * v[923] - v[345] * v[924] - v[346] * v[925];
	v[4701] = v[896];
	v[4702] = v[897];
	v[4703] = v[898];
	v[4704] = v[899];
	v[4705] = v[900];
	v[4706] = v[901];
	v[4707] = v[902];
	v[4708] = v[903];
	v[4709] = v[904];
	v[4710] = v[905];
	v[4711] = v[906];
	v[4712] = v[907];
	v[4713] = v[908];
	v[4714] = v[909];
	v[4715] = v[910];
	v[4716] = v[911];
	v[4717] = v[912];
	v[4718] = v[913];
	v[4719] = v[914];
	v[4720] = v[915];
	v[4721] = v[916];
	v[4722] = v[917];
	v[4723] = v[918];
	v[4724] = v[919];
	v[4725] = v[920];
	v[4726] = v[921];
	v[4727] = v[922];
	v[4728] = v[923];
	v[4729] = v[924];
	v[4730] = v[925];
	v[926] = -(invH[1][0] * v[492]) - invH[1][1] * v[493] - invH[1][2] * v[494] - invH[1][3] * v[495];
	v[927] = -(invH[1][0] * v[483]) - invH[1][1] * v[484] - invH[1][2] * v[485] - invH[1][3] * v[486];
	v[928] = -(invH[1][0] * v[474]) - invH[1][1] * v[475] - invH[1][2] * v[476] - invH[1][3] * v[477];
	v[929] = -(invH[1][0] * v[697]) - invH[1][1] * v[741] - invH[1][2] * v[785] - invH[1][3] * v[832];
	v[930] = -(invH[1][0] * v[702]) - invH[1][1] * v[746] - invH[1][2] * v[790] - invH[1][3] * v[837];
	v[931] = -(invH[1][0] * v[707]) - invH[1][1] * v[751] - invH[1][2] * v[795] - invH[1][3] * v[842];
	v[932] = -(invH[1][0] * v[497]) - invH[1][1] * v[498] - invH[1][2] * v[499] - invH[1][3] * v[500];
	v[933] = -(invH[1][0] * v[488]) - invH[1][1] * v[489] - invH[1][2] * v[490] - invH[1][3] * v[491];
	v[934] = -(invH[1][0] * v[479]) - invH[1][1] * v[480] - invH[1][2] * v[481] - invH[1][3] * v[482];
	v[935] = -(invH[1][0] * v[710]) - invH[1][1] * v[754] - invH[1][2] * v[798] - invH[1][3] * v[845];
	v[936] = -(invH[1][0] * v[715]) - invH[1][1] * v[759] - invH[1][2] * v[803] - invH[1][3] * v[850];
	v[937] = -(invH[1][0] * v[720]) - invH[1][1] * v[764] - invH[1][2] * v[808] - invH[1][3] * v[855];
	v[938] = -(invH[1][0] * v[721]) - invH[1][1] * v[765] - invH[1][2] * v[809] - invH[1][3] * v[857];
	v[939] = -(invH[1][0] * v[722]) - invH[1][1] * v[766] - invH[1][2] * v[810] - invH[1][3] * v[859];
	v[940] = -(invH[1][0] * v[723]) - invH[1][1] * v[767] - invH[1][2] * v[811] - invH[1][3] * v[861];
	v[941] = -(invH[1][0] * v[724]) - invH[1][1] * v[768] - invH[1][2] * v[812] - invH[1][3] * v[862];
	v[942] = -(invH[1][0] * v[725]) - invH[1][1] * v[769] - invH[1][2] * v[813] - invH[1][3] * v[863];
	v[943] = -(invH[1][0] * v[726]) - invH[1][1] * v[770] - invH[1][2] * v[814] - invH[1][3] * v[864];
	v[944] = -(invH[1][0] * v[727]) - invH[1][1] * v[771] - invH[1][2] * v[815] - invH[1][3] * v[865];
	v[945] = -(invH[1][0] * v[728]) - invH[1][1] * v[772] - invH[1][2] * v[816] - invH[1][3] * v[866];
	v[946] = -(invH[1][0] * v[729]) - invH[1][1] * v[773] - invH[1][2] * v[817] - invH[1][3] * v[867];
	v[947] = -(invH[1][0] * v[730]) - invH[1][1] * v[774] - invH[1][2] * v[818] - invH[1][3] * v[868];
	v[948] = -(invH[1][0] * v[731]) - invH[1][1] * v[775] - invH[1][2] * v[819] - invH[1][3] * v[869];
	v[949] = -(invH[1][0] * v[732]) - invH[1][1] * v[776] - invH[1][2] * v[820] - invH[1][3] * v[870];
	v[950] = -(invH[1][0] * v[733]) - invH[1][1] * v[777] - invH[1][2] * v[821] - invH[1][3] * v[872];
	v[951] = -(invH[1][0] * v[734]) - invH[1][1] * v[778] - invH[1][2] * v[822] - invH[1][3] * v[874];
	v[952] = -(invH[1][0] * v[735]) - invH[1][1] * v[779] - invH[1][2] * v[823] - invH[1][3] * v[876];
	v[953] = -(invH[1][0] * v[736]) - invH[1][1] * v[780] - invH[1][2] * v[825] - invH[1][3] * v[877];
	v[954] = -(invH[1][0] * v[737]) - invH[1][1] * v[781] - invH[1][2] * v[827] - invH[1][3] * v[878];
	v[955] = -(invH[1][0] * v[738]) - invH[1][1] * v[782] - invH[1][2] * v[829] - invH[1][3] * v[879];
	v[1661] = -(v[323] * v[926]) - v[324] * v[927] - v[325] * v[928] - v[352] * v[929] - v[362] * v[930] - v[372] * v[931]
		- v[326] * v[932] - v[327] * v[933] - v[328] * v[934] - v[378] * v[935] - v[388] * v[936] - v[398] * v[937] - v[329] * v[938]
		- v[330] * v[939] - v[331] * v[940] - v[332] * v[941] - v[333] * v[942] - v[334] * v[943] - v[335] * v[944] - v[336] * v[945]
		- v[337] * v[946] - v[338] * v[947] - v[339] * v[948] - v[340] * v[949] - v[341] * v[950] - v[342] * v[951] - v[343] * v[952]
		- v[344] * v[953] - v[345] * v[954] - v[346] * v[955];
	v[4671] = v[926];
	v[4672] = v[927];
	v[4673] = v[928];
	v[4674] = v[929];
	v[4675] = v[930];
	v[4676] = v[931];
	v[4677] = v[932];
	v[4678] = v[933];
	v[4679] = v[934];
	v[4680] = v[935];
	v[4681] = v[936];
	v[4682] = v[937];
	v[4683] = v[938];
	v[4684] = v[939];
	v[4685] = v[940];
	v[4686] = v[941];
	v[4687] = v[942];
	v[4688] = v[943];
	v[4689] = v[944];
	v[4690] = v[945];
	v[4691] = v[946];
	v[4692] = v[947];
	v[4693] = v[948];
	v[4694] = v[949];
	v[4695] = v[950];
	v[4696] = v[951];
	v[4697] = v[952];
	v[4698] = v[953];
	v[4699] = v[954];
	v[4700] = v[955];
	v[956] = -(invH[2][0] * v[492]) - invH[2][1] * v[493] - invH[2][2] * v[494] - invH[2][3] * v[495];
	v[957] = -(invH[2][0] * v[483]) - invH[2][1] * v[484] - invH[2][2] * v[485] - invH[2][3] * v[486];
	v[958] = -(invH[2][0] * v[474]) - invH[2][1] * v[475] - invH[2][2] * v[476] - invH[2][3] * v[477];
	v[959] = -(invH[2][0] * v[697]) - invH[2][1] * v[741] - invH[2][2] * v[785] - invH[2][3] * v[832];
	v[960] = -(invH[2][0] * v[702]) - invH[2][1] * v[746] - invH[2][2] * v[790] - invH[2][3] * v[837];
	v[961] = -(invH[2][0] * v[707]) - invH[2][1] * v[751] - invH[2][2] * v[795] - invH[2][3] * v[842];
	v[962] = -(invH[2][0] * v[497]) - invH[2][1] * v[498] - invH[2][2] * v[499] - invH[2][3] * v[500];
	v[963] = -(invH[2][0] * v[488]) - invH[2][1] * v[489] - invH[2][2] * v[490] - invH[2][3] * v[491];
	v[964] = -(invH[2][0] * v[479]) - invH[2][1] * v[480] - invH[2][2] * v[481] - invH[2][3] * v[482];
	v[965] = -(invH[2][0] * v[710]) - invH[2][1] * v[754] - invH[2][2] * v[798] - invH[2][3] * v[845];
	v[966] = -(invH[2][0] * v[715]) - invH[2][1] * v[759] - invH[2][2] * v[803] - invH[2][3] * v[850];
	v[967] = -(invH[2][0] * v[720]) - invH[2][1] * v[764] - invH[2][2] * v[808] - invH[2][3] * v[855];
	v[968] = -(invH[2][0] * v[721]) - invH[2][1] * v[765] - invH[2][2] * v[809] - invH[2][3] * v[857];
	v[969] = -(invH[2][0] * v[722]) - invH[2][1] * v[766] - invH[2][2] * v[810] - invH[2][3] * v[859];
	v[970] = -(invH[2][0] * v[723]) - invH[2][1] * v[767] - invH[2][2] * v[811] - invH[2][3] * v[861];
	v[971] = -(invH[2][0] * v[724]) - invH[2][1] * v[768] - invH[2][2] * v[812] - invH[2][3] * v[862];
	v[972] = -(invH[2][0] * v[725]) - invH[2][1] * v[769] - invH[2][2] * v[813] - invH[2][3] * v[863];
	v[973] = -(invH[2][0] * v[726]) - invH[2][1] * v[770] - invH[2][2] * v[814] - invH[2][3] * v[864];
	v[974] = -(invH[2][0] * v[727]) - invH[2][1] * v[771] - invH[2][2] * v[815] - invH[2][3] * v[865];
	v[975] = -(invH[2][0] * v[728]) - invH[2][1] * v[772] - invH[2][2] * v[816] - invH[2][3] * v[866];
	v[976] = -(invH[2][0] * v[729]) - invH[2][1] * v[773] - invH[2][2] * v[817] - invH[2][3] * v[867];
	v[977] = -(invH[2][0] * v[730]) - invH[2][1] * v[774] - invH[2][2] * v[818] - invH[2][3] * v[868];
	v[978] = -(invH[2][0] * v[731]) - invH[2][1] * v[775] - invH[2][2] * v[819] - invH[2][3] * v[869];
	v[979] = -(invH[2][0] * v[732]) - invH[2][1] * v[776] - invH[2][2] * v[820] - invH[2][3] * v[870];
	v[980] = -(invH[2][0] * v[733]) - invH[2][1] * v[777] - invH[2][2] * v[821] - invH[2][3] * v[872];
	v[981] = -(invH[2][0] * v[734]) - invH[2][1] * v[778] - invH[2][2] * v[822] - invH[2][3] * v[874];
	v[982] = -(invH[2][0] * v[735]) - invH[2][1] * v[779] - invH[2][2] * v[823] - invH[2][3] * v[876];
	v[983] = -(invH[2][0] * v[736]) - invH[2][1] * v[780] - invH[2][2] * v[825] - invH[2][3] * v[877];
	v[984] = -(invH[2][0] * v[737]) - invH[2][1] * v[781] - invH[2][2] * v[827] - invH[2][3] * v[878];
	v[985] = -(invH[2][0] * v[738]) - invH[2][1] * v[782] - invH[2][2] * v[829] - invH[2][3] * v[879];
	v[1655] = v[323] * v[956] + v[324] * v[957] + v[325] * v[958] + v[352] * v[959] + v[362] * v[960] + v[372] * v[961]
		+ v[326] * v[962] + v[327] * v[963] + v[328] * v[964] + v[378] * v[965] + v[388] * v[966] + v[398] * v[967] + v[329] * v[968]
		+ v[330] * v[969] + v[331] * v[970] + v[332] * v[971] + v[333] * v[972] + v[334] * v[973] + v[335] * v[974] + v[336] * v[975]
		+ v[337] * v[976] + v[338] * v[977] + v[339] * v[978] + v[340] * v[979] + v[341] * v[980] + v[342] * v[981] + v[343] * v[982]
		+ v[344] * v[983] + v[345] * v[984] + v[346] * v[985];
	v[4641] = v[956];
	v[4642] = v[957];
	v[4643] = v[958];
	v[4644] = v[959];
	v[4645] = v[960];
	v[4646] = v[961];
	v[4647] = v[962];
	v[4648] = v[963];
	v[4649] = v[964];
	v[4650] = v[965];
	v[4651] = v[966];
	v[4652] = v[967];
	v[4653] = v[968];
	v[4654] = v[969];
	v[4655] = v[970];
	v[4656] = v[971];
	v[4657] = v[972];
	v[4658] = v[973];
	v[4659] = v[974];
	v[4660] = v[975];
	v[4661] = v[976];
	v[4662] = v[977];
	v[4663] = v[978];
	v[4664] = v[979];
	v[4665] = v[980];
	v[4666] = v[981];
	v[4667] = v[982];
	v[4668] = v[983];
	v[4669] = v[984];
	v[4670] = v[985];
	v[986] = -(invH[3][0] * v[492]) - invH[3][1] * v[493] - invH[3][2] * v[494] - invH[3][3] * v[495];
	v[1521] = v[434] * v[896] + v[452] * v[926] - v[461] * v[956] - v[472] * v[986];
	v[1520] = v[431] * v[896] + v[451] * v[926] - v[460] * v[956] - v[470] * v[986];
	v[1519] = v[428] * v[896] + v[450] * v[926] - v[459] * v[956] - v[468] * v[986];
	v[987] = -(invH[3][0] * v[483]) - invH[3][1] * v[484] - invH[3][2] * v[485] - invH[3][3] * v[486];
	v[1525] = v[434] * v[897] + v[452] * v[927] - v[461] * v[957] - v[472] * v[987];
	v[1524] = v[431] * v[897] + v[451] * v[927] - v[460] * v[957] - v[470] * v[987];
	v[1523] = v[428] * v[897] + v[450] * v[927] - v[459] * v[957] - v[468] * v[987];
	v[988] = -(invH[3][0] * v[474]) - invH[3][1] * v[475] - invH[3][2] * v[476] - invH[3][3] * v[477];
	v[1529] = v[434] * v[898] + v[452] * v[928] - v[461] * v[958] - v[472] * v[988];
	v[1528] = v[431] * v[898] + v[451] * v[928] - v[460] * v[958] - v[470] * v[988];
	v[1527] = v[428] * v[898] + v[450] * v[928] - v[459] * v[958] - v[468] * v[988];
	v[989] = -(invH[3][0] * v[697]) - invH[3][1] * v[741] - invH[3][2] * v[785] - invH[3][3] * v[832];
	v[1533] = v[434] * v[899] + v[452] * v[929] - v[461] * v[959] - v[472] * v[989];
	v[1532] = v[431] * v[899] + v[451] * v[929] - v[460] * v[959] - v[470] * v[989];
	v[1531] = v[428] * v[899] + v[450] * v[929] - v[459] * v[959] - v[468] * v[989];
	v[990] = -(invH[3][0] * v[702]) - invH[3][1] * v[746] - invH[3][2] * v[790] - invH[3][3] * v[837];
	v[1537] = v[434] * v[900] + v[452] * v[930] - v[461] * v[960] - v[472] * v[990];
	v[1536] = v[431] * v[900] + v[451] * v[930] - v[460] * v[960] - v[470] * v[990];
	v[1535] = v[428] * v[900] + v[450] * v[930] - v[459] * v[960] - v[468] * v[990];
	v[991] = -(invH[3][0] * v[707]) - invH[3][1] * v[751] - invH[3][2] * v[795] - invH[3][3] * v[842];
	v[1541] = v[434] * v[901] + v[452] * v[931] - v[461] * v[961] - v[472] * v[991];
	v[1540] = v[431] * v[901] + v[451] * v[931] - v[460] * v[961] - v[470] * v[991];
	v[1539] = v[428] * v[901] + v[450] * v[931] - v[459] * v[961] - v[468] * v[991];
	v[992] = -(invH[3][0] * v[497]) - invH[3][1] * v[498] - invH[3][2] * v[499] - invH[3][3] * v[500];
	v[1545] = v[434] * v[902] + v[452] * v[932] - v[461] * v[962] - v[472] * v[992];
	v[1544] = v[431] * v[902] + v[451] * v[932] - v[460] * v[962] - v[470] * v[992];
	v[1543] = v[428] * v[902] + v[450] * v[932] - v[459] * v[962] - v[468] * v[992];
	v[993] = -(invH[3][0] * v[488]) - invH[3][1] * v[489] - invH[3][2] * v[490] - invH[3][3] * v[491];
	v[1549] = v[434] * v[903] + v[452] * v[933] - v[461] * v[963] - v[472] * v[993];
	v[1548] = v[431] * v[903] + v[451] * v[933] - v[460] * v[963] - v[470] * v[993];
	v[1547] = v[428] * v[903] + v[450] * v[933] - v[459] * v[963] - v[468] * v[993];
	v[994] = -(invH[3][0] * v[479]) - invH[3][1] * v[480] - invH[3][2] * v[481] - invH[3][3] * v[482];
	v[1553] = v[434] * v[904] + v[452] * v[934] - v[461] * v[964] - v[472] * v[994];
	v[1552] = v[431] * v[904] + v[451] * v[934] - v[460] * v[964] - v[470] * v[994];
	v[1551] = v[428] * v[904] + v[450] * v[934] - v[459] * v[964] - v[468] * v[994];
	v[995] = -(invH[3][0] * v[710]) - invH[3][1] * v[754] - invH[3][2] * v[798] - invH[3][3] * v[845];
	v[1557] = v[434] * v[905] + v[452] * v[935] - v[461] * v[965] - v[472] * v[995];
	v[1556] = v[431] * v[905] + v[451] * v[935] - v[460] * v[965] - v[470] * v[995];
	v[1555] = v[428] * v[905] + v[450] * v[935] - v[459] * v[965] - v[468] * v[995];
	v[996] = -(invH[3][0] * v[715]) - invH[3][1] * v[759] - invH[3][2] * v[803] - invH[3][3] * v[850];
	v[1561] = v[434] * v[906] + v[452] * v[936] - v[461] * v[966] - v[472] * v[996];
	v[1560] = v[431] * v[906] + v[451] * v[936] - v[460] * v[966] - v[470] * v[996];
	v[1559] = v[428] * v[906] + v[450] * v[936] - v[459] * v[966] - v[468] * v[996];
	v[997] = -(invH[3][0] * v[720]) - invH[3][1] * v[764] - invH[3][2] * v[808] - invH[3][3] * v[855];
	v[1565] = v[434] * v[907] + v[452] * v[937] - v[461] * v[967] - v[472] * v[997];
	v[1564] = v[431] * v[907] + v[451] * v[937] - v[460] * v[967] - v[470] * v[997];
	v[1563] = v[428] * v[907] + v[450] * v[937] - v[459] * v[967] - v[468] * v[997];
	v[998] = -(invH[3][0] * v[721]) - invH[3][1] * v[765] - invH[3][2] * v[809] - invH[3][3] * v[857];
	v[1569] = v[434] * v[908] + v[452] * v[938] - v[461] * v[968] - v[472] * v[998];
	v[1568] = v[431] * v[908] + v[451] * v[938] - v[460] * v[968] - v[470] * v[998];
	v[1567] = v[428] * v[908] + v[450] * v[938] - v[459] * v[968] - v[468] * v[998];
	v[999] = -(invH[3][0] * v[722]) - invH[3][1] * v[766] - invH[3][2] * v[810] - invH[3][3] * v[859];
	v[1573] = v[434] * v[909] + v[452] * v[939] - v[461] * v[969] - v[472] * v[999];
	v[1572] = v[431] * v[909] + v[451] * v[939] - v[460] * v[969] - v[470] * v[999];
	v[1571] = v[428] * v[909] + v[450] * v[939] - v[459] * v[969] - v[468] * v[999];
	v[1000] = -(invH[3][0] * v[723]) - invH[3][1] * v[767] - invH[3][2] * v[811] - invH[3][3] * v[861];
	v[1577] = -(v[1000] * v[472]) + v[434] * v[910] + v[452] * v[940] - v[461] * v[970];
	v[1576] = -(v[1000] * v[470]) + v[431] * v[910] + v[451] * v[940] - v[460] * v[970];
	v[1575] = -(v[1000] * v[468]) + v[428] * v[910] + v[450] * v[940] - v[459] * v[970];
	v[1001] = -(invH[3][0] * v[724]) - invH[3][1] * v[768] - invH[3][2] * v[812] - invH[3][3] * v[862];
	v[1581] = -(v[1001] * v[472]) + v[434] * v[911] + v[452] * v[941] - v[461] * v[971];
	v[1580] = -(v[1001] * v[470]) + v[431] * v[911] + v[451] * v[941] - v[460] * v[971];
	v[1579] = -(v[1001] * v[468]) + v[428] * v[911] + v[450] * v[941] - v[459] * v[971];
	v[1002] = -(invH[3][0] * v[725]) - invH[3][1] * v[769] - invH[3][2] * v[813] - invH[3][3] * v[863];
	v[1585] = -(v[1002] * v[472]) + v[434] * v[912] + v[452] * v[942] - v[461] * v[972];
	v[1584] = -(v[1002] * v[470]) + v[431] * v[912] + v[451] * v[942] - v[460] * v[972];
	v[1583] = -(v[1002] * v[468]) + v[428] * v[912] + v[450] * v[942] - v[459] * v[972];
	v[1003] = -(invH[3][0] * v[726]) - invH[3][1] * v[770] - invH[3][2] * v[814] - invH[3][3] * v[864];
	v[1589] = -(v[1003] * v[472]) + v[434] * v[913] + v[452] * v[943] - v[461] * v[973];
	v[1588] = -(v[1003] * v[470]) + v[431] * v[913] + v[451] * v[943] - v[460] * v[973];
	v[1587] = -(v[1003] * v[468]) + v[428] * v[913] + v[450] * v[943] - v[459] * v[973];
	v[1004] = -(invH[3][0] * v[727]) - invH[3][1] * v[771] - invH[3][2] * v[815] - invH[3][3] * v[865];
	v[1593] = -(v[1004] * v[472]) + v[434] * v[914] + v[452] * v[944] - v[461] * v[974];
	v[1592] = -(v[1004] * v[470]) + v[431] * v[914] + v[451] * v[944] - v[460] * v[974];
	v[1591] = -(v[1004] * v[468]) + v[428] * v[914] + v[450] * v[944] - v[459] * v[974];
	v[1005] = -(invH[3][0] * v[728]) - invH[3][1] * v[772] - invH[3][2] * v[816] - invH[3][3] * v[866];
	v[1597] = -(v[1005] * v[472]) + v[434] * v[915] + v[452] * v[945] - v[461] * v[975];
	v[1596] = -(v[1005] * v[470]) + v[431] * v[915] + v[451] * v[945] - v[460] * v[975];
	v[1595] = -(v[1005] * v[468]) + v[428] * v[915] + v[450] * v[945] - v[459] * v[975];
	v[1006] = -(invH[3][0] * v[729]) - invH[3][1] * v[773] - invH[3][2] * v[817] - invH[3][3] * v[867];
	v[1601] = -(v[1006] * v[472]) + v[434] * v[916] + v[452] * v[946] - v[461] * v[976];
	v[1600] = -(v[1006] * v[470]) + v[431] * v[916] + v[451] * v[946] - v[460] * v[976];
	v[1599] = -(v[1006] * v[468]) + v[428] * v[916] + v[450] * v[946] - v[459] * v[976];
	v[1007] = -(invH[3][0] * v[730]) - invH[3][1] * v[774] - invH[3][2] * v[818] - invH[3][3] * v[868];
	v[1605] = -(v[1007] * v[472]) + v[434] * v[917] + v[452] * v[947] - v[461] * v[977];
	v[1604] = -(v[1007] * v[470]) + v[431] * v[917] + v[451] * v[947] - v[460] * v[977];
	v[1603] = -(v[1007] * v[468]) + v[428] * v[917] + v[450] * v[947] - v[459] * v[977];
	v[1008] = -(invH[3][0] * v[731]) - invH[3][1] * v[775] - invH[3][2] * v[819] - invH[3][3] * v[869];
	v[1609] = -(v[1008] * v[472]) + v[434] * v[918] + v[452] * v[948] - v[461] * v[978];
	v[1608] = -(v[1008] * v[470]) + v[431] * v[918] + v[451] * v[948] - v[460] * v[978];
	v[1607] = -(v[1008] * v[468]) + v[428] * v[918] + v[450] * v[948] - v[459] * v[978];
	v[1009] = -(invH[3][0] * v[732]) - invH[3][1] * v[776] - invH[3][2] * v[820] - invH[3][3] * v[870];
	v[1613] = -(v[1009] * v[472]) + v[434] * v[919] + v[452] * v[949] - v[461] * v[979];
	v[1612] = -(v[1009] * v[470]) + v[431] * v[919] + v[451] * v[949] - v[460] * v[979];
	v[1611] = -(v[1009] * v[468]) + v[428] * v[919] + v[450] * v[949] - v[459] * v[979];
	v[1010] = -(invH[3][0] * v[733]) - invH[3][1] * v[777] - invH[3][2] * v[821] - invH[3][3] * v[872];
	v[1617] = -(v[1010] * v[472]) + v[434] * v[920] + v[452] * v[950] - v[461] * v[980];
	v[1616] = -(v[1010] * v[470]) + v[431] * v[920] + v[451] * v[950] - v[460] * v[980];
	v[1615] = -(v[1010] * v[468]) + v[428] * v[920] + v[450] * v[950] - v[459] * v[980];
	v[1011] = -(invH[3][0] * v[734]) - invH[3][1] * v[778] - invH[3][2] * v[822] - invH[3][3] * v[874];
	v[1621] = -(v[1011] * v[472]) + v[434] * v[921] + v[452] * v[951] - v[461] * v[981];
	v[1620] = -(v[1011] * v[470]) + v[431] * v[921] + v[451] * v[951] - v[460] * v[981];
	v[1619] = -(v[1011] * v[468]) + v[428] * v[921] + v[450] * v[951] - v[459] * v[981];
	v[1012] = -(invH[3][0] * v[735]) - invH[3][1] * v[779] - invH[3][2] * v[823] - invH[3][3] * v[876];
	v[1625] = -(v[1012] * v[472]) + v[434] * v[922] + v[452] * v[952] - v[461] * v[982];
	v[1624] = -(v[1012] * v[470]) + v[431] * v[922] + v[451] * v[952] - v[460] * v[982];
	v[1623] = -(v[1012] * v[468]) + v[428] * v[922] + v[450] * v[952] - v[459] * v[982];
	v[1013] = -(invH[3][0] * v[736]) - invH[3][1] * v[780] - invH[3][2] * v[825] - invH[3][3] * v[877];
	v[1629] = -(v[1013] * v[472]) + v[434] * v[923] + v[452] * v[953] - v[461] * v[983];
	v[1628] = -(v[1013] * v[470]) + v[431] * v[923] + v[451] * v[953] - v[460] * v[983];
	v[1627] = -(v[1013] * v[468]) + v[428] * v[923] + v[450] * v[953] - v[459] * v[983];
	v[1014] = -(invH[3][0] * v[737]) - invH[3][1] * v[781] - invH[3][2] * v[827] - invH[3][3] * v[878];
	v[1633] = -(v[1014] * v[472]) + v[434] * v[924] + v[452] * v[954] - v[461] * v[984];
	v[1632] = -(v[1014] * v[470]) + v[431] * v[924] + v[451] * v[954] - v[460] * v[984];
	v[1631] = -(v[1014] * v[468]) + v[428] * v[924] + v[450] * v[954] - v[459] * v[984];
	v[1015] = -(invH[3][0] * v[738]) - invH[3][1] * v[782] - invH[3][2] * v[829] - invH[3][3] * v[879];
	v[1657] = v[1000] * v[331] + v[1001] * v[332] + v[1002] * v[333] + v[1003] * v[334] + v[1004] * v[335] + v[1005] * v[336]
		+ v[1006] * v[337] + v[1007] * v[338] + v[1008] * v[339] + v[1009] * v[340] + v[1010] * v[341] + v[1011] * v[342]
		+ v[1012] * v[343] + v[1013] * v[344] + v[1014] * v[345] + v[1015] * v[346] + v[323] * v[986] + v[324] * v[987]
		+ v[325] * v[988] + v[352] * v[989] + v[362] * v[990] + v[372] * v[991] + v[326] * v[992] + v[327] * v[993] + v[328] * v[994]
		+ v[378] * v[995] + v[388] * v[996] + v[398] * v[997] + v[329] * v[998] + v[330] * v[999];
	v[1637] = -(v[1015] * v[472]) + v[434] * v[925] + v[452] * v[955] - v[461] * v[985];
	v[1636] = -(v[1015] * v[470]) + v[431] * v[925] + v[451] * v[955] - v[460] * v[985];
	v[1635] = -(v[1015] * v[468]) + v[428] * v[925] + v[450] * v[955] - v[459] * v[985];
	v[4611] = v[986];
	v[4612] = v[987];
	v[4613] = v[988];
	v[4614] = v[989];
	v[4615] = v[990];
	v[4616] = v[991];
	v[4617] = v[992];
	v[4618] = v[993];
	v[4619] = v[994];
	v[4620] = v[995];
	v[4621] = v[996];
	v[4622] = v[997];
	v[4623] = v[998];
	v[4624] = v[999];
	v[4625] = v[1000];
	v[4626] = v[1001];
	v[4627] = v[1002];
	v[4628] = v[1003];
	v[4629] = v[1004];
	v[4630] = v[1005];
	v[4631] = v[1006];
	v[4632] = v[1007];
	v[4633] = v[1008];
	v[4634] = v[1009];
	v[4635] = v[1010];
	v[4636] = v[1011];
	v[4637] = v[1012];
	v[4638] = v[1013];
	v[4639] = v[1014];
	v[4640] = v[1015];
	b1016 = sqrt(Power(v[415] * v[423] - v[414] * v[424], 2) + Power(-(v[416] * v[423]) + v[414] * v[425], 2) + Power
	(v[416] * v[424] - v[415] * v[425], 2)) > 0.1e-7;
	if (b1016) {
		v[1018] = v[416] * v[424] - v[415] * v[425];
		v[1019] = -(v[416] * v[423]) + v[414] * v[425];
		v[1020] = v[415] * v[423] - v[414] * v[424];
		v[1021] = sqrt((v[1018] * v[1018]) + (v[1019] * v[1019]) + (v[1020] * v[1020]));
		v[2245] = 1e0 / Power(v[1021], 2);
		v[1766] = v[1021];
		v[2256] = 1e0 - (v[1766] * v[1766]);
		v[3844] = 1e0 / Power(v[2256], 0.15e1);
		v[2251] = 1e0 / sqrt(v[2256]);
		v[1765] = asin(v[1766]) / 2e0;
		v[3843] = tan(v[1765]);
		v[2250] = 1e0 / Power(cos(v[1765]), 2);
		v[3554] = v[2250] * v[2251];
		v[1023] = 2e0*tan(v[1765]);
		if (v[1021] > 0.1e-7) { v07 = 1e0 / v[1021]; v08 = (-(v07 / v[1021])); v09 = (2e0*v07) / Power(v[1021], 2); }
		else {
			v07 = (12500000e0 / 3e0)*(24e0 - (-0.1e-7 + v[1021])*(0.7199999994e10 - 0.7199999982e18*v[1021] + 0.6e25*Power
			(v[1021], 3) + 0.23999999819999998e26*(v[1021] * v[1021])));
			v08 = (-50000000e0 / 3e0)*(0.3599999994e10 - 0.4799999982e18*v[1021] + 0.6e25*Power(v[1021], 3)
				+ 0.1799999982e26*(v[1021] * v[1021]));
			v09 = 0.1e17*(799999997e0 - 0.599999994e17*v[1021] - 0.3e17*(v[1021] * v[1021]));
		};
		v[1027] = v09;
		v[1028] = v08;
		v[1029] = v07;
		v[3842] = v[1023] * v[1028] + v[1029] * v[3554];
		v[3395] = v[1023] * v[1029];
		v[1030] = v[1018] * v[3395];
		v[1041] = (v[1030] * v[1030]);
		v[1031] = v[1019] * v[3395];
		v[1039] = (v[1030] * v[1031]) / 2e0;
		v[1034] = (v[1031] * v[1031]);
		v[1749] = -v[1034] - v[1041];
		v[1032] = v[1020] * v[3395];
		v[1744] = v[1032] + v[1039];
		v[1742] = -v[1032] + v[1039];
		v[1046] = (v[1031] * v[1032]) / 2e0;
		v[1748] = v[1030] + v[1046];
		v[1746] = -v[1030] + v[1046];
		v[1044] = (v[1030] * v[1032]) / 2e0;
		v[1747] = -v[1031] + v[1044];
		v[1743] = v[1031] + v[1044];
		v[1035] = (v[1032] * v[1032]);
		v[1753] = 4e0 + v[1034] + v[1035] + v[1041];
		v[3845] = 1e0 / Power(v[1753], 3);
		v[2631] = 1e0 / Power(v[1753], 2);
		v[1745] = -v[1035] - v[1041];
		v[1741] = -v[1034] - v[1035];
		v[1033] = 4e0 / v[1753];
		v[1036] = 1e0 + (v[1033] * v[1741]) / 2e0;
		v[1037] = v[1033] * v[1742];
		v[1038] = v[1033] * v[1743];
		v[1040] = v[1033] * v[1744];
		v[1042] = 1e0 + (v[1033] * v[1745]) / 2e0;
		v[1043] = v[1033] * v[1746];
		v[1045] = v[1033] * v[1747];
		v[1047] = v[1033] * v[1748];
		v[1048] = 1e0 + (v[1033] * v[1749]) / 2e0;
	}
	else {
		v[1036] = 1e0;
		v[1037] = 0e0;
		v[1038] = 0e0;
		v[1040] = 0e0;
		v[1042] = 1e0;
		v[1043] = 0e0;
		v[1045] = 0e0;
		v[1047] = 0e0;
		v[1048] = 1e0;
	};
	if ((*previouscontact)) {
		v[1695] = 1e0 - v[1138];
		v[1693] = 1e0 - v[1110];
		v[1691] = 1e0 - v[1088];
		v[1053] = gti[0] * v[1045] + gti[1] * v[1047] + gti[2] * v[1048] + v[245] * (v[241] + v[227] * v[252] + v[228] * v[254])
			+ v[246] * (v[244] + v[236] * v[252] + v[237] * v[254]) - v[272] * v[288] - v[281] * v[297] - v[284] * v[298]
			- v[287] * v[300] - v[275] * v[3349] - v[278] * v[3350];
		v[3396] = v[1053] * v[416];
		v[1052] = gti[0] * v[1040] + gti[1] * v[1042] + gti[2] * v[1043] + v[245] * (v[240] + v[224] * v[252] + v[225] * v[254])
			+ v[246] * (v[243] + v[233] * v[252] + v[234] * v[254]) - v[271] * v[288] - v[280] * v[297] - v[283] * v[298]
			- v[286] * v[300] - v[274] * v[3349] - v[277] * v[3350];
		v[3398] = v[1052] * v[415];
		v[3481] = v[3396] + v[3398];
		v[1051] = gti[0] * v[1036] + gti[1] * v[1037] + gti[2] * v[1038] + v[245] * (v[239] + v[221] * v[252] + v[222] * v[254])
			+ v[246] * (v[242] + v[230] * v[252] + v[231] * v[254]) - v[270] * v[288] - v[279] * v[297] - v[282] * v[298]
			- v[285] * v[300] - v[273] * v[3349] - v[276] * v[3350];
		v[3397] = -(v[1051] * v[414]);
		v[3480] = -v[3396] + v[3397];
		v[3479] = v[3397] - v[3398];
		v[1050] = v[1051] * v[1691] - v[3481] * v[414];
		v[1054] = v[1052] * v[1693] + v[3480] * v[415];
		v[1055] = v[1053] * v[1695] + v[3479] * v[416];
	}
	else {
		v[1050] = 0e0;
		v[1054] = 0e0;
		v[1055] = 0e0;
	};
	v[1089] = -v[1064] / 2e0 + v[3400];
	v[1123] = v[1062] + v[1063] * v[1077] + v[1080] * v[1089];
	v[2541] = v[1123] * v[414];
	v[1119] = -v[1063] + v[1062] * v[1077] + v[1076] * v[1089];
	v[2540] = v[1119] * v[414];
	v[1090] = -v[1063] / 2e0 + v[3401];
	v[1126] = -v[1062] + v[1064] * v[1079] + v[1081] * v[1090];
	v[2552] = v[1126] * v[415];
	v[1120] = v[1064] + v[1062] * v[1079] + v[1076] * v[1090];
	v[2548] = v[1120] * v[415];
	v[3412] = v[2540] + v[2548];
	v[1091] = v[1064] * v[1077];
	v[1092] = v[1063] * v[1079];
	v[1121] = v[1091] + v[1092] + v[1076] * v[3402];
	v[3399] = v[1121] * v[416];
	v[3436] = v[2540] + v[3399];
	v[3430] = v[2548] + v[3399];
	v[2652] = v[1121] * v[1138] + v[3412] * v[416];
	v[2651] = v[1110] * v[1120] + v[3436] * v[415];
	v[2650] = v[1088] * v[1119] + v[3430] * v[414];
	v[1093] = v[1062] * v[1078];
	v[1125] = v[1092] + v[1093] + v[1081] * v[3400];
	v[2542] = v[1125] * v[414];
	v[3414] = v[2542] + v[2552];
	v[1122] = v[1091] + v[1093] + v[1080] * v[3401];
	v[2550] = v[1122] * v[415];
	v[3413] = v[2541] + v[2550];
	v[1094] = -v[1062] / 2e0 + v[3402];
	v[1127] = v[1063] + v[1064] * v[1078] + v[1081] * v[1094];
	v[3403] = v[1127] * v[416];
	v[3438] = v[2542] + v[3403];
	v[3432] = v[2552] + v[3403];
	v[2660] = v[1127] * v[1138] + v[3414] * v[416];
	v[2659] = v[1110] * v[1126] + v[3438] * v[415];
	v[2658] = v[1088] * v[1125] + v[3432] * v[414];
	v[1124] = -v[1064] + v[1063] * v[1078] + v[1080] * v[1094];
	v[3404] = v[1124] * v[416];
	v[3437] = v[2541] + v[3404];
	v[3431] = v[2550] + v[3404];
	v[2656] = v[1124] * v[1138] + v[3413] * v[416];
	v[2655] = v[1110] * v[1122] + v[3437] * v[415];
	v[2654] = v[1088] * v[1123] + v[3431] * v[414];
	v[1095] = -v[1071] / 2e0 + v[3406];
	v[1132] = v[1069] + v[1070] * v[1083] + v[1086] * v[1095];
	v[2544] = v[1132] * v[414];
	v[1128] = -v[1070] + v[1069] * v[1083] + v[1082] * v[1095];
	v[2543] = v[1128] * v[414];
	v[1096] = -v[1070] / 2e0 + v[3409];
	v[1135] = -v[1069] + v[1071] * v[1085] + v[1087] * v[1096];
	v[2558] = v[1135] * v[415];
	v[1129] = v[1071] + v[1069] * v[1085] + v[1082] * v[1096];
	v[2554] = v[1129] * v[415];
	v[3415] = v[2543] + v[2554];
	v[1097] = v[1071] * v[1083];
	v[1098] = v[1070] * v[1085];
	v[1130] = v[1097] + v[1098] + v[1082] * v[3416];
	v[3405] = v[1130] * v[416];
	v[3439] = v[2543] + v[3405];
	v[3433] = v[2554] + v[3405];
	v[2664] = v[1130] * v[1138] + v[3415] * v[416];
	v[2663] = v[1110] * v[1129] + v[3439] * v[415];
	v[2662] = v[1088] * v[1128] + v[3433] * v[414];
	v[1099] = v[1069] * v[1084];
	v[1134] = v[1098] + v[1099] + v[1087] * v[3406];
	v[3407] = v[1134] * v[352] + v[1132] * v[362] + v[1128] * v[372] + v[1125] * v[378] + v[1123] * v[388] + v[1119] * v[398];
	v[3408] = v[247] * v[323] + v[248] * v[326] - v[301] * v[329] - v[332] * v[3351] - v[335] * v[3352] - v[310] * v[338]
		+ v[3407] - v[311] * v[341] - v[313] * v[344];
	v[3155] = v[3408] * v[416];
	v[3154] = v[3407] * v[415];
	v[2545] = v[1134] * v[414];
	v[3417] = v[2545] + v[2558];
	v[1131] = v[1097] + v[1099] + v[1086] * v[3409];
	v[3411] = v[1135] * v[352] + v[1131] * v[362] + v[1129] * v[372] + v[1126] * v[378] + v[1122] * v[388] + v[1120] * v[398];
	v[3410] = v[247] * v[324] + v[248] * v[327] - v[301] * v[330] - v[333] * v[3351] - v[3352] * v[336] - v[310] * v[339]
		+ v[3411] - v[311] * v[342] - v[313] * v[345];
	v[3149] = v[3410] * v[416];
	v[3145] = v[3411] * v[414];
	v[2556] = v[1131] * v[415];
	v[3428] = v[2544] + v[2556];
	v[3142] = v[3442] + v[3417] * v[352] + v[3428] * v[362] + v[3415] * v[372] + v[3414] * v[378] + v[3413] * v[388]
		+ v[3412] * v[398];
	v[1100] = -v[1069] / 2e0 + v[3416];
	v[1136] = v[1070] + v[1071] * v[1084] + v[1087] * v[1100];
	v[3418] = v[1136] * v[416];
	v[3441] = v[2545] + v[3418];
	v[3435] = v[2558] + v[3418];
	v[2672] = v[1136] * v[1138] + v[3417] * v[416];
	v[2671] = v[1110] * v[1135] + v[3441] * v[415];
	v[2670] = v[1088] * v[1134] + v[3435] * v[414];
	v[1133] = -v[1071] + v[1070] * v[1084] + v[1086] * v[1100];
	v[3429] = v[1133] * v[416];
	v[3440] = v[2544] + v[3429];
	v[3434] = v[2556] + v[3429];
	v[3427] = v[1136] * v[352] + v[1133] * v[362] + v[1130] * v[372] + v[1127] * v[378] + v[1124] * v[388] + v[1121] * v[398];
	v[3143] = v[3419] + v[3420] + v[3421] + v[3422] + v[3423] + v[3424] + v[3425] + v[3426] + v[3427];
	v[3600] = v[3143] - v[3427];
	v[3141] = v[3427] * v[415];
	v[3140] = v[3427] * v[414];
	v[2668] = v[1133] * v[1138] + v[3428] * v[416];
	v[2667] = v[1110] * v[1131] + v[3440] * v[415];
	v[2666] = v[1088] * v[1132] + v[3434] * v[414];
	v[3153] = v[2547] + v[3435] * v[352] + v[3434] * v[362] + v[3433] * v[372] + v[3432] * v[378] + v[3431] * v[388]
		+ v[3430] * v[398];
	v[3148] = v[2547] + v[3441] * v[352] + v[3440] * v[362] + v[3439] * v[372] + v[3438] * v[378] + v[3437] * v[388]
		+ v[3436] * v[398];
	v[1149] = (*epsn)*v[399];
	v[3460] = v[1149] * v[248];
	v[3459] = v[1149] * v[247];
	v[1150] = (*epsn)*v[400];
	v[3462] = v[1150] * v[248];
	v[3461] = v[1150] * v[247];
	v[1151] = (*epsn)*v[401];
	v[5725] = 0e0;
	v[5726] = 0e0;
	v[5727] = 0e0;
	v[5728] = 0e0;
	v[5729] = 0e0;
	v[5730] = 0e0;
	v[5731] = 0e0;
	v[5732] = 0e0;
	v[5733] = 0e0;
	v[5734] = 0e0;
	v[5735] = 0e0;
	v[5736] = 0e0;
	v[5737] = 0e0;
	v[5738] = 0e0;
	v[5739] = 0e0;
	v[5740] = 0e0;
	v[5741] = 0e0;
	v[5742] = 0e0;
	v[5743] = v[1149];
	v[5744] = v[1150];
	v[5745] = v[1151];
	v[5746] = 0e0;
	v[5747] = 0e0;
	v[5748] = 0e0;
	v[5749] = 0e0;
	v[5750] = 0e0;
	v[5751] = 0e0;
	v[5752] = 0e0;
	v[5753] = 0e0;
	v[5754] = 0e0;
	v[5755] = 0e0;
	v[5756] = 0e0;
	v[5757] = 0e0;
	v[5758] = 0e0;
	v[5759] = 0e0;
	v[5760] = 0e0;
	v[5761] = 0e0;
	v[5762] = 0e0;
	v[5763] = 0e0;
	v[5764] = 0e0;
	v[5765] = 0e0;
	v[5766] = 0e0;
	v[5767] = 0e0;
	v[5768] = 0e0;
	v[5769] = 0e0;
	v[5770] = v[1149];
	v[5771] = v[1150];
	v[5772] = v[1151];
	v[5773] = 0e0;
	v[5774] = 0e0;
	v[5775] = 0e0;
	v[5776] = 0e0;
	v[5777] = 0e0;
	v[5778] = 0e0;
	v[5779] = 0e0;
	v[5780] = 0e0;
	v[5781] = 0e0;
	v[5782] = 0e0;
	v[5783] = 0e0;
	v[5784] = 0e0;
	v[5815] = 0e0;
	v[5816] = 0e0;
	v[5817] = 0e0;
	v[5818] = 0e0;
	v[5819] = 0e0;
	v[5820] = 0e0;
	v[5821] = -v[1149];
	v[5822] = -v[1150];
	v[5823] = -v[1151];
	v[5824] = 0e0;
	v[5825] = 0e0;
	v[5826] = 0e0;
	v[5827] = 0e0;
	v[5828] = 0e0;
	v[5829] = 0e0;
	v[5830] = 0e0;
	v[5831] = 0e0;
	v[5832] = 0e0;
	v[5833] = 0e0;
	v[5834] = 0e0;
	v[5835] = 0e0;
	v[5836] = 0e0;
	v[5837] = 0e0;
	v[5838] = 0e0;
	v[5839] = 0e0;
	v[5840] = 0e0;
	v[5841] = 0e0;
	v[5842] = 0e0;
	v[5843] = 0e0;
	v[5844] = 0e0;
	v[5845] = -v[1149];
	v[5846] = -v[1150];
	v[5847] = -v[1151];
	v[5848] = 0e0;
	v[5849] = 0e0;
	v[5850] = 0e0;
	v[5851] = 0e0;
	v[5852] = 0e0;
	v[5853] = 0e0;
	v[5854] = 0e0;
	v[5855] = 0e0;
	v[5856] = 0e0;
	v[5857] = 0e0;
	v[5858] = 0e0;
	v[5859] = 0e0;
	v[5860] = 0e0;
	v[5861] = 0e0;
	v[5862] = 0e0;
	v[5863] = 0e0;
	v[5864] = 0e0;
	v[5865] = 0e0;
	v[5866] = 0e0;
	v[5867] = 0e0;
	v[5868] = 0e0;
	v[5869] = 0e0;
	v[5870] = 0e0;
	v[5871] = 0e0;
	v[5872] = 0e0;
	v[5873] = 0e0;
	v[5874] = 0e0;
	v[5695] = 0e0;
	v[5696] = 0e0;
	v[5697] = 0e0;
	v[5698] = 0e0;
	v[5699] = 0e0;
	v[5700] = 0e0;
	v[5701] = 0e0;
	v[5702] = 0e0;
	v[5703] = 0e0;
	v[5704] = 0e0;
	v[5705] = 0e0;
	v[5706] = 0e0;
	v[5707] = 0e0;
	v[5708] = 0e0;
	v[5709] = 0e0;
	v[5710] = 0e0;
	v[5711] = 0e0;
	v[5712] = 0e0;
	v[5713] = 0e0;
	v[5714] = 0e0;
	v[5715] = 0e0;
	v[5716] = v[1149];
	v[5717] = v[1150];
	v[5718] = v[1151];
	v[5719] = 0e0;
	v[5720] = 0e0;
	v[5721] = 0e0;
	v[5722] = 0e0;
	v[5723] = 0e0;
	v[5724] = 0e0;
	v[5785] = 0e0;
	v[5786] = 0e0;
	v[5787] = 0e0;
	v[5788] = 0e0;
	v[5789] = 0e0;
	v[5790] = 0e0;
	v[5791] = 0e0;
	v[5792] = 0e0;
	v[5793] = 0e0;
	v[5794] = 0e0;
	v[5795] = 0e0;
	v[5796] = 0e0;
	v[5797] = v[1149];
	v[5798] = v[1150];
	v[5799] = v[1151];
	v[5800] = 0e0;
	v[5801] = 0e0;
	v[5802] = 0e0;
	v[5803] = 0e0;
	v[5804] = 0e0;
	v[5805] = 0e0;
	v[5806] = 0e0;
	v[5807] = 0e0;
	v[5808] = 0e0;
	v[5809] = 0e0;
	v[5810] = 0e0;
	v[5811] = 0e0;
	v[5812] = 0e0;
	v[5813] = 0e0;
	v[5814] = 0e0;
	v[5665] = 0e0;
	v[5666] = 0e0;
	v[5667] = 0e0;
	v[5668] = 0e0;
	v[5669] = 0e0;
	v[5670] = 0e0;
	v[5671] = 0e0;
	v[5672] = 0e0;
	v[5673] = 0e0;
	v[5674] = 0e0;
	v[5675] = 0e0;
	v[5676] = 0e0;
	v[5677] = 0e0;
	v[5678] = 0e0;
	v[5679] = 0e0;
	v[5680] = 0e0;
	v[5681] = 0e0;
	v[5682] = 0e0;
	v[5683] = 0e0;
	v[5684] = 0e0;
	v[5685] = 0e0;
	v[5686] = 0e0;
	v[5687] = 0e0;
	v[5688] = 0e0;
	v[5689] = v[1149];
	v[5690] = v[1150];
	v[5691] = v[1151];
	v[5692] = 0e0;
	v[5693] = 0e0;
	v[5694] = 0e0;
	v[5635] = 0e0;
	v[5636] = 0e0;
	v[5637] = 0e0;
	v[5638] = 0e0;
	v[5639] = 0e0;
	v[5640] = 0e0;
	v[5641] = 0e0;
	v[5642] = 0e0;
	v[5643] = 0e0;
	v[5644] = 0e0;
	v[5645] = 0e0;
	v[5646] = 0e0;
	v[5647] = 0e0;
	v[5648] = 0e0;
	v[5649] = 0e0;
	v[5650] = 0e0;
	v[5651] = 0e0;
	v[5652] = 0e0;
	v[5653] = 0e0;
	v[5654] = 0e0;
	v[5655] = 0e0;
	v[5656] = 0e0;
	v[5657] = 0e0;
	v[5658] = 0e0;
	v[5659] = 0e0;
	v[5660] = 0e0;
	v[5661] = 0e0;
	v[5662] = v[1149];
	v[5663] = v[1150];
	v[5664] = v[1151];
	v[3464] = v[1151] * v[248];
	v[3463] = v[1151] * v[247];
	v[1152] = (*cn)*(v[1102] * v[324] + v[1103] * v[327] + v[1104] * v[330] + v[1105] * v[333] + v[1106] * v[336]
		+ v[1107] * v[339] + v[1088] * (-v[3407] + v[3408]) + v[1108] * v[342] + v[1109] * v[345] + v[2670] * v[352]
		+ v[2666] * v[362] + v[2662] * v[372] + v[2658] * v[378] + v[2654] * v[388] + v[2650] * v[398] + v[2547] * v[414]);
	v[3779] = -v[1152] / 2e0;
	v[3747] = v[1152] * v[248];
	v[3746] = v[1152] * v[247];
	v[1153] = (*cn)*(v[1102] * v[323] + v[1103] * v[326] + v[1104] * v[329] + v[1105] * v[332] + v[1106] * v[335]
		+ v[1107] * v[338] + v[1108] * v[341] + v[1110] * (v[3410] - v[3411]) + v[1109] * v[344] + v[2671] * v[352]
		+ v[2667] * v[362] + v[2663] * v[372] + v[2659] * v[378] + v[2655] * v[388] + v[2651] * v[398] + v[2547] * v[415]);
	v[3780] = -v[1153] / 2e0;
	v[3749] = v[1153] * v[248];
	v[3748] = v[1153] * v[247];
	v[1154] = (*cn)*(v[2672] * v[352] + v[1138] * v[3600] + v[2668] * v[362] + v[2664] * v[372] + v[2660] * v[378]
		+ v[2656] * v[388] + v[2652] * v[398] + v[3442] * v[416]);
	v[10511] = 0e0;
	v[10512] = 0e0;
	v[10513] = 0e0;
	v[10514] = 0e0;
	v[10515] = 0e0;
	v[10516] = 0e0;
	v[10517] = 0e0;
	v[10518] = 0e0;
	v[10519] = 0e0;
	v[10520] = 0e0;
	v[10521] = 0e0;
	v[10522] = 0e0;
	v[10523] = 0e0;
	v[10524] = 0e0;
	v[10525] = 0e0;
	v[10526] = 0e0;
	v[10527] = 0e0;
	v[10528] = 0e0;
	v[10529] = -v[1152];
	v[10530] = -v[1153];
	v[10531] = -v[1154];
	v[10532] = 0e0;
	v[10533] = 0e0;
	v[10534] = 0e0;
	v[10535] = 0e0;
	v[10536] = 0e0;
	v[10537] = 0e0;
	v[10538] = 0e0;
	v[10539] = 0e0;
	v[10540] = 0e0;
	v[10541] = 0e0;
	v[10542] = 0e0;
	v[10543] = 0e0;
	v[10544] = 0e0;
	v[10545] = 0e0;
	v[10546] = 0e0;
	v[10547] = 0e0;
	v[10548] = 0e0;
	v[10549] = 0e0;
	v[10550] = 0e0;
	v[10551] = 0e0;
	v[10552] = 0e0;
	v[10553] = 0e0;
	v[10554] = 0e0;
	v[10555] = 0e0;
	v[10556] = -v[1152];
	v[10557] = -v[1153];
	v[10558] = -v[1154];
	v[10559] = 0e0;
	v[10560] = 0e0;
	v[10561] = 0e0;
	v[10562] = 0e0;
	v[10563] = 0e0;
	v[10564] = 0e0;
	v[10565] = 0e0;
	v[10566] = 0e0;
	v[10567] = 0e0;
	v[10568] = 0e0;
	v[10569] = 0e0;
	v[10570] = 0e0;
	v[3982] = v[1152] * v[231] + v[1153] * v[234] + v[1154] * v[237];
	v[3981] = v[1152] * v[230] + v[1153] * v[233] + v[1154] * v[236];
	v[10601] = 0e0;
	v[10602] = 0e0;
	v[10603] = 0e0;
	v[10604] = 0e0;
	v[10605] = 0e0;
	v[10606] = 0e0;
	v[10607] = v[1152];
	v[10608] = v[1153];
	v[10609] = v[1154];
	v[10610] = 0e0;
	v[10611] = 0e0;
	v[10612] = 0e0;
	v[10613] = 0e0;
	v[10614] = 0e0;
	v[10615] = 0e0;
	v[10616] = 0e0;
	v[10617] = 0e0;
	v[10618] = 0e0;
	v[10619] = 0e0;
	v[10620] = 0e0;
	v[10621] = 0e0;
	v[10622] = 0e0;
	v[10623] = 0e0;
	v[10624] = 0e0;
	v[10625] = 0e0;
	v[10626] = 0e0;
	v[10627] = 0e0;
	v[10628] = 0e0;
	v[10629] = 0e0;
	v[10630] = 0e0;
	v[3979] = v[1152] * v[222] + v[1153] * v[225] + v[1154] * v[228];
	v[3978] = v[1152] * v[221] + v[1153] * v[224] + v[1154] * v[227];
	v[10631] = v[1152];
	v[10632] = v[1153];
	v[10633] = v[1154];
	v[10634] = 0e0;
	v[10635] = 0e0;
	v[10636] = 0e0;
	v[10637] = 0e0;
	v[10638] = 0e0;
	v[10639] = 0e0;
	v[10640] = 0e0;
	v[10641] = 0e0;
	v[10642] = 0e0;
	v[10643] = 0e0;
	v[10644] = 0e0;
	v[10645] = 0e0;
	v[10646] = 0e0;
	v[10647] = 0e0;
	v[10648] = 0e0;
	v[10649] = 0e0;
	v[10650] = 0e0;
	v[10651] = 0e0;
	v[10652] = 0e0;
	v[10653] = 0e0;
	v[10654] = 0e0;
	v[10655] = 0e0;
	v[10656] = 0e0;
	v[10657] = 0e0;
	v[10658] = 0e0;
	v[10659] = 0e0;
	v[10660] = 0e0;
	v[10481] = 0e0;
	v[10482] = 0e0;
	v[10483] = 0e0;
	v[10484] = 0e0;
	v[10485] = 0e0;
	v[10486] = 0e0;
	v[10487] = 0e0;
	v[10488] = 0e0;
	v[10489] = 0e0;
	v[10490] = 0e0;
	v[10491] = 0e0;
	v[10492] = 0e0;
	v[10493] = 0e0;
	v[10494] = 0e0;
	v[10495] = 0e0;
	v[10496] = 0e0;
	v[10497] = 0e0;
	v[10498] = 0e0;
	v[10499] = 0e0;
	v[10500] = 0e0;
	v[10501] = 0e0;
	v[10502] = -v[1152];
	v[10503] = -v[1153];
	v[10504] = -v[1154];
	v[10505] = 0e0;
	v[10506] = 0e0;
	v[10507] = 0e0;
	v[10508] = 0e0;
	v[10509] = 0e0;
	v[10510] = 0e0;
	v[10571] = 0e0;
	v[10572] = 0e0;
	v[10573] = 0e0;
	v[10574] = 0e0;
	v[10575] = 0e0;
	v[10576] = 0e0;
	v[10577] = 0e0;
	v[10578] = 0e0;
	v[10579] = 0e0;
	v[10580] = 0e0;
	v[10581] = 0e0;
	v[10582] = 0e0;
	v[10583] = -v[1152];
	v[10584] = -v[1153];
	v[10585] = -v[1154];
	v[10586] = 0e0;
	v[10587] = 0e0;
	v[10588] = 0e0;
	v[10589] = 0e0;
	v[10590] = 0e0;
	v[10591] = 0e0;
	v[10592] = 0e0;
	v[10593] = 0e0;
	v[10594] = 0e0;
	v[10595] = 0e0;
	v[10596] = 0e0;
	v[10597] = 0e0;
	v[10598] = 0e0;
	v[10599] = 0e0;
	v[10600] = 0e0;
	v[10451] = 0e0;
	v[10452] = 0e0;
	v[10453] = 0e0;
	v[10454] = 0e0;
	v[10455] = 0e0;
	v[10456] = 0e0;
	v[10457] = 0e0;
	v[10458] = 0e0;
	v[10459] = 0e0;
	v[10460] = 0e0;
	v[10461] = 0e0;
	v[10462] = 0e0;
	v[10463] = 0e0;
	v[10464] = 0e0;
	v[10465] = 0e0;
	v[10466] = 0e0;
	v[10467] = 0e0;
	v[10468] = 0e0;
	v[10469] = 0e0;
	v[10470] = 0e0;
	v[10471] = 0e0;
	v[10472] = 0e0;
	v[10473] = 0e0;
	v[10474] = 0e0;
	v[10475] = -v[1152];
	v[10476] = -v[1153];
	v[10477] = -v[1154];
	v[10478] = 0e0;
	v[10479] = 0e0;
	v[10480] = 0e0;
	v[10421] = 0e0;
	v[10422] = 0e0;
	v[10423] = 0e0;
	v[10424] = 0e0;
	v[10425] = 0e0;
	v[10426] = 0e0;
	v[10427] = 0e0;
	v[10428] = 0e0;
	v[10429] = 0e0;
	v[10430] = 0e0;
	v[10431] = 0e0;
	v[10432] = 0e0;
	v[10433] = 0e0;
	v[10434] = 0e0;
	v[10435] = 0e0;
	v[10436] = 0e0;
	v[10437] = 0e0;
	v[10438] = 0e0;
	v[10439] = 0e0;
	v[10440] = 0e0;
	v[10441] = 0e0;
	v[10442] = 0e0;
	v[10443] = 0e0;
	v[10444] = 0e0;
	v[10445] = 0e0;
	v[10446] = 0e0;
	v[10447] = 0e0;
	v[10448] = -v[1152];
	v[10449] = -v[1153];
	v[10450] = -v[1154];
	v[3781] = -v[1154] / 2e0;
	v[3751] = v[1154] * v[248];
	v[3750] = v[1154] * v[247];
	v[1155] = v[1149] + v[1152];
	v[1156] = v[1150] + v[1153];
	v[1157] = v[1151] + v[1154];
	v[2370] = (v[1155] * v[1155]) + (v[1156] * v[1156]) + (v[1157] * v[1157]);
	v[1158] = (*epst)*v[1050];
	v[1159] = (*epst)*v[1054];
	v[1160] = (*epst)*v[1055];
	v[1164] = v[1158] - (*ct)*(v[1519] * v[323] + v[1523] * v[324] + v[1527] * v[325] + v[1543] * v[326] + v[1547] * v[327]
		+ v[1551] * v[328] + v[1567] * v[329] + v[1571] * v[330] + v[1575] * v[331] + v[1579] * v[332] + v[1583] * v[333]
		+ v[1587] * v[334] + v[1591] * v[335] + v[1595] * v[336] + v[1599] * v[337] + v[1603] * v[338] + v[1607] * v[339]
		+ v[1611] * v[340] + v[1615] * v[341] + v[1619] * v[342] + v[1623] * v[343] + v[1627] * v[344] + v[1631] * v[345]
		+ v[1635] * v[346] + v[1531] * v[352] + v[1535] * v[362] + v[1539] * v[372] + v[1555] * v[378] + v[1559] * v[388]
		+ v[1563] * v[398]);
	v[1165] = v[1159] - (*ct)*(v[1520] * v[323] + v[1524] * v[324] + v[1528] * v[325] + v[1544] * v[326] + v[1548] * v[327]
		+ v[1552] * v[328] + v[1568] * v[329] + v[1572] * v[330] + v[1576] * v[331] + v[1580] * v[332] + v[1584] * v[333]
		+ v[1588] * v[334] + v[1592] * v[335] + v[1596] * v[336] + v[1600] * v[337] + v[1604] * v[338] + v[1608] * v[339]
		+ v[1612] * v[340] + v[1616] * v[341] + v[1620] * v[342] + v[1624] * v[343] + v[1628] * v[344] + v[1632] * v[345]
		+ v[1636] * v[346] + v[1532] * v[352] + v[1536] * v[362] + v[1540] * v[372] + v[1556] * v[378] + v[1560] * v[388]
		+ v[1564] * v[398]);
	v[1166] = v[1160] - (*ct)*(v[1521] * v[323] + v[1525] * v[324] + v[1529] * v[325] + v[1545] * v[326] + v[1549] * v[327]
		+ v[1553] * v[328] + v[1569] * v[329] + v[1573] * v[330] + v[1577] * v[331] + v[1581] * v[332] + v[1585] * v[333]
		+ v[1589] * v[334] + v[1593] * v[335] + v[1597] * v[336] + v[1601] * v[337] + v[1605] * v[338] + v[1609] * v[339]
		+ v[1613] * v[340] + v[1617] * v[341] + v[1621] * v[342] + v[1625] * v[343] + v[1629] * v[344] + v[1633] * v[345]
		+ v[1637] * v[346] + v[1533] * v[352] + v[1537] * v[362] + v[1541] * v[372] + v[1557] * v[378] + v[1561] * v[388]
		+ v[1565] * v[398]);
	v[2367] = (v[1164] * v[1164]) + (v[1165] * v[1165]) + (v[1166] * v[1166]);
	if ((*stick)) {
		b1168 = sqrt((v[1164] * v[1164]) + (v[1165] * v[1165]) + (v[1166] * v[1166])) <= (*mus)*sqrt((v[1155] * v[1155]) +
			(v[1156] * v[1156]) + (v[1157] * v[1157]));
		if (b1168) {
			v[1170] = v[1164];
			v[1171] = v[1165];
			v[1172] = v[1166];
			v[1173] = 1e0;
		}
		else {
			v[2369] = 1e0 / sqrt(v[2367]);
			v[2371] = 1e0 / sqrt(v[2370]);
			v[1183] = sqrt(v[2370]);
			v[1174] = sqrt(v[2367]);
			if (v[1174] > 0.1e-5) {
				v010 = 1e0 / v[1174]; v011 = (-(v010 / v[1174])); v012 = (2e0*v010) / Power(v[1174], 2
				);
			}
			else {
				v010 = (24000000e0 - (-1e0 + 1000000e0*v[1174])*(71999994e0 - 0.71999982e14*v[1174] + 0.6e19*Power(v[1174]
					, 3) + 0.23999982e20*(v[1174] * v[1174]))) / 24e0;
				v011 = (-500000e0 / 3e0)*(35999994e0 - 0.47999982e14*v[1174] + 0.6e19*Power(v[1174], 3) + 0.17999982e20*
					(v[1174] * v[1174]));
				v012 = 0.1e13*(7999997e0 - 0.5999994e13*v[1174] - 0.3e13*(v[1174] * v[1174]));
			};
			v[1178] = v011;
			v[1179] = v010;
			v[2368] = (*mud)*v[1179] * v[1183];
			v[1170] = v[1164] * v[2368];
			v[1171] = v[1165] * v[2368];
			v[1172] = v[1166] * v[2368];
			v[1173] = 0e0;
		};
		if (sqrt((v[1158] * v[1158]) + (v[1159] * v[1159]) + (v[1160] * v[1160])) > (*mus)*sqrt((v[1155] * v[1155]) +
			(v[1156] * v[1156]) + (v[1157] * v[1157]))) {
			if ((*epst) > 0.1e-5) {
				v013 = 1e0 / (*epst); v014 = (-(v013 / (*epst))); v015 = (2e0*v013) / Power((*epst), 2
				);
			}
			else {
				v013 = (24000000e0 - (-1e0 + 1000000e0*(*epst))*(71999994e0 - 0.71999982e14*(*epst) + 0.23999982e20*Power(
					(*epst), 2) + 0.6e19*Power((*epst), 3))) / 24e0;
				v014 = (-500000e0 / 3e0)*(35999994e0 - 0.47999982e14*(*epst) + 0.17999982e20*Power((*epst), 2)
					+ 0.6e19*Power((*epst), 3));
				v015 = 0.1e13*(7999997e0 - 0.5999994e13*(*epst) - 0.3e13*Power((*epst), 2));
			};
			v[1192] = sqrt((v[1158] * v[1158]) + (v[1159] * v[1159]) + (v[1160] * v[1160]));
			if (v[1192] > 0.1e-5) {
				v016 = 1e0 / v[1192]; v017 = (-(v016 / v[1192])); v018 = (2e0*v016) / Power(v[1192], 2
				);
			}
			else {
				v016 = (24000000e0 - (-1e0 + 1000000e0*v[1192])*(71999994e0 - 0.71999982e14*v[1192] + 0.6e19*Power(v[1192]
					, 3) + 0.23999982e20*(v[1192] * v[1192]))) / 24e0;
				v017 = (-500000e0 / 3e0)*(35999994e0 - 0.47999982e14*v[1192] + 0.6e19*Power(v[1192], 3) + 0.17999982e20*
					(v[1192] * v[1192]));
				v018 = 0.1e13*(7999997e0 - 0.5999994e13*v[1192] - 0.3e13*(v[1192] * v[1192]));
			};
			v[1199] = -((*mud)*v013*v016*sqrt(v[2370]));
			v[1198] = v[1050] + v[1158] * v[1199];
			v[1200] = v[1054] + v[1159] * v[1199];
			v[1201] = v[1055] + v[1160] * v[1199];
		}
		else {
			v[1198] = 0e0;
			v[1200] = 0e0;
			v[1201] = 0e0;
		};
	}
	else {
		b1202 = sqrt((v[1164] * v[1164]) + (v[1165] * v[1165]) + (v[1166] * v[1166])) <= (*mud)*sqrt((v[1155] * v[1155]) +
			(v[1156] * v[1156]) + (v[1157] * v[1157]));
		if (b1202) {
			v[1170] = v[1164];
			v[1171] = v[1165];
			v[1172] = v[1166];
			v[1173] = 1e0;
		}
		else {
			v[2377] = 1e0 / sqrt(v[2367]);
			v[2381] = 1e0 / sqrt(v[2370]);
			v[1213] = sqrt(v[2370]);
			v[3571] = (*mud)*v[1213];
			v[1204] = sqrt(v[2367]);
			if (v[1204] > 0.1e-5) {
				v019 = 1e0 / v[1204]; v020 = (-(v019 / v[1204])); v021 = (2e0*v019) / Power(v[1204], 2
				);
			}
			else {
				v019 = (24000000e0 - (-1e0 + 1000000e0*v[1204])*(71999994e0 - 0.71999982e14*v[1204] + 0.6e19*Power(v[1204]
					, 3) + 0.23999982e20*(v[1204] * v[1204]))) / 24e0;
				v020 = (-500000e0 / 3e0)*(35999994e0 - 0.47999982e14*v[1204] + 0.6e19*Power(v[1204], 3) + 0.17999982e20*
					(v[1204] * v[1204]));
				v021 = 0.1e13*(7999997e0 - 0.5999994e13*v[1204] - 0.3e13*(v[1204] * v[1204]));
			};
			v[1208] = v020;
			v[1209] = v019;
			v[3443] = (*mud)*v[1209] * v[1213];
			v[1170] = v[1164] * v[3443];
			v[1171] = v[1165] * v[3443];
			v[1172] = v[1166] * v[3443];
			v[1173] = 0e0;
		};
		if (sqrt((v[1158] * v[1158]) + (v[1159] * v[1159]) + (v[1160] * v[1160])) > (*mud)*sqrt((v[1155] * v[1155]) +
			(v[1156] * v[1156]) + (v[1157] * v[1157]))) {
			if ((*epst) > 0.1e-5) {
				v022 = 1e0 / (*epst); v023 = (-(v022 / (*epst))); v024 = (2e0*v022) / Power((*epst), 2
				);
			}
			else {
				v022 = (24000000e0 - (-1e0 + 1000000e0*(*epst))*(71999994e0 - 0.71999982e14*(*epst) + 0.23999982e20*Power(
					(*epst), 2) + 0.6e19*Power((*epst), 3))) / 24e0;
				v023 = (-500000e0 / 3e0)*(35999994e0 - 0.47999982e14*(*epst) + 0.17999982e20*Power((*epst), 2)
					+ 0.6e19*Power((*epst), 3));
				v024 = 0.1e13*(7999997e0 - 0.5999994e13*(*epst) - 0.3e13*Power((*epst), 2));
			};
			v[1222] = sqrt((v[1158] * v[1158]) + (v[1159] * v[1159]) + (v[1160] * v[1160]));
			if (v[1222] > 0.1e-5) {
				v025 = 1e0 / v[1222]; v026 = (-(v025 / v[1222])); v027 = (2e0*v025) / Power(v[1222], 2
				);
			}
			else {
				v025 = (24000000e0 - (-1e0 + 1000000e0*v[1222])*(71999994e0 - 0.71999982e14*v[1222] + 0.6e19*Power(v[1222]
					, 3) + 0.23999982e20*(v[1222] * v[1222]))) / 24e0;
				v026 = (-500000e0 / 3e0)*(35999994e0 - 0.47999982e14*v[1222] + 0.6e19*Power(v[1222], 3) + 0.17999982e20*
					(v[1222] * v[1222]));
				v027 = 0.1e13*(7999997e0 - 0.5999994e13*v[1222] - 0.3e13*(v[1222] * v[1222]));
			};
			v[1228] = -((*mud)*v022*v025*sqrt(v[2370]));
			v[1198] = v[1050] + v[1158] * v[1228];
			v[1200] = v[1054] + v[1159] * v[1228];
			v[1201] = v[1055] + v[1160] * v[1228];
		}
		else {
			v[1198] = 0e0;
			v[1200] = 0e0;
			v[1201] = 0e0;
		};
	};
	fn[0] = v[1155];
	fn[1] = v[1156];
	fn[2] = v[1157];
	ft[0] = v[1170];
	ft[1] = v[1171];
	ft[2] = v[1172];
	(*stickupdated) = v[1173];
	gtpupdated[0] = v[1050] - v[1198];
	gtpupdated[1] = v[1054] - v[1200];
	gtpupdated[2] = v[1055] - v[1201];
	v[1240] = -((*epsn)*(v[285] * v[399] + v[286] * v[400] + v[287] * v[401]));
	v[1241] = -((*epsn)*(v[282] * v[399] + v[283] * v[400] + v[284] * v[401]));
	v[1244] = -((*epsn)*(v[270] * v[399] + v[271] * v[400] + v[272] * v[401]));
	v[1245] = (*epsn)*(v[1397] * v[399] + v[1394] * v[400] + v[1389] * v[401]);
	v[1246] = (*epsn)*(v[1396] * v[399] + v[1393] * v[400] + v[1388] * v[401]);
	v[1247] = v[1056] * v[1151];
	v[1248] = v[1057] * v[1151];
	v[1297] = v[1248] * v[202];
	v[1249] = v[1058] * v[1151];
	v[1303] = v[1249] * v[202];
	v[1250] = v[1056] * v[1150];
	v[1298] = v[1250] * v[202];
	v[1251] = v[1057] * v[1150];
	v[1300] = -(v[1251] * v[202]) / 2e0;
	v[1252] = v[1058] * v[1150];
	v[1306] = v[1252] * v[202];
	v[1253] = v[1056] * v[1149];
	v[1304] = v[1253] * v[202];
	v[1254] = v[1057] * v[1149];
	v[1307] = v[1254] * v[202];
	v[1255] = v[1058] * v[1149];
	v[1305] = -(v[1255] * v[202]) / 2e0;
	v[1256] = v[1059] * v[1151];
	v[1257] = v[1060] * v[1151];
	v[1286] = v[1257] * v[183];
	v[1258] = v[1061] * v[1151];
	v[1292] = v[1258] * v[183];
	v[1259] = v[1059] * v[1150];
	v[1287] = v[1259] * v[183];
	v[1260] = v[1060] * v[1150];
	v[1289] = -(v[1260] * v[183]) / 2e0;
	v[1261] = v[1061] * v[1150];
	v[1295] = v[1261] * v[183];
	v[1262] = v[1059] * v[1149];
	v[1293] = v[1262] * v[183];
	v[1263] = v[1060] * v[1149];
	v[1296] = v[1263] * v[183];
	v[1264] = v[1061] * v[1149];
	v[1294] = -(v[1264] * v[183]) / 2e0;
	v[1265] = v[1240] - (*epsn)*(v[279] * v[399] + v[280] * v[400] + v[281] * v[401]);
	v[1266] = v[1241] + v[1244] - v[1265];
	v[1267] = v[1245] * v[3348] + v[1246] * v[3444];
	v[1268] = -((*epsn)*(-(v[3445] * v[399]) - v[3446] * v[400] - v[3447] * v[401])) / 2e0;
	v[1269] = v[1297] + v[1298];
	v[1507] = -v[1269] / 2e0;
	v[1505] = (-v[1303] - v[1304]) / 2e0;
	v[1271] = v[1306] + v[1307];
	v[1504] = -v[1271] / 2e0;
	v[1272] = (v[1247] * v[621]) / 2e0 + v[1248] * v[624] + v[1249] * v[625] + v[1250] * v[626] + (v[1251] * v[631]) / 2e0
		+ v[1252] * v[633] + v[1253] * v[634] + v[1254] * v[639] + (v[1255] * v[644]) / 2e0;
	v[1508] = v[1300] - 4e0*v[1272] * v[1301] + v[1305];
	v[1506] = -v[1300] + v[1508] - (v[1247] * v[202]) / 2e0;
	v[1503] = v[1300] - v[1305] + v[1506];
	v[1273] = v[1286] + v[1287];
	v[1501] = -v[1273] / 2e0;
	v[1499] = (-v[1292] - v[1293]) / 2e0;
	v[1275] = v[1295] + v[1296];
	v[1498] = -v[1275] / 2e0;
	v[1276] = (v[1256] * v[652]) / 2e0 + v[1257] * v[655] + v[1258] * v[656] + v[1259] * v[657] + (v[1260] * v[662]) / 2e0
		+ v[1261] * v[664] + v[1262] * v[665] + v[1263] * v[670] + (v[1264] * v[675]) / 2e0;
	v[1502] = v[1289] - 4e0*v[1276] * v[1290] + v[1294];
	v[1500] = -v[1289] + v[1502] - (v[1256] * v[183]) / 2e0;
	v[1497] = v[1289] - v[1294] + v[1500];
	v[4581] = -v[3459];
	v[4582] = -v[3461];
	v[4583] = -v[3463];
	v[4584] = -(v[1085] * v[1275]) - v[1286] + v[1287] - 2e0*dA[3] * v[1497] + dA[5] * v[1499];
	v[4585] = -(dA[5] * v[1273]) / 2e0 - (dA[3] * v[1275]) / 2e0 + v[1292] - v[1293] - 2e0*dA[4] * v[1500];
	v[4586] = -(v[1085] * v[1273]) - v[1295] + v[1296] + dA[3] * v[1499] - 2e0*dA[5] * v[1502];
	v[4587] = -v[3460];
	v[4588] = -v[3462];
	v[4589] = -v[3464];
	v[4590] = -(v[1079] * v[1271]) - v[1297] + v[1298] - 2e0*dA[9] * v[1503] + dA[11] * v[1505];
	v[4591] = -(dA[11] * v[1269]) / 2e0 - (dA[9] * v[1271]) / 2e0 + v[1303] - v[1304] - 2e0*dA[10] * v[1506];
	v[4592] = -(v[1079] * v[1269]) - v[1306] + v[1307] + dA[9] * v[1505] - 2e0*dA[11] * v[1508];
	v[4593] = v[1149] * v[301];
	v[4594] = v[1150] * v[301];
	v[4595] = v[1151] * v[301];
	v[4596] = v[1149] * v[3351];
	v[4597] = v[1150] * v[3351];
	v[4598] = v[1151] * v[3351];
	v[4599] = v[1149] * v[3352];
	v[4600] = v[1150] * v[3352];
	v[4601] = v[1151] * v[3352];
	v[4602] = v[1149] * v[310];
	v[4603] = v[1150] * v[310];
	v[4604] = v[1151] * v[310];
	v[4605] = v[1149] * v[311];
	v[4606] = v[1150] * v[311];
	v[4607] = v[1151] * v[311];
	v[4608] = v[1149] * v[313];
	v[4609] = v[1150] * v[313];
	v[4610] = v[1151] * v[313];
	v[1279] = -(v[1267] * v[1278]);
	v[1482] = v[1246] * v[3347] + v[1279] * v[3448];
	v[1478] = v[1245] * v[3449] + v[1279] * v[3450];
	v[1281] = -(v[1140] * v[1482]) + v[1478] * v[1518];
	v[1485] = v[1240] - v[1265] + (v[1244] - (*epsn)*(v[273] * v[399] + v[274] * v[400] + v[275] * v[401])) / 2e0;
	v[1283] = -v[1240] + v[1241] + cp[3] * v[1266] + v[1485] + 2e0*cp[2] * v[1485];
	v[1284] = (v[1244] - (*epsn)*(v[276] * v[399] + v[277] * v[400] + v[278] * v[401])) / 2e0;
	v[1488] = -v[1240] + v[1284];
	v[1285] = -v[1244] + v[1266] + cp[2] * v[1266] + v[1284] + 2e0*cp[3] * v[1488];
	for (i1238 = 1; i1238 <= 30; i1238++) {
		i3458 = (i1238 == 10 ? 1 : 0);
		i3457 = (i1238 == 11 ? 1 : 0);
		i3456 = (i1238 == 12 ? 1 : 0);
		i3455 = (i1238 == 4 ? 1 : 0);
		i3454 = (i1238 == 5 ? 1 : 0);
		i3453 = (i1238 == 6 ? 1 : 0);
		v[1387] = v[4700 + i1238];
		v[1411] = -(v[1149] * v[1387]) / 2e0;
		v[1403] = -(v[1150] * v[1387]) / 2e0;
		v[1400] = -(v[1151] * v[1387]) / 2e0;
		v[1317] = v[4670 + i1238];
		v[1315] = v[4640 + i1238];
		v[1313] = v[4610 + i1238];
		v[1314] = v[1313] * v[3012];
		v[1391] = -((*epsn)*v[1314]) / 2e0;
		v[1316] = v[1315] * v[3015];
		v[1392] = -((*epsn)*v[1316]) / 2e0;
		v[1318] = v[1317] * v[3451];
		v[3452] = -(v[1278] * v[1318]);
		v[1483] = (*bA)*v[3452];
		v[1479] = (*aA)*v[3452];
		v[1319] = -v[4764 + i1238];
		v[1363] = -4e0*v[1290] * v[1319];
		v[1320] = -v[4794 + i1238];
		v[1321] = -v[4824 + i1238];
		v[1322] = -v[4854 + i1238];
		v[1323] = -v[4884 + i1238];
		v[1376] = -4e0*v[1301] * v[1323];
		v[1324] = -v[4914 + i1238];
		v[1325] = -v[4944 + i1238];
		v[1326] = -v[4974 + i1238];
		v[1327] = cp[2] * v[1313] + cp[3] * v[1315];
		v[1328] = -v[5004 + i1238];
		v[1329] = -v[5124 + i1238];
		v[1330] = -v[5244 + i1238];
		v[1331] = -v[5274 + i1238];
		v[1332] = -v[5394 + i1238];
		v[1333] = -v[5514 + i1238];
		v[1336] = v[1317] * v[1334] + v[1479] * v[1518];
		v[1338] = v[1317] * v[1337] + v[1140] * v[1483];
		v[1339] = -i3453 + v[1320];
		v[1341] = i3453 + v[1320];
		v[1342] = i3454 + v[1321];
		v[1344] = -i3454 + v[1321];
		v[1345] = -i3455 + v[1322];
		v[1347] = i3455 + v[1322];
		v[1348] = -i3456 + v[1324];
		v[1350] = i3456 + v[1324];
		v[1351] = i3457 + v[1325];
		v[1353] = -i3457 + v[1325];
		v[1354] = -i3458 + v[1326];
		v[1356] = i3458 + v[1326];
		v[1357] = -v[1313] - v[1316] - v[1327];
		v[1358] = (v[1314] + v[1316] + 2e0*v[1327]) / 2e0;
		v[1359] = v[1313] + v[1315] + v[1327];
		v[1360] = -2e0*cp[3] * v[1313] + 2e0*cp[2] * v[1315] + v[1357];
		v[1361] = -(v[1328] * v[183]) / 2e0 + v[1319] * v[3048];
		v[1362] = v[1339] * v[183] + v[1363] * v[670];
		v[1364] = v[1342] * v[183] + v[1363] * v[665];
		v[1365] = v[1341] * v[183] + v[1363] * v[664];
		v[1366] = (-(v[1329] * v[183]) + v[1363] * v[662]) / 2e0;
		v[1367] = v[1345] * v[183] + v[1363] * v[657];
		v[1368] = v[1344] * v[183] + v[1363] * v[656];
		v[1369] = v[1149] * v[1361] + v[1150] * v[1365] + v[1151] * v[1368];
		v[1370] = v[1347] * v[183] + v[1363] * v[655];
		v[1371] = v[1149] * v[1362] + v[1150] * v[1366] + v[1151] * v[1370];
		v[1372] = (-(v[1330] * v[183]) + v[1363] * v[652]) / 2e0;
		v[1373] = v[1149] * v[1364] + v[1150] * v[1367] + v[1151] * v[1372];
		v[1374] = -(v[1331] * v[202]) / 2e0 + v[1323] * v[3059];
		v[1375] = v[1348] * v[202] + v[1376] * v[639];
		v[1377] = v[1351] * v[202] + v[1376] * v[634];
		v[1378] = v[1350] * v[202] + v[1376] * v[633];
		v[1379] = (-(v[1332] * v[202]) + v[1376] * v[631]) / 2e0;
		v[1380] = v[1354] * v[202] + v[1376] * v[626];
		v[1381] = v[1353] * v[202] + v[1376] * v[625];
		v[1382] = v[1149] * v[1374] + v[1150] * v[1378] + v[1151] * v[1381];
		v[1383] = v[1356] * v[202] + v[1376] * v[624];
		v[1384] = v[1149] * v[1375] + v[1150] * v[1379] + v[1151] * v[1383];
		v[1385] = (-(v[1333] * v[202]) + v[1376] * v[621]) / 2e0;
		v[1386] = v[1149] * v[1377] + v[1150] * v[1380] + v[1151] * v[1385];
		v[1390] = v[1392] * v[275] + v[1391] * v[278] + (*epsn)*(v[1061] * v[1368] + v[1060] * v[1370] + v[1059] * v[1372]
			+ v[1058] * v[1381] + v[1057] * v[1383] + v[1056] * v[1385] + v[1336] * v[1388] + v[1338] * v[1389] - v[1358] * v[272]
			- v[1357] * v[281] - v[1359] * v[284] - v[1360] * v[287] + v[1387] * v[434] - v[5544 + i1238]);
		v[1395] = v[1392] * v[274] + v[1391] * v[277] + (*epsn)*(v[1061] * v[1365] + v[1060] * v[1366] + v[1059] * v[1367]
			+ v[1058] * v[1378] + v[1057] * v[1379] + v[1056] * v[1380] + v[1336] * v[1393] + v[1338] * v[1394] - v[1358] * v[271]
			- v[1357] * v[280] - v[1359] * v[283] - v[1360] * v[286] + v[1387] * v[431] - v[5574 + i1238]);
		v[1398] = v[1392] * v[273] + v[1391] * v[276] + (*epsn)*(v[1061] * v[1361] + v[1060] * v[1362] + v[1059] * v[1364]
			+ v[1058] * v[1374] + v[1057] * v[1375] + v[1056] * v[1377] + v[1336] * v[1396] + v[1338] * v[1397] - v[1358] * v[270]
			- v[1357] * v[279] - v[1359] * v[282] - v[1360] * v[285] + v[1387] * v[428] - v[5604 + i1238]);
		v[1399] = v[1400] + v[1390] * v[247];
		v[1401] = -v[1400] + v[1390] * v[248];
		v[1402] = v[1403] + v[1395] * v[247];
		v[1404] = -v[1403] + v[1395] * v[248];
		v[1405] = -(v[1398] * v[285]) - v[1395] * v[286] - v[1390] * v[287] - v[5634 + i1238];
		v[1409] = -(v[1398] * v[270]) - v[1395] * v[271] - v[1390] * v[272] - v[5784 + i1238];
		v[1410] = v[1411] + v[1398] * v[247];
		v[1412] = -v[1411] + v[1398] * v[248];
		v[1413] = v[1405] - v[1398] * v[279] - v[1395] * v[280] - v[1390] * v[281] - v[5694 + i1238];
		v[1414] = v[1409] - v[1413] - v[1398] * v[282] - v[1395] * v[283] - v[1390] * v[284] - v[5664 + i1238];
		v[3470] = -v[1409] + v[1414];
		v[1415] = v[1410] * v[260] + v[1338] * v[3459];
		v[1416] = v[1410] * v[258] + v[1336] * v[3459];
		v[1417] = v[1412] * v[260] + v[1338] * v[3460];
		v[1418] = v[1412] * v[258] + v[1336] * v[3460];
		v[1419] = v[1402] * v[260] + v[1338] * v[3461];
		v[1420] = v[1402] * v[258] + v[1336] * v[3461];
		v[1421] = v[1404] * v[260] + v[1338] * v[3462];
		v[1422] = v[1404] * v[258] + v[1336] * v[3462];
		v[1423] = v[1399] * v[260] + v[1338] * v[3463];
		v[1424] = v[1399] * v[258] + v[1336] * v[3463];
		v[1425] = v[1410] * v[222] + v[1402] * v[225] + v[1399] * v[228] + v[1412] * v[231] + v[1404] * v[234] + v[1401] * v[237] +
			(QAAi[0][1] * v[1369] + QAAi[1][1] * v[1371] + QAAi[2][1] * v[1373])*v[247] + (QBAi[0][1] * v[1382]
				+ QBAi[1][1] * v[1384] + QBAi[2][1] * v[1386])*v[248];
		v[1426] = v[1410] * v[221] + v[1402] * v[224] + v[1399] * v[227] + v[1412] * v[230] + v[1404] * v[233] + v[1401] * v[236] +
			(QAAi[0][0] * v[1369] + QAAi[1][0] * v[1371] + QAAi[2][0] * v[1373])*v[247] + (QBAi[0][0] * v[1382]
				+ QBAi[1][0] * v[1384] + QBAi[2][0] * v[1386])*v[248];
		v[1427] = v[1401] * v[260] + v[1338] * v[3464];
		v[1428] = v[1401] * v[258] + v[1336] * v[3464];
		v[3469] = v[249] * (v[1267] * v[1318] * v[1860] * v[249] + ((*bA)*(v[1140] * v[1425] + v[1245] * v[1317] * v[1518]) +
			(*aA)*(-(v[1140] * v[1246] * v[1317]) + v[1426] * v[1518]))*v[3465]);
		v[1431] = ((*epsn)*v[1336]) / 2e0;
		v[1432] = ((*epsn)*v[1338]) / 2e0;
		v[1439] = (-(v[1369] * v[1433]) - v[1371] * v[1434] - v[1373] * v[1435] + v[1382] * v[1436] + v[1384] * v[1437]
			+ v[1386] * v[1438] + v[1431] * v[3801] + v[1432] * v[3802] + v[1431] * v[3804] + v[1432] * v[3805] - v[1398] * v[426]
			+ v[1398] * v[427] - v[1395] * v[429] + v[1395] * v[430] - v[1390] * v[432] + v[1390] * v[433] - v[5814 + i1238] + v[5844
			+ i1238]) / 2e0;
		v[1440] = QBAi[2][1] * v[1427] + QBAi[2][0] * v[1428];
		v[1441] = QBAi[1][1] * v[1427] + QBAi[1][0] * v[1428];
		v[1442] = QBAi[0][1] * v[1427] + QBAi[0][0] * v[1428];
		v[1443] = QBAi[2][1] * v[1421] + QBAi[2][0] * v[1422];
		v[1444] = QBAi[1][1] * v[1421] + QBAi[1][0] * v[1422];
		v[1445] = QBAi[0][1] * v[1421] + QBAi[0][0] * v[1422];
		v[1446] = QBAi[2][1] * v[1417] + QBAi[2][0] * v[1418];
		v[1447] = QBAi[1][1] * v[1417] + QBAi[1][0] * v[1418];
		v[1448] = QBAi[0][1] * v[1417] + QBAi[0][0] * v[1418];
		v[1449] = QAAi[2][1] * v[1423] + QAAi[2][0] * v[1424];
		v[1450] = QAAi[1][1] * v[1423] + QAAi[1][0] * v[1424];
		v[1451] = QAAi[0][1] * v[1423] + QAAi[0][0] * v[1424];
		v[1452] = QAAi[2][1] * v[1419] + QAAi[2][0] * v[1420];
		v[1453] = QAAi[1][1] * v[1419] + QAAi[1][0] * v[1420];
		v[1454] = QAAi[0][1] * v[1419] + QAAi[0][0] * v[1420];
		v[1455] = QAAi[2][1] * v[1415] + QAAi[2][0] * v[1416];
		v[1456] = QAAi[1][1] * v[1415] + QAAi[1][0] * v[1416];
		v[1457] = QAAi[0][1] * v[1415] + QAAi[0][0] * v[1416];
		v[1458] = (v[1247] * v[1376] + v[1440] * v[202]) / 2e0;
		v[1459] = v[1248] * v[1376] + v[1441] * v[202];
		v[1460] = v[1249] * v[1376] + v[1442] * v[202];
		v[1461] = v[1250] * v[1376] + v[1443] * v[202];
		v[1463] = v[1252] * v[1376] + v[1445] * v[202];
		v[1464] = v[1253] * v[1376] + v[1446] * v[202];
		v[1465] = v[1254] * v[1376] + v[1447] * v[202];
		v[1466] = (v[1255] * v[1376] + v[1448] * v[202]) / 2e0;
		v[1467] = 8e0*v[1272] * v[1323] * v[2860] - 4e0*v[1301] * (-(v[1255] * v[1331]) / 2e0 - (v[1251] * v[1332]) / 2e0 -
			(v[1247] * v[1333]) / 2e0 + v[1254] * v[1348] + v[1252] * v[1350] + v[1253] * v[1351] + v[1249] * v[1353]
			+ v[1250] * v[1354] + v[1248] * v[1356] + (v[1440] * v[621]) / 2e0 + v[1441] * v[624] + v[1442] * v[625] + v[1443] * v[626]
			+ (v[1444] * v[631]) / 2e0 + v[1445] * v[633] + v[1446] * v[634] + v[1447] * v[639] + (v[1448] * v[644]) / 2e0);
		v[3473] = v[1467] + (-(v[1251] * v[1376]) - v[1444] * v[202]) / 2e0;
		v[1468] = (v[1256] * v[1363] + v[1449] * v[183]) / 2e0;
		v[1469] = v[1257] * v[1363] + v[1450] * v[183];
		v[1470] = v[1258] * v[1363] + v[1451] * v[183];
		v[1471] = v[1259] * v[1363] + v[1452] * v[183];
		v[1473] = v[1261] * v[1363] + v[1454] * v[183];
		v[1474] = v[1262] * v[1363] + v[1455] * v[183];
		v[1475] = v[1263] * v[1363] + v[1456] * v[183];
		v[1476] = (v[1264] * v[1363] + v[1457] * v[183]) / 2e0;
		v[1477] = 8e0*v[1276] * v[1319] * v[2882] - 4e0*v[1290] * (-(v[1264] * v[1328]) / 2e0 - (v[1260] * v[1329]) / 2e0 -
			(v[1256] * v[1330]) / 2e0 + v[1263] * v[1339] + v[1261] * v[1341] + v[1262] * v[1342] + v[1258] * v[1344]
			+ v[1259] * v[1345] + v[1257] * v[1347] + (v[1449] * v[652]) / 2e0 + v[1450] * v[655] + v[1451] * v[656] + v[1452] * v[657]
			+ (v[1453] * v[662]) / 2e0 + v[1454] * v[664] + v[1455] * v[665] + v[1456] * v[670] + (v[1457] * v[675]) / 2e0);
		v[3471] = v[1477] + (-(v[1260] * v[1363]) - v[1453] * v[183]) / 2e0;
		v[1480] = v[1279] * v[1317] * v[3344];
		v[1484] = -(v[1140] * (v[1317] * v[1478] + v[1246] * v[1479] + v[1426] * v[3347] + v[1143] * (v[1280] * v[3469]
			+ v[1480] * v[3648]))) + v[1518] * (-(v[1317] * v[1482]) + v[1245] * v[1483] + v[1425] * v[3449] + v[1141] *
			(v[1277] * v[3469] + v[1480] * v[3649]));
		v[1486] = (v[1409] - v[1398] * v[273] - v[1395] * v[274] - v[1390] * v[275] - v[5754 + i1238]) / 2e0;
		v[1487] = v[1266] * v[1313] + cp[3] * v[1414] + 2e0*v[1315] * v[1485] + v[1486] + 2e0*cp[2] * (v[1405] - v[1413]
			+ v[1486]) + v[3470];
		v[1489] = (v[1409] - v[1398] * v[276] - v[1395] * v[277] - v[1390] * v[278] - v[5724 + i1238]) / 2e0;
		v[1490] = v[1266] * v[1315] + cp[2] * v[1414] + 2e0*v[1313] * v[1488] + v[1489] + 2e0*cp[3] * (-v[1405] + v[1489])
			+ v[3470];
		v[3474] = (v[1460] + v[1464]) / 2e0;
		v[1492] = v[1459] + v[1461];
		v[1493] = v[1463] + v[1465];
		v[3472] = (v[1470] + v[1474]) / 2e0;
		v[1495] = v[1469] + v[1471];
		v[1496] = v[1473] + v[1475];
		v[5995] = 0e0;
		v[5996] = 0e0;
		v[5997] = 0e0;
		v[5998] = -2e0*v[1497];
		v[5999] = v[1498];
		v[6000] = v[1499];
		v[6001] = 0e0;
		v[6002] = 0e0;
		v[6003] = 0e0;
		v[6004] = 0e0;
		v[6005] = 0e0;
		v[6006] = 0e0;
		v[6007] = 0e0;
		v[6008] = 0e0;
		v[6009] = 0e0;
		v[6010] = 0e0;
		v[6011] = 0e0;
		v[6012] = 0e0;
		v[6013] = 0e0;
		v[6014] = 0e0;
		v[6015] = 0e0;
		v[6016] = 0e0;
		v[6017] = 0e0;
		v[6018] = 0e0;
		v[6019] = 0e0;
		v[6020] = 0e0;
		v[6021] = 0e0;
		v[6022] = 0e0;
		v[6023] = 0e0;
		v[6024] = 0e0;
		v[5965] = 0e0;
		v[5966] = 0e0;
		v[5967] = 0e0;
		v[5968] = v[1498];
		v[5969] = -2e0*v[1500];
		v[5970] = v[1501];
		v[5971] = 0e0;
		v[5972] = 0e0;
		v[5973] = 0e0;
		v[5974] = 0e0;
		v[5975] = 0e0;
		v[5976] = 0e0;
		v[5977] = 0e0;
		v[5978] = 0e0;
		v[5979] = 0e0;
		v[5980] = 0e0;
		v[5981] = 0e0;
		v[5982] = 0e0;
		v[5983] = 0e0;
		v[5984] = 0e0;
		v[5985] = 0e0;
		v[5986] = 0e0;
		v[5987] = 0e0;
		v[5988] = 0e0;
		v[5989] = 0e0;
		v[5990] = 0e0;
		v[5991] = 0e0;
		v[5992] = 0e0;
		v[5993] = 0e0;
		v[5994] = 0e0;
		v[5935] = 0e0;
		v[5936] = 0e0;
		v[5937] = 0e0;
		v[5938] = v[1499];
		v[5939] = v[1501];
		v[5940] = -2e0*v[1502];
		v[5941] = 0e0;
		v[5942] = 0e0;
		v[5943] = 0e0;
		v[5944] = 0e0;
		v[5945] = 0e0;
		v[5946] = 0e0;
		v[5947] = 0e0;
		v[5948] = 0e0;
		v[5949] = 0e0;
		v[5950] = 0e0;
		v[5951] = 0e0;
		v[5952] = 0e0;
		v[5953] = 0e0;
		v[5954] = 0e0;
		v[5955] = 0e0;
		v[5956] = 0e0;
		v[5957] = 0e0;
		v[5958] = 0e0;
		v[5959] = 0e0;
		v[5960] = 0e0;
		v[5961] = 0e0;
		v[5962] = 0e0;
		v[5963] = 0e0;
		v[5964] = 0e0;
		v[5905] = 0e0;
		v[5906] = 0e0;
		v[5907] = 0e0;
		v[5908] = 0e0;
		v[5909] = 0e0;
		v[5910] = 0e0;
		v[5911] = 0e0;
		v[5912] = 0e0;
		v[5913] = 0e0;
		v[5914] = -2e0*v[1503];
		v[5915] = v[1504];
		v[5916] = v[1505];
		v[5917] = 0e0;
		v[5918] = 0e0;
		v[5919] = 0e0;
		v[5920] = 0e0;
		v[5921] = 0e0;
		v[5922] = 0e0;
		v[5923] = 0e0;
		v[5924] = 0e0;
		v[5925] = 0e0;
		v[5926] = 0e0;
		v[5927] = 0e0;
		v[5928] = 0e0;
		v[5929] = 0e0;
		v[5930] = 0e0;
		v[5931] = 0e0;
		v[5932] = 0e0;
		v[5933] = 0e0;
		v[5934] = 0e0;
		v[5875] = 0e0;
		v[5876] = 0e0;
		v[5877] = 0e0;
		v[5878] = 0e0;
		v[5879] = 0e0;
		v[5880] = 0e0;
		v[5881] = 0e0;
		v[5882] = 0e0;
		v[5883] = 0e0;
		v[5884] = v[1504];
		v[5885] = -2e0*v[1506];
		v[5886] = v[1507];
		v[5887] = 0e0;
		v[5888] = 0e0;
		v[5889] = 0e0;
		v[5890] = 0e0;
		v[5891] = 0e0;
		v[5892] = 0e0;
		v[5893] = 0e0;
		v[5894] = 0e0;
		v[5895] = 0e0;
		v[5896] = 0e0;
		v[5897] = 0e0;
		v[5898] = 0e0;
		v[5899] = 0e0;
		v[5900] = 0e0;
		v[5901] = 0e0;
		v[5902] = 0e0;
		v[5903] = 0e0;
		v[5904] = 0e0;
		v[6025] = 0e0;
		v[6026] = 0e0;
		v[6027] = 0e0;
		v[6028] = 0e0;
		v[6029] = 0e0;
		v[6030] = 0e0;
		v[6031] = 0e0;
		v[6032] = 0e0;
		v[6033] = 0e0;
		v[6034] = v[1505];
		v[6035] = v[1507];
		v[6036] = -2e0*v[1508];
		v[6037] = 0e0;
		v[6038] = 0e0;
		v[6039] = 0e0;
		v[6040] = 0e0;
		v[6041] = 0e0;
		v[6042] = 0e0;
		v[6043] = 0e0;
		v[6044] = 0e0;
		v[6045] = 0e0;
		v[6046] = 0e0;
		v[6047] = 0e0;
		v[6048] = 0e0;
		v[6049] = 0e0;
		v[6050] = 0e0;
		v[6051] = 0e0;
		v[6052] = 0e0;
		v[6053] = 0e0;
		v[6054] = 0e0;
		v[6055] = v[1410];
		v[6056] = v[1402];
		v[6057] = v[1399];
		v[6058] = v[1469] - v[1471] + v[1085] * v[1496] + 2e0*dA[3] * (-v[1468] + v[3471]) + dA[5] * v[3472] - v[5994 + i1238];
		v[6059] = -v[1470] + v[1474] + 2e0*dA[4] * (-v[1468] - v[1476] + v[1477]) + (dA[5] * v[1495]) / 2e0 + (dA[3] * v[1496])
			/ 2e0 - v[5964 + i1238];
		v[6060] = v[1473] - v[1475] + v[1085] * v[1495] + 2e0*dA[5] * (-v[1476] + v[3471]) + dA[3] * v[3472] - v[5934 + i1238];
		v[6061] = v[1412];
		v[6062] = v[1404];
		v[6063] = v[1401];
		v[6064] = v[1459] - v[1461] + v[1079] * v[1493] + 2e0*dA[9] * (-v[1458] + v[3473]) + dA[11] * v[3474] - v[5904 + i1238];
		v[6065] = -v[1460] + v[1464] + 2e0*dA[10] * (-v[1458] - v[1466] + v[1467]) + (dA[11] * v[1492]) / 2e0 + (dA[9] * v[1493]
			) / 2e0 - v[5874 + i1238];
		v[6066] = v[1463] - v[1465] + v[1079] * v[1492] + 2e0*dA[11] * (-v[1466] + v[3473]) + dA[9] * v[3474] - v[6024 + i1238];
		v[6067] = -(v[1149] * v[1358]) - v[1398] * v[301];
		v[6068] = -(v[1150] * v[1358]) - v[1395] * v[301];
		v[6069] = -(v[1151] * v[1358]) - v[1390] * v[301];
		v[6070] = -(v[1398] * v[3351]) + v[1392] * v[399];
		v[6071] = -(v[1395] * v[3351]) + v[1392] * v[400];
		v[6072] = -(v[1390] * v[3351]) + v[1392] * v[401];
		v[6073] = -(v[1398] * v[3352]) + v[1391] * v[399];
		v[6074] = -(v[1395] * v[3352]) + v[1391] * v[400];
		v[6075] = -(v[1390] * v[3352]) + v[1391] * v[401];
		v[6076] = -(v[1149] * v[1357]) - v[1398] * v[310];
		v[6077] = -(v[1150] * v[1357]) - v[1395] * v[310];
		v[6078] = -(v[1151] * v[1357]) - v[1390] * v[310];
		v[6079] = -(v[1149] * v[1359]) - v[1398] * v[311];
		v[6080] = -(v[1150] * v[1359]) - v[1395] * v[311];
		v[6081] = -(v[1151] * v[1359]) - v[1390] * v[311];
		v[6082] = -(v[1149] * v[1360]) - v[1398] * v[313];
		v[6083] = -(v[1150] * v[1360]) - v[1395] * v[313];
		v[6084] = -(v[1151] * v[1360]) - v[1390] * v[313];
		Rc[i1238 - 1] += v[1285] * v[1313] + v[1283] * v[1315] + v[1281] * v[1317] + v[1268] * v[1387] - v[4580 + i1238];
		for (i1310 = i1238; i1310 <= 30; i1310++) {
			v[1513] = v[1490] * v[4610 + i1310] + v[1487] * v[4640 + i1310] + v[1484] * v[4670 + i1310] + v[1439] * v[4700 + i1310]
				+ v[6054 + i1310];
			Kc[i1238 - 1][i1310 - 1] += v[1513];
			if (i1238 != i1310) {
				Kc[i1310 - 1][i1238 - 1] += v[1513];
			}
			else {
			};
		};/* end for */
	};/* end for */
	v[1642] = 0e0;
	v[1643] = 0e0;
	v[1644] = 0e0;
	b1645 = (*stick);
	if (b1645) {
		b1646 = b1168;
		if (b1646) {
			v[1644] = 0e0;
			v[1643] = 0e0;
			v[1642] = 0e0;
		}
		else {
		};
	}
	else {
		b1647 = b1202;
		if (b1647) {
			v[1644] = 0e0;
			v[1643] = 0e0;
			v[1642] = 0e0;
		}
		else {
		};
	};
	v[3478] = (*ct)*v[1642];
	v[3579] = -v[1170] + v[1642] * v[3475];
	v[3477] = (*ct)*v[1643];
	v[3577] = -v[1171] + v[1643] * v[3475];
	v[3476] = (*ct)*v[1644];
	v[3575] = -v[1172] + v[1644] * v[3475];
	v[1651] = v[1655] * v[3476];
	v[1837] = -(v[1651] * v[458]);
	v[1652] = v[1657] * v[3476];
	v[1838] = -(v[1652] * v[465]);
	v[1853] = -(v[1659] * v[3476]) / 2e0;
	v[1654] = v[1661] * v[3476];
	v[3486] = v[1654] * v[247];
	v[3485] = v[1654] * v[248];
	v[1656] = v[1655] * v[3477];
	v[1840] = -(v[1656] * v[458]);
	v[1658] = v[1657] * v[3477];
	v[1841] = -(v[1658] * v[465]);
	v[1850] = -(v[1659] * v[3477]) / 2e0;
	v[1662] = v[1661] * v[3477];
	v[3488] = v[1662] * v[247];
	v[3487] = v[1662] * v[248];
	v[1663] = -((*ct)*(v[1563] * v[1642] + v[1564] * v[1643] + v[1565] * v[1644]));
	v[1877] = v[1663] * v[1943];
	v[1863] = v[1663] * v[2927];
	v[1664] = -((*ct)*(v[1559] * v[1642] + v[1560] * v[1643] + v[1561] * v[1644]));
	v[1870] = v[1664] * v[2926];
	v[3492] = v[1870] + v[1663] * v[1942];
	v[3491] = v[1863] + v[1664] * v[1940];
	v[1665] = -((*ct)*(v[1555] * v[1642] + v[1556] * v[1643] + v[1557] * v[1644]));
	v[1875] = v[1665] * v[2925];
	v[3720] = v[1875] + v[1877];
	v[3493] = v[1875] + v[1664] * v[1941];
	v[3711] = v[1877] + v[3493];
	v[1872] = v[1665] * v[3359];
	v[3717] = v[1872] + v[3492];
	v[3712] = v[1870] + v[1872];
	v[1866] = v[1665] * v[3361];
	v[3721] = v[1866] + v[3491];
	v[3713] = v[1863] + v[1866];
	v[1666] = -((*ct)*(v[1539] * v[1642] + v[1540] * v[1643] + v[1541] * v[1644]));
	v[1895] = v[1666] * v[1937];
	v[1881] = v[1666] * v[2924];
	v[1667] = -((*ct)*(v[1535] * v[1642] + v[1536] * v[1643] + v[1537] * v[1644]));
	v[1888] = v[1667] * v[2923];
	v[3495] = v[1888] + v[1666] * v[1936];
	v[3494] = v[1881] + v[1667] * v[1934];
	v[1668] = -((*ct)*(v[1531] * v[1642] + v[1532] * v[1643] + v[1533] * v[1644]));
	v[1893] = v[1668] * v[2922];
	v[6119] = (*ct)*(-(v[1519] * v[1642]) - v[1520] * v[1643] - v[1521] * v[1644]);
	v[6120] = (*ct)*(-(v[1523] * v[1642]) - v[1524] * v[1643] - v[1525] * v[1644]);
	v[6121] = (*ct)*(-(v[1527] * v[1642]) - v[1528] * v[1643] - v[1529] * v[1644]);
	v[6122] = v[1893] + v[1667] * v[3354] + v[1666] * v[3356];
	v[6123] = v[1888] + v[1666] * v[1934] + v[1668] * v[1935];
	v[6124] = v[1881] + v[1667] * v[1936] + v[1668] * v[1937];
	v[6125] = (*ct)*(-(v[1543] * v[1642]) - v[1544] * v[1643] - v[1545] * v[1644]);
	v[6126] = (*ct)*(-(v[1547] * v[1642]) - v[1548] * v[1643] - v[1549] * v[1644]);
	v[6127] = (*ct)*(-(v[1551] * v[1642]) - v[1552] * v[1643] - v[1553] * v[1644]);
	v[6128] = v[1875] + v[1664] * v[3359] + v[1663] * v[3361];
	v[6129] = v[1870] + v[1663] * v[1940] + v[1665] * v[1941];
	v[6130] = v[1863] + v[1664] * v[1942] + v[1665] * v[1943];
	v[6131] = (*ct)*(-(v[1567] * v[1642]) - v[1568] * v[1643] - v[1569] * v[1644]);
	v[6132] = (*ct)*(-(v[1571] * v[1642]) - v[1572] * v[1643] - v[1573] * v[1644]);
	v[6133] = (*ct)*(-(v[1575] * v[1642]) - v[1576] * v[1643] - v[1577] * v[1644]);
	v[6134] = (*ct)*(-(v[1579] * v[1642]) - v[1580] * v[1643] - v[1581] * v[1644]);
	v[6135] = (*ct)*(-(v[1583] * v[1642]) - v[1584] * v[1643] - v[1585] * v[1644]);
	v[6136] = (*ct)*(-(v[1587] * v[1642]) - v[1588] * v[1643] - v[1589] * v[1644]);
	v[6137] = (*ct)*(-(v[1591] * v[1642]) - v[1592] * v[1643] - v[1593] * v[1644]);
	v[6138] = (*ct)*(-(v[1595] * v[1642]) - v[1596] * v[1643] - v[1597] * v[1644]);
	v[6139] = (*ct)*(-(v[1599] * v[1642]) - v[1600] * v[1643] - v[1601] * v[1644]);
	v[6140] = (*ct)*(-(v[1603] * v[1642]) - v[1604] * v[1643] - v[1605] * v[1644]);
	v[6141] = (*ct)*(-(v[1607] * v[1642]) - v[1608] * v[1643] - v[1609] * v[1644]);
	v[6142] = (*ct)*(-(v[1611] * v[1642]) - v[1612] * v[1643] - v[1613] * v[1644]);
	v[6143] = (*ct)*(-(v[1615] * v[1642]) - v[1616] * v[1643] - v[1617] * v[1644]);
	v[6144] = (*ct)*(-(v[1619] * v[1642]) - v[1620] * v[1643] - v[1621] * v[1644]);
	v[6145] = (*ct)*(-(v[1623] * v[1642]) - v[1624] * v[1643] - v[1625] * v[1644]);
	v[6146] = (*ct)*(-(v[1627] * v[1642]) - v[1628] * v[1643] - v[1629] * v[1644]);
	v[6147] = (*ct)*(-(v[1631] * v[1642]) - v[1632] * v[1643] - v[1633] * v[1644]);
	v[6148] = (*ct)*(-(v[1635] * v[1642]) - v[1636] * v[1643] - v[1637] * v[1644]);
	v[3708] = v[1893] + v[1895];
	v[3496] = v[1893] + v[1667] * v[1935];
	v[3699] = v[1895] + v[3496];
	v[1890] = v[1668] * v[3354];
	v[3705] = v[1890] + v[3495];
	v[3700] = v[1888] + v[1890];
	v[1884] = v[1668] * v[3356];
	v[3709] = v[1884] + v[3494];
	v[3701] = v[1881] + v[1884];
	v[1669] = v[1655] * v[3478];
	v[1843] = -(v[1669] * v[458]);
	v[1670] = v[1657] * v[3478];
	v[1844] = -(v[1670] * v[465]);
	v[1847] = -(v[1659] * v[3478]) / 2e0;
	v[1672] = v[1661] * v[3478];
	v[3490] = v[1672] * v[247];
	v[3489] = v[1672] * v[248];
	v[1673] = (*epst)*v[1644];
	v[2303] = -(v[1673] * v[416]);
	v[1674] = (*epst)*v[1643];
	v[2305] = -(v[1674] * v[415]);
	v[2302] = v[2303] + v[2305];
	v[1675] = (*epst)*v[1642];
	v[2306] = -(v[1675] * v[414]);
	v[2307] = v[2305] + v[2306];
	v[2304] = v[2303] + v[2306];
	v[1676] = 0e0;
	v[1677] = 0e0;
	v[1678] = 0e0;
	v[1679] = 0e0;
	v[1680] = 0e0;
	v[1681] = 0e0;
	v[1682] = 0e0;
	v[1683] = 0e0;
	v[1684] = 0e0;
	v[1685] = 0e0;
	v[1686] = 0e0;
	v[1687] = 0e0;
	b1688 = (*previouscontact);
	if (b1688) {
		v[1689] = -(v[1053] * v[1673]);
		v[1690] = -(v[1052] * v[1674]);
		v[1692] = v[1675] * v[1691] + v[2302] * v[414];
		v[1694] = v[1674] * v[1693] + v[2304] * v[415];
		v[1696] = v[1673] * v[1695] + v[2307] * v[416];
		v[1678] = v[1053] * v[2307] + v[1673] * v[3479];
		v[1677] = v[1052] * v[2304] + v[1674] * v[3480];
		v[1698] = -(v[1051] * v[1675]);
		v[1676] = v[1051] * v[2302] - v[1675] * v[3481];
		v[1679] = gti[0] * v[1692];
		v[1680] = gti[1] * v[1692];
		v[1681] = gti[2] * v[1692];
		v[1701] = -(v[1692] * v[300]);
		v[1702] = -(v[1692] * v[298]);
		v[1703] = -(v[1692] * v[297]);
		v[1704] = -(v[1692] * v[3350]);
		v[1705] = -(v[1692] * v[3349]);
		v[1706] = -(v[1692] * v[288]);
		v[1707] = v[1692] * v[246];
		v[1708] = v[1692] * v[245];
		v[1709] = v[1707] * v[254];
		v[1710] = v[1707] * v[252];
		v[1711] = v[1708] * v[254];
		v[1712] = v[1708] * v[252];
		v[1682] = gti[0] * v[1694];
		v[1683] = gti[1] * v[1694];
		v[1684] = gti[2] * v[1694];
		v[1713] = -(v[1694] * v[300]);
		v[1714] = -(v[1694] * v[298]);
		v[1715] = -(v[1694] * v[297]);
		v[1716] = -(v[1694] * v[3350]);
		v[1717] = -(v[1694] * v[3349]);
		v[1718] = -(v[1694] * v[288]);
		v[1719] = v[1694] * v[246];
		v[1720] = v[1694] * v[245];
		v[1721] = v[1719] * v[254];
		v[1722] = v[1719] * v[252];
		v[1723] = v[1720] * v[254];
		v[1724] = v[1720] * v[252];
		v[1685] = gti[0] * v[1696];
		v[1686] = gti[1] * v[1696];
		v[1687] = gti[2] * v[1696];
		v[1725] = -(v[1696] * v[300]);
		v[1726] = -(v[1696] * v[298]);
		v[1727] = -(v[1696] * v[297]);
		v[1728] = -(v[1696] * v[3350]);
		v[1729] = -(v[1696] * v[3349]);
		v[1730] = -(v[1696] * v[288]);
		v[1731] = v[1696] * v[246];
		v[1732] = v[1696] * v[245];
		v[1733] = v[1731] * v[254];
		v[1734] = v[1731] * v[252];
		v[1735] = v[1732] * v[254];
		v[1736] = v[1732] * v[252];
	}
	else {
		v[1712] = 0e0;
		v[1711] = 0e0;
		v[1724] = 0e0;
		v[1723] = 0e0;
		v[1736] = 0e0;
		v[1735] = 0e0;
		v[1710] = 0e0;
		v[1709] = 0e0;
		v[1722] = 0e0;
		v[1721] = 0e0;
		v[1734] = 0e0;
		v[1733] = 0e0;
		v[1708] = 0e0;
		v[1720] = 0e0;
		v[1732] = 0e0;
		v[1707] = 0e0;
		v[1719] = 0e0;
		v[1731] = 0e0;
		v[1706] = 0e0;
		v[1718] = 0e0;
		v[1730] = 0e0;
		v[1705] = 0e0;
		v[1717] = 0e0;
		v[1729] = 0e0;
		v[1704] = 0e0;
		v[1716] = 0e0;
		v[1728] = 0e0;
		v[1703] = 0e0;
		v[1715] = 0e0;
		v[1727] = 0e0;
		v[1702] = 0e0;
		v[1714] = 0e0;
		v[1726] = 0e0;
		v[1701] = 0e0;
		v[1713] = 0e0;
		v[1725] = 0e0;
		v[1698] = 0e0;
		v[1690] = 0e0;
		v[1689] = 0e0;
	};
	b1737 = b1016;
	if (b1737) {
		v[1763] = -(v[1033] * v[1687]) / 2e0;
		v[1762] = -(v[1033] * v[1683]) / 2e0;
		v[1761] = v[1033] * v[1686];
		v[1760] = v[1033] * v[1684];
		v[1756] = v[1033] * v[1685];
		v[1755] = v[1033] * v[1681];
		v[1752] = v[1033] * v[1682];
		v[1751] = v[1033] * v[1680];
		v[1738] = v[1760] + v[1761];
		v[1739] = v[1755] + v[1756];
		v[1740] = v[1751] + v[1752];
		v[1750] = (v[1679] * v[1741]) / 2e0 + v[1680] * v[1742] + v[1681] * v[1743] + v[1682] * v[1744] + (v[1683] * v[1745])
			/ 2e0 + v[1684] * v[1746] + v[1685] * v[1747] + v[1686] * v[1748] + (v[1687] * v[1749]) / 2e0;
		v[2269] = (-4e0*v[1750]) / Power(v[1753], 2) + v[1762] + v[1763];
		v[2268] = -(v[1033] * v[1679]) / 2e0 - v[1762] + v[2269];
		v[2267] = v[1762] - v[1763] + v[2268];
		v[1754] = (v[1031] * v[1738] + v[1030] * v[1739] - 2e0*v[1751] + 2e0*v[1752] + 4e0*v[1032] * v[2267]) / 2e0;
		v[1759] = (v[1032] * v[1738] + v[1030] * v[1740] + 2e0*v[1755] - 2e0*v[1756] + 4e0*v[1031] * v[2268]) / 2e0;
		v[1764] = (v[1032] * v[1739] + v[1031] * v[1740] - 2e0*v[1760] + 2e0*v[1761] + 4e0*v[1030] * v[2269]) / 2e0;
		v[3482] = v[1020] * v[1754] + v[1019] * v[1759] + v[1018] * v[1764];
		v[2255] = v[1029] * v[3482];
		v[2252] = v[1023] * v[3482];
		v[1767] = v[1028] * v[2252] + v[2255] / (Power(cos(v[1765]), 2)*sqrt(v[2256]));
		v[3558] = v[1767] / v[1021];
		v[3483] = v[1767] / v[1021];
		v[1768] = v[1754] * v[3395] + v[1020] * v[3483];
		v[1770] = v[1759] * v[3395] + v[1019] * v[3483];
		v[1771] = v[1764] * v[3395] + v[1018] * v[3483];
		v[1676] = v[1676] - v[1768] * v[424] + v[1770] * v[425];
		v[1678] = v[1678] - v[1770] * v[423] + v[1771] * v[424];
		v[1677] = v[1677] + v[1768] * v[423] - v[1771] * v[425];
	}
	else {
	};
	v[1678] = v[1678] + 2e0*v[1689] * v[416];
	v[1677] = v[1677] + 2e0*v[1690] * v[415];
	v[1676] = v[1676] + 2e0*v[1698] * v[414];
	v[2675] = v[1676] * v[399] + v[1677] * v[400] + v[1678] * v[401];
	v[1772] = v[2675] * v[412];
	v[3484] = v[1772] / v[1773];
	v[1774] = v[3484] * v[401] + v[1678] * v[413];
	v[1776] = v[3484] * v[400] + v[1677] * v[413];
	v[1777] = v[3484] * v[399] + v[1676] * v[413];
	v[1782] = v[1663] * v[2336];
	v[1783] = v[1663] * v[2335];
	v[1784] = v[1663] * v[2334];
	v[1787] = v[1664] * v[2331];
	v[1788] = v[1663] * v[385] + v[1664] * v[387];
	v[3497] = v[1788] * v[207];
	v[1791] = v[1664] * v[2329];
	v[1792] = -v[1782] + v[1787];
	v[1793] = v[1782] + v[1787];
	v[1795] = v[1664] * v[2330] + v[3497] / v[376];
	v[1798] = v[1665] * v[2324];
	v[1799] = v[1663] * v[379] + v[1665] * v[387];
	v[3498] = v[1799] * v[212];
	v[1800] = v[1664] * v[379] + v[1665] * v[385];
	v[3499] = v[1800] * v[216];
	v[3961] = -(v[3358] * v[3497]) - v[3499] * v[374] - v[3498] * v[375] + v[1664] * (-(v[3655] * v[379]) - v[380] * v[385]
		- v[3656] * v[387]) + v[1665] * (-(v[377] * v[379]) - v[3657] * v[385] - v[3658] * v[387]) + v[1663] * (-(v[3653] * v[379]
			) - v[3654] * v[385] - v[387] * v[389]);
	v[1802] = v[1665] * v[2326] + v[3498] / v[376];
	v[1803] = v[1795] + v[1802];
	v[1804] = -v[1795] + v[1802];
	v[1806] = v[1665] * v[2325] + v[3499] / v[376];
	v[1807] = v[1783] + v[1806];
	v[1808] = -v[1783] + v[1806];
	v[1809] = v[1666] * v[2321];
	v[1810] = v[1666] * v[2320];
	v[1811] = v[1666] * v[2319];
	v[1814] = v[1667] * v[2316];
	v[1815] = v[1666] * v[359] + v[1667] * v[361];
	v[3510] = v[1815] * v[188];
	v[1818] = v[1667] * v[2314];
	v[1819] = -v[1809] + v[1814];
	v[1820] = v[1809] + v[1814];
	v[1822] = v[1667] * v[2315] + v[3510] / v[350];
	v[1825] = v[1668] * v[2309];
	v[1826] = v[1666] * v[353] + v[1668] * v[361];
	v[3511] = v[1826] * v[193];
	v[1827] = v[1667] * v[353] + v[1668] * v[359];
	v[3512] = v[1827] * v[197];
	v[3964] = -(v[3353] * v[3510]) - v[349] * v[3511] - v[348] * v[3512] + v[1666] * (-(v[361] * v[363]) - v[353] * v[3665]
		- v[359] * v[3666]) + v[1667] * (-(v[354] * v[359]) - v[353] * v[3667] - v[361] * v[3668]) + v[1668] * (-(v[351] * v[353])
			- v[359] * v[3669] - v[361] * v[3670]);
	v[1829] = v[1668] * v[2311] + v[3511] / v[350];
	v[1830] = v[1822] + v[1829];
	v[1831] = -v[1822] + v[1829];
	v[1833] = v[1668] * v[2310] + v[3512] / v[350];
	v[1834] = v[1810] + v[1833];
	v[1835] = -v[1810] + v[1833];
	v[1729] = v[1729] - v[1774] * v[3351] + v[1651] * v[456];
	v[1725] = v[1725] + v[1837] - v[1774] * v[313] + v[1652] * v[466];
	v[1726] = v[1726] - v[1837] + v[1838] - v[1774] * v[311];
	v[1727] = v[1727] - v[1838] - v[1774] * v[310] + v[1651] * v[457];
	v[1728] = v[1728] - v[1774] * v[3352] + v[1652] * v[464];
	v[1839] = v[1651] + v[1652];
	v[1717] = v[1717] - v[1776] * v[3351] + v[1656] * v[456];
	v[1713] = v[1713] + v[1840] - v[1776] * v[313] + v[1658] * v[466];
	v[1714] = v[1714] - v[1840] + v[1841] - v[1776] * v[311];
	v[1715] = v[1715] - v[1841] - v[1776] * v[310] + v[1656] * v[457];
	v[1716] = v[1716] - v[1776] * v[3352] + v[1658] * v[464];
	v[1842] = v[1656] + v[1658];
	v[1705] = v[1705] - v[1777] * v[3351] + v[1669] * v[456];
	v[1701] = v[1701] + v[1843] - v[1777] * v[313] + v[1670] * v[466];
	v[1702] = v[1702] - v[1843] + v[1844] - v[1777] * v[311];
	v[1703] = v[1703] - v[1844] - v[1777] * v[310] + v[1669] * v[457];
	v[1704] = v[1704] - v[1777] * v[3352] + v[1670] * v[464];
	v[1845] = v[1669] + v[1670];
	v[1730] = v[1730] - v[1774] * v[301] + v[1839] * v[455];
	v[1718] = v[1718] - v[1776] * v[301] + v[1842] * v[455];
	v[1706] = v[1706] - v[1777] * v[301] + v[1845] * v[455];
	v[1846] = v[1847] + v[1777] * v[247];
	v[1848] = -v[1847] + v[1777] * v[248];
	v[1708] = v[1708] + v[1846];
	v[1707] = v[1707] + v[1848];
	v[1849] = v[1850] + v[1776] * v[247];
	v[1851] = -v[1850] + v[1776] * v[248];
	v[1720] = v[1720] + v[1849];
	v[1719] = v[1719] + v[1851];
	v[1852] = v[1853] + v[1774] * v[247];
	v[1854] = -v[1853] + v[1774] * v[248];
	v[1732] = v[1732] + v[1852];
	v[1731] = v[1731] + v[1854];
	v[1733] = v[1733] + v[1854] * v[260] + v[3485] * v[443];
	v[1734] = v[1734] + v[1854] * v[258] + v[3485] * v[442];
	v[1735] = v[1735] + v[1852] * v[260] + v[3486] * v[443];
	v[1736] = v[1736] + v[1852] * v[258] + v[3486] * v[442];
	v[1721] = v[1721] + v[1851] * v[260] + v[3487] * v[443];
	v[1722] = v[1722] + v[1851] * v[258] + v[3487] * v[442];
	v[1723] = v[1723] + v[1849] * v[260] + v[3488] * v[443];
	v[1724] = v[1724] + v[1849] * v[258] + v[3488] * v[442];
	v[1709] = v[1709] + v[1848] * v[260] + v[3489] * v[443];
	v[1710] = v[1710] + v[1848] * v[258] + v[3489] * v[442];
	v[1711] = v[1711] + v[1846] * v[260] + v[3490] * v[443];
	v[1712] = v[1712] + v[1846] * v[258] + v[3490] * v[442];
	v[1862] = QBAi[2][1] * v[1733] + QBAi[2][0] * v[1734] + v[3721] * v[387];
	v[1865] = QBAi[1][1] * v[1733] + QBAi[1][0] * v[1734] + v[1800] * v[3361] + v[3491] * v[385];
	v[1867] = QBAi[0][1] * v[1733] + QBAi[0][0] * v[1734] + v[3713] * v[379];
	v[1868] = QBAi[2][1] * v[1721] + QBAi[2][0] * v[1722] + v[1799] * v[3359] + v[3492] * v[387];
	v[1871] = QBAi[1][1] * v[1721] + QBAi[1][0] * v[1722] + v[3717] * v[385];
	v[1873] = QBAi[0][1] * v[1721] + QBAi[0][0] * v[1722] + v[3712] * v[379];
	v[1874] = QBAi[2][1] * v[1709] + QBAi[2][0] * v[1710] + v[1788] * v[1941] + v[3720] * v[387];
	v[1876] = QBAi[1][1] * v[1709] + QBAi[1][0] * v[1710] + v[3493] * v[385];
	v[1879] = QBAi[0][1] * v[1709] + QBAi[0][0] * v[1710] + v[3711] * v[379];
	v[1880] = QAAi[2][1] * v[1735] + QAAi[2][0] * v[1736] + v[361] * v[3709];
	v[1883] = QAAi[1][1] * v[1735] + QAAi[1][0] * v[1736] + v[1827] * v[3356] + v[3494] * v[359];
	v[1885] = QAAi[0][1] * v[1735] + QAAi[0][0] * v[1736] + v[353] * v[3701];
	v[1886] = QAAi[2][1] * v[1723] + QAAi[2][0] * v[1724] + v[1826] * v[3354] + v[3495] * v[361];
	v[1889] = QAAi[1][1] * v[1723] + QAAi[1][0] * v[1724] + v[359] * v[3705];
	v[1891] = QAAi[0][1] * v[1723] + QAAi[0][0] * v[1724] + v[353] * v[3700];
	v[1892] = QAAi[2][1] * v[1711] + QAAi[2][0] * v[1712] + v[1815] * v[1935] + v[361] * v[3708];
	v[1894] = QAAi[1][1] * v[1711] + QAAi[1][0] * v[1712] + v[3496] * v[359];
	v[1897] = QAAi[0][1] * v[1711] + QAAi[0][0] * v[1712] + v[353] * v[3699];
	v[1898] = -(v[1792] * v[202]) + v[1807] * v[218] - v[1803] * v[219] + v[1798] * v[3507];
	v[3685] = -v[1898] / 2e0;
	v[1899] = -(v[1808] * v[202]) - v[1793] * v[218] - v[1803] * v[220] + v[1791] * v[3509];
	v[3684] = v[1899] / 2e0;
	v[1900] = -(v[1804] * v[202]) - v[1793] * v[219] + v[1807] * v[220] + v[1784] * v[3508];
	v[3683] = -v[1900] / 2e0;
	v[9993] = 0e0;
	v[9994] = 0e0;
	v[9995] = 0e0;
	v[9996] = 0e0;
	v[9997] = 0e0;
	v[9998] = 0e0;
	v[9999] = 0e0;
	v[10000] = 0e0;
	v[10001] = 0e0;
	v[10002] = v[3685];
	v[10003] = v[3684];
	v[10004] = v[3683];
	v[10005] = 0e0;
	v[10006] = 0e0;
	v[10007] = 0e0;
	v[10008] = 0e0;
	v[10009] = 0e0;
	v[10010] = 0e0;
	v[10011] = 0e0;
	v[10012] = 0e0;
	v[10013] = 0e0;
	v[10014] = 0e0;
	v[10015] = 0e0;
	v[10016] = 0e0;
	v[10017] = 0e0;
	v[10018] = 0e0;
	v[10019] = 0e0;
	v[10020] = 0e0;
	v[10021] = 0e0;
	v[10022] = 0e0;
	v[1902] = v[1865] * v[202];
	v[1903] = v[1867] * v[202];
	v[1904] = v[1868] * v[202];
	v[1905] = (v[1871] * v[202]) / 2e0;
	v[1906] = v[1873] * v[202];
	v[1907] = v[1874] * v[202];
	v[1908] = v[1876] * v[202];
	v[1909] = (v[1879] * v[202]) / 2e0;
	v[1910] = 1e0 / Power(v[376], 2);
	v[3506] = -(v[1910] * v[385]);
	v[3505] = -(v[1910] * v[387]);
	v[3504] = -(v[1910] * v[379]);
	v[3503] = -(v[1910] * v[374]);
	v[3502] = -(v[1663] * v[1910]);
	v[3501] = -(v[1910] * v[375]);
	v[3500] = -(v[1910] * v[3358]);
	v[2877] = -(v[1910] * v[3658]);
	v[2876] = -(v[1910] * v[3657]);
	v[2875] = -(v[1910] * v[3655]);
	v[2874] = -(v[1910] * v[3656]);
	v[2873] = -(v[1910] * v[3653]);
	v[2872] = -(v[1910] * v[3654]);
	v[2871] = -(v[1910] * v[377]);
	v[3661] = v[2871] * v[379];
	v[2870] = -(v[1910] * v[380]);
	v[3660] = v[2870] * v[385];
	v[3659] = -(v[1910] * v[387] * v[389]);
	v[2868] = -(v[1910] * v[3497]);
	v[2867] = -(v[1910] * v[3498]);
	v[2866] = -(v[1910] * v[3499]);
	v[2865] = v[1800] * v[3503];
	v[2864] = v[1799] * v[3501];
	v[2863] = v[1788] * v[3500];
	v[2820] = v[1664] * v[3500];
	v[2819] = v[3360] * v[3502];
	v[2816] = v[1665] * v[2871];
	v[3949] = v[2863] + (v[2816] + v[2819])*v[387];
	v[3638] = v[2816] + v[2820];
	v[3950] = v[2819] + v[3638];
	v[2810] = v[1665] * v[3501];
	v[2806] = v[1664] * v[2870];
	v[3948] = v[2806] + v[2810];
	v[2805] = v[3362] * v[3502];
	v[3634] = v[2805] + v[2806];
	v[3947] = v[2810] + v[3634];
	v[3946] = v[2864] + v[3634] * v[387];
	v[2799] = v[1665] * v[3503];
	v[2796] = -(v[1664] * v[1910] * v[386]);
	v[2795] = v[3502] * v[389];
	v[3945] = v[2795] + v[2799];
	v[3633] = v[2795] + v[2796];
	v[3944] = v[2865] + v[3633] * v[385];
	v[3943] = v[2799] + v[3633];
	v[2723] = v[214] * v[3504];
	v[2719] = v[209] * v[3504];
	v[2716] = v[207] * v[3505];
	v[2715] = v[206] * v[3506];
	v[2710] = v[212] * v[3505];
	v[2709] = v[211] * v[3506];
	v[3934] = v[2709] + v[2719];
	v[3610] = v[2709] + v[2710];
	v[3932] = v[2719] + v[3610];
	v[2707] = v[205] * v[3504];
	v[3930] = v[2707] + v[2716];
	v[3611] = v[2707] + v[2715];
	v[3933] = v[2716] + v[3611];
	v[2702] = v[217] * v[3505];
	v[3935] = v[2702] + v[2723];
	v[2701] = v[216] * v[3506];
	v[3608] = v[2701] + v[2702];
	v[3931] = v[2723] + v[3608];
	v[2333] = v[3659] + v[2873] * v[379] + v[2872] * v[385];
	v[2328] = v[3660] + v[2875] * v[379] + v[2874] * v[387];
	v[2323] = v[3661] + v[2876] * v[385] + v[2877] * v[387];
	v[2173] = v[207] * v[3500];
	v[2171] = v[212] * v[3501];
	v[2167] = v[216] * v[3503];
	v[2862] = v[1784] + v[1791] + v[1798] + v[1800] * v[2167] + v[1799] * v[2171] + v[1788] * v[2173] + v[1665] * v[2323]
		+ v[1664] * v[2328] + v[1663] * v[2333];
	v[2861] = (-(dA[9] * v[1898]) + dA[10] * v[1899] - dA[11] * v[1900] + 4e0*v[202] * v[2862] - v[1792] * v[3507]
		- v[1804] * v[3508] - v[1808] * v[3509] + v[1862] * v[621] + 2e0*v[1865] * v[624] + 2e0*v[1867] * v[625]
		+ 2e0*v[1868] * v[626] + v[1871] * v[631] + 2e0*v[1873] * v[633] + 2e0*v[1874] * v[634] + 2e0*v[1876] * v[639]
		+ v[1879] * v[644]) / 2e0;
	v[2920] = -v[1905] - v[1909] - 4e0*v[1301] * v[2861];
	v[2918] = v[1905] - (v[1862] * v[202]) / 2e0 + v[2920];
	v[2915] = -v[1905] + v[1909] + v[2918];
	v[1912] = -(v[1819] * v[183]) + v[1834] * v[199] - v[1830] * v[200] + v[1825] * v[3520];
	v[3682] = -v[1912] / 2e0;
	v[1913] = -(v[183] * v[1835]) - v[1820] * v[199] - v[1830] * v[201] + v[1818] * v[3522];
	v[3681] = v[1913] / 2e0;
	v[1914] = -(v[183] * v[1831]) - v[1820] * v[200] + v[1834] * v[201] + v[1811] * v[3521];
	v[3680] = -v[1914] / 2e0;
	v[10023] = 0e0;
	v[10024] = 0e0;
	v[10025] = 0e0;
	v[10026] = v[3682];
	v[10027] = v[3681];
	v[10028] = v[3680];
	v[10029] = 0e0;
	v[10030] = 0e0;
	v[10031] = 0e0;
	v[10032] = 0e0;
	v[10033] = 0e0;
	v[10034] = 0e0;
	v[10035] = 0e0;
	v[10036] = 0e0;
	v[10037] = 0e0;
	v[10038] = 0e0;
	v[10039] = 0e0;
	v[10040] = 0e0;
	v[10041] = 0e0;
	v[10042] = 0e0;
	v[10043] = 0e0;
	v[10044] = 0e0;
	v[10045] = 0e0;
	v[10046] = 0e0;
	v[10047] = 0e0;
	v[10048] = 0e0;
	v[10049] = 0e0;
	v[10050] = 0e0;
	v[10051] = 0e0;
	v[10052] = 0e0;
	v[1916] = v[183] * v[1883];
	v[1917] = v[183] * v[1885];
	v[1918] = v[183] * v[1886];
	v[1919] = (v[183] * v[1889]) / 2e0;
	v[1920] = v[183] * v[1891];
	v[1921] = v[183] * v[1892];
	v[1922] = v[183] * v[1894];
	v[1923] = (v[183] * v[1897]) / 2e0;
	v[1924] = 1e0 / Power(v[350], 2);
	v[3519] = -(v[1924] * v[359]);
	v[3518] = -(v[1924] * v[361]);
	v[3517] = -(v[1924] * v[353]);
	v[3516] = -(v[1924] * v[348]);
	v[3515] = -(v[1666] * v[1924]);
	v[3514] = -(v[1924] * v[349]);
	v[3513] = -(v[1924] * v[3353]);
	v[2899] = -(v[1924] * v[3670]);
	v[2898] = -(v[1924] * v[3669]);
	v[2897] = -(v[1924] * v[3667]);
	v[2896] = -(v[1924] * v[3668]);
	v[2895] = -(v[1924] * v[3665]);
	v[2894] = -(v[1924] * v[3666]);
	v[2893] = -(v[1924] * v[351]);
	v[3673] = v[2893] * v[353];
	v[2892] = -(v[1924] * v[354]);
	v[3672] = v[2892] * v[359];
	v[3671] = -(v[1924] * v[361] * v[363]);
	v[2890] = -(v[1924] * v[3510]);
	v[2889] = -(v[1924] * v[3511]);
	v[2888] = -(v[1924] * v[3512]);
	v[2887] = v[1827] * v[3516];
	v[2886] = v[1826] * v[3514];
	v[2885] = v[1815] * v[3513];
	v[2853] = v[1667] * v[3513];
	v[2852] = v[3355] * v[3515];
	v[2849] = v[1668] * v[2893];
	v[3957] = v[2885] + (v[2849] + v[2852])*v[361];
	v[3644] = v[2849] + v[2853];
	v[3958] = v[2852] + v[3644];
	v[2843] = v[1668] * v[3514];
	v[2839] = v[1667] * v[2892];
	v[3956] = v[2839] + v[2843];
	v[2838] = v[3357] * v[3515];
	v[3640] = v[2838] + v[2839];
	v[3955] = v[2843] + v[3640];
	v[3954] = v[2886] + v[361] * v[3640];
	v[2832] = v[1668] * v[3516];
	v[2829] = -(v[1667] * v[1924] * v[360]);
	v[2828] = v[3515] * v[363];
	v[3953] = v[2828] + v[2832];
	v[3639] = v[2828] + v[2829];
	v[3952] = v[2887] + v[359] * v[3639];
	v[3951] = v[2832] + v[3639];
	v[2756] = v[195] * v[3517];
	v[2752] = v[190] * v[3517];
	v[2749] = v[188] * v[3518];
	v[2748] = v[187] * v[3519];
	v[2743] = v[193] * v[3518];
	v[2742] = v[192] * v[3519];
	v[3940] = v[2742] + v[2752];
	v[3618] = v[2742] + v[2743];
	v[3938] = v[2752] + v[3618];
	v[2740] = v[186] * v[3517];
	v[3936] = v[2740] + v[2749];
	v[3619] = v[2740] + v[2748];
	v[3939] = v[2749] + v[3619];
	v[2735] = v[198] * v[3518];
	v[3941] = v[2735] + v[2756];
	v[2734] = v[197] * v[3519];
	v[3616] = v[2734] + v[2735];
	v[3937] = v[2756] + v[3616];
	v[2318] = v[2895] * v[353] + v[2894] * v[359] + v[3671];
	v[2313] = v[2897] * v[353] + v[2896] * v[361] + v[3672];
	v[2308] = v[2898] * v[359] + v[2899] * v[361] + v[3673];
	v[2145] = v[188] * v[3513];
	v[2143] = v[193] * v[3514];
	v[2139] = v[197] * v[3516];
	v[2884] = v[1811] + v[1818] + v[1825] + v[1827] * v[2139] + v[1826] * v[2143] + v[1815] * v[2145] + v[1668] * v[2308]
		+ v[1667] * v[2313] + v[1666] * v[2318];
	v[2883] = (-(dA[3] * v[1912]) + dA[4] * v[1913] - dA[5] * v[1914] + 4e0*v[183] * v[2884] - v[1819] * v[3520]
		- v[1831] * v[3521] - v[1835] * v[3522] + v[1880] * v[652] + 2e0*v[1883] * v[655] + 2e0*v[1885] * v[656]
		+ 2e0*v[1886] * v[657] + v[1889] * v[662] + 2e0*v[1891] * v[664] + 2e0*v[1892] * v[665] + 2e0*v[1894] * v[670]
		+ v[1897] * v[675]) / 2e0;
	v[2914] = -v[1919] - v[1923] - 4e0*v[1290] * v[2883];
	v[2912] = -(v[183] * v[1880]) / 2e0 + v[1919] + v[2914];
	v[2909] = -v[1919] + v[1923] + v[2912];
	v[2917] = (v[1903] + v[1907]) / 2e0;
	v[1927] = v[1902] + v[1904];
	v[2919] = v[1927] / 2e0;
	v[1928] = v[1906] + v[1908];
	v[2916] = v[1928] / 2e0;
	v[2911] = (v[1917] + v[1921]) / 2e0;
	v[1930] = v[1916] + v[1918];
	v[2913] = v[1930] / 2e0;
	v[1931] = v[1920] + v[1922];
	v[6089] = -(v[1170] * v[1519]) - v[1171] * v[1520] - v[1172] * v[1521] + v[1708];
	v[6090] = -(v[1170] * v[1523]) - v[1171] * v[1524] - v[1172] * v[1525] + v[1720];
	v[6091] = -(v[1170] * v[1527]) - v[1171] * v[1528] - v[1172] * v[1529] + v[1732];
	v[6092] = -(v[1170] * v[1531]) - v[1171] * v[1532] - v[1172] * v[1533] + v[1916] - v[1918] + v[1085] * v[1931]
		+ 2e0*dA[3] * v[2909] + dA[5] * v[2911] + v[183] * v[3682];
	v[6093] = -(v[1170] * v[1535]) - v[1171] * v[1536] - v[1172] * v[1537] - v[1917] + v[1921] + (dA[5] * v[1930]) / 2e0 +
		(dA[3] * v[1931]) / 2e0 + 2e0*dA[4] * v[2912] + v[183] * v[3681];
	v[6094] = -(v[1170] * v[1539]) - v[1171] * v[1540] - v[1172] * v[1541] + v[1920] - v[1922] + v[1085] * v[1930]
		+ dA[3] * v[2911] + 2e0*dA[5] * v[2914] + v[183] * v[3680];
	v[6095] = -(v[1170] * v[1543]) - v[1171] * v[1544] - v[1172] * v[1545] + v[1707];
	v[6096] = -(v[1170] * v[1547]) - v[1171] * v[1548] - v[1172] * v[1549] + v[1719];
	v[6097] = -(v[1170] * v[1551]) - v[1171] * v[1552] - v[1172] * v[1553] + v[1731];
	v[6098] = -(v[1170] * v[1555]) - v[1171] * v[1556] - v[1172] * v[1557] + v[1902] - v[1904] + v[1079] * v[1928]
		+ 2e0*dA[9] * v[2915] + dA[11] * v[2917] + v[202] * v[3685];
	v[6099] = -(v[1170] * v[1559]) - v[1171] * v[1560] - v[1172] * v[1561] - v[1903] + v[1907] + (dA[11] * v[1927]) / 2e0 +
		(dA[9] * v[1928]) / 2e0 + 2e0*dA[10] * v[2918] + v[202] * v[3684];
	v[6100] = -(v[1170] * v[1563]) - v[1171] * v[1564] - v[1172] * v[1565] + v[1906] - v[1908] + v[1079] * v[1927]
		+ dA[9] * v[2917] + 2e0*dA[11] * v[2920] + v[202] * v[3683];
	v[6101] = -(v[1170] * v[1567]) - v[1171] * v[1568] - v[1172] * v[1569] + v[1706];
	v[6102] = -(v[1170] * v[1571]) - v[1171] * v[1572] - v[1172] * v[1573] + v[1718];
	v[6103] = -(v[1170] * v[1575]) - v[1171] * v[1576] - v[1172] * v[1577] + v[1730];
	v[6104] = -(v[1170] * v[1579]) - v[1171] * v[1580] - v[1172] * v[1581] + v[1705];
	v[6105] = -(v[1170] * v[1583]) - v[1171] * v[1584] - v[1172] * v[1585] + v[1717];
	v[6106] = -(v[1170] * v[1587]) - v[1171] * v[1588] - v[1172] * v[1589] + v[1729];
	v[6107] = -(v[1170] * v[1591]) - v[1171] * v[1592] - v[1172] * v[1593] + v[1704];
	v[6108] = -(v[1170] * v[1595]) - v[1171] * v[1596] - v[1172] * v[1597] + v[1716];
	v[6109] = -(v[1170] * v[1599]) - v[1171] * v[1600] - v[1172] * v[1601] + v[1728];
	v[6110] = -(v[1170] * v[1603]) - v[1171] * v[1604] - v[1172] * v[1605] + v[1703];
	v[6111] = -(v[1170] * v[1607]) - v[1171] * v[1608] - v[1172] * v[1609] + v[1715];
	v[6112] = -(v[1170] * v[1611]) - v[1171] * v[1612] - v[1172] * v[1613] + v[1727];
	v[6113] = -(v[1170] * v[1615]) - v[1171] * v[1616] - v[1172] * v[1617] + v[1702];
	v[6114] = -(v[1170] * v[1619]) - v[1171] * v[1620] - v[1172] * v[1621] + v[1714];
	v[6115] = -(v[1170] * v[1623]) - v[1171] * v[1624] - v[1172] * v[1625] + v[1726];
	v[6116] = -(v[1170] * v[1627]) - v[1171] * v[1628] - v[1172] * v[1629] + v[1701];
	v[6117] = -(v[1170] * v[1631]) - v[1171] * v[1632] - v[1172] * v[1633] + v[1713];
	v[6118] = -(v[1170] * v[1635]) - v[1171] * v[1636] - v[1172] * v[1637] + v[1725];
	v[2910] = v[1931] / 2e0;
	for (i1640 = 1; i1640 <= 30; i1640++) {
		i3564 = (i1640 == 19 ? 1 : 0);
		i3563 = (i1640 == 16 ? 1 : 0);
		i3562 = (i1640 == 20 ? 1 : 0);
		i3561 = (i1640 == 17 ? 1 : 0);
		i3560 = (i1640 == 21 ? 1 : 0);
		i3559 = (i1640 == 18 ? 1 : 0);
		i3550 = (i1640 == 30 ? 1 : 0);
		i3549 = (i1640 == 24 ? 1 : 0);
		i3548 = (i1640 == 15 ? 1 : 0);
		i3547 = (i1640 == 27 ? 1 : 0);
		i3546 = (i1640 == 29 ? 1 : 0);
		i3545 = (i1640 == 23 ? 1 : 0);
		i3544 = (i1640 == 14 ? 1 : 0);
		i3543 = (i1640 == 26 ? 1 : 0);
		i3542 = (i1640 == 28 ? 1 : 0);
		i3541 = (i1640 == 22 ? 1 : 0);
		i3540 = (i1640 == 13 ? 1 : 0);
		i3539 = (i1640 == 25 ? 1 : 0);
		i3538 = (i1640 == 1 ? 1 : 0);
		i3537 = (i1640 == 7 ? 1 : 0);
		i3536 = (i1640 == 2 ? 1 : 0);
		i3535 = (i1640 == 8 ? 1 : 0);
		i3534 = (i1640 == 3 ? 1 : 0);
		i3533 = (i1640 == 9 ? 1 : 0);
		i3528 = (i1640 == 11 ? 1 : 0);
		v[3605] = (*a4)*i3528;
		i3527 = (i1640 == 10 ? 1 : 0);
		v[3606] = (*a4)*i3527;
		i3526 = (i1640 == 12 ? 1 : 0);
		v[3607] = (*a4)*i3526;
		i3525 = (i1640 == 5 ? 1 : 0);
		v[3613] = (*a4)*i3525;
		i3524 = (i1640 == 4 ? 1 : 0);
		v[3614] = (*a4)*i3524;
		i3523 = (i1640 == 6 ? 1 : 0);
		v[3615] = (*a4)*i3523;
		v[1948] = v[6152 + i1640];
		v[1949] = v[6182 + i1640];
		v[1950] = v[6212 + i1640];
		v[1951] = v[6242 + i1640];
		v[1952] = v[6272 + i1640];
		v[1953] = v[6302 + i1640];
		v[1954] = v[6332 + i1640];
		v[2011] = 2e0*v[1290] * v[1954];
		v[2027] = -4e0*v[183] * v[2011];
		v[3551] = v[2027] * v[350];
		v[1956] = v[5004 + i1640];
		v[1958] = v[5124 + i1640];
		v[1960] = v[5244 + i1640];
		v[1961] = v[6452 + i1640];
		v[2034] = 2e0*v[1301] * v[1961];
		v[2050] = -4e0*v[202] * v[2034];
		v[3552] = v[2050] * v[376];
		v[1963] = v[5274 + i1640];
		v[1965] = v[5394 + i1640];
		v[1967] = v[5514 + i1640];
		v[1998] = -i3523 + v[1948];
		v[1999] = i3523 + v[1948];
		v[2000] = -i3524 + v[1949];
		v[2001] = i3524 + v[1949];
		v[2002] = i3525 + v[1950];
		v[2003] = -i3525 + v[1950];
		v[2004] = -i3526 + v[1951];
		v[2005] = i3526 + v[1951];
		v[2006] = -i3527 + v[1952];
		v[2007] = i3527 + v[1952];
		v[2008] = i3528 + v[1953];
		v[2009] = -i3528 + v[1953];
		v[2010] = -(i3523*v[183]) / 2e0 + dA[5] * v[2011];
		v[2012] = (i3525*v[183]) / 2e0 - dA[4] * v[2011];
		v[2013] = -(i3524*v[183]) / 2e0 + dA[3] * v[2011];
		v[2014] = (v[183] * v[1956]) / 2e0 - v[2011] * v[675];
		v[2058] = v[2014] * v[353];
		v[2015] = v[183] * v[1998] - 2e0*v[2011] * v[670];
		v[2016] = v[183] * v[2002] - 2e0*v[2011] * v[665];
		v[2059] = v[2016] * v[361];
		v[2017] = v[183] * v[1999] - 2e0*v[2011] * v[664];
		v[2018] = (v[183] * v[1958]) / 2e0 - v[2011] * v[662];
		v[2063] = v[2018] * v[359];
		v[2019] = v[183] * v[2000] - 2e0*v[2011] * v[657];
		v[2064] = v[2019] * v[361];
		v[2020] = v[183] * v[2003] - 2e0*v[2011] * v[656];
		v[2069] = v[2020] * v[353];
		v[2021] = v[183] * v[2001] - 2e0*v[2011] * v[655];
		v[2022] = (v[183] * v[1960]) / 2e0 - v[2011] * v[652];
		v[2067] = v[2022] * v[361];
		v[2023] = -(v[183] * v[2010]) + v[2011] * v[3529];
		v[2024] = v[2027] + v[2010] * v[3529];
		v[2025] = -(v[183] * v[2012]) + v[2011] * v[3530];
		v[2026] = -(v[200] * v[2010]) - v[199] * v[2012];
		v[2028] = v[2027] + v[2012] * v[3530];
		v[2161] = v[1667] * v[2028];
		v[2029] = v[201] * v[2010] + v[199] * v[2013];
		v[2030] = -(v[201] * v[2012]) - v[200] * v[2013];
		v[2031] = 2e0*v[201] * v[2013] + v[2027];
		v[2157] = v[1668] * v[2031];
		v[2032] = 2e0*v[201] * v[2011] - v[183] * v[2013];
		v[2033] = -(i3526*v[202]) / 2e0 + dA[11] * v[2034];
		v[2035] = (i3528*v[202]) / 2e0 - dA[10] * v[2034];
		v[2036] = -(i3527*v[202]) / 2e0 + dA[9] * v[2034];
		v[2037] = (v[1963] * v[202]) / 2e0 - v[2034] * v[644];
		v[2073] = v[2037] * v[379];
		v[2038] = v[2004] * v[202] - 2e0*v[2034] * v[639];
		v[2039] = v[2008] * v[202] - 2e0*v[2034] * v[634];
		v[2074] = v[2039] * v[387];
		v[2040] = v[2005] * v[202] - 2e0*v[2034] * v[633];
		v[2041] = (v[1965] * v[202]) / 2e0 - v[2034] * v[631];
		v[2078] = v[2041] * v[385];
		v[2042] = v[2006] * v[202] - 2e0*v[2034] * v[626];
		v[2079] = v[2042] * v[387];
		v[2043] = v[2009] * v[202] - 2e0*v[2034] * v[625];
		v[2084] = v[2043] * v[379];
		v[2044] = v[2007] * v[202] - 2e0*v[2034] * v[624];
		v[2045] = (v[1967] * v[202]) / 2e0 - v[2034] * v[621];
		v[2082] = v[2045] * v[387];
		v[2046] = -(v[202] * v[2033]) + v[2034] * v[3531];
		v[2047] = v[2050] + v[2033] * v[3531];
		v[2048] = -(v[202] * v[2035]) + v[2034] * v[3532];
		v[2049] = -(v[2035] * v[218]) - v[2033] * v[219];
		v[2051] = v[2050] + v[2035] * v[3532];
		v[2189] = v[1664] * v[2051];
		v[2052] = v[2036] * v[218] + v[2033] * v[220];
		v[2053] = -(v[2036] * v[219]) - v[2035] * v[220];
		v[2054] = v[2050] + 2e0*v[2036] * v[220];
		v[2185] = v[1665] * v[2054];
		v[2055] = -(v[202] * v[2036]) + 2e0*v[2034] * v[220];
		v[2056] = v[2058] + v[2015] * v[359];
		v[2057] = v[2056] + v[2059] + v[3614];
		v[2060] = v[2058] + v[2059];
		v[2061] = v[2063] + v[2017] * v[353];
		v[2062] = v[2061] + v[2064] + v[3613];
		v[2065] = v[2063] + v[2064];
		v[2066] = v[2067] + v[2069];
		v[2068] = v[2067] + v[2021] * v[359];
		v[2070] = v[2068] + v[2069] + v[3615];
		v[2071] = v[2073] + v[2038] * v[385];
		v[2072] = v[2071] + v[2074] + v[3606];
		v[2075] = v[2073] + v[2074];
		v[2076] = v[2078] + v[2040] * v[379];
		v[2077] = v[2076] + v[2079] + v[3605];
		v[2080] = v[2078] + v[2079];
		v[2081] = v[2082] + v[2084];
		v[2083] = v[2082] + v[2044] * v[385];
		v[2085] = v[2083] + v[2084] + v[3607];
		v[2086] = QAAi[0][0] * v[2014] + QAAi[1][0] * v[2015] + QAAi[2][0] * v[2016];
		v[2087] = QAAi[0][1] * v[2014] + QAAi[1][1] * v[2015] + QAAi[2][1] * v[2016];
		v[3628] = v[1672] * v[2087];
		v[2088] = QBAi[0][0] * v[2037] + QBAi[1][0] * v[2038] + QBAi[2][0] * v[2039];
		v[2089] = QBAi[0][1] * v[2037] + QBAi[1][1] * v[2038] + QBAi[2][1] * v[2039];
		v[3627] = v[1672] * v[2089];
		v[2090] = QAAi[0][0] * v[2017] + QAAi[1][0] * v[2018] + QAAi[2][0] * v[2019];
		v[2091] = QAAi[0][1] * v[2017] + QAAi[1][1] * v[2018] + QAAi[2][1] * v[2019];
		v[3630] = v[1662] * v[2091];
		v[2092] = QBAi[0][0] * v[2040] + QBAi[1][0] * v[2041] + QBAi[2][0] * v[2042];
		v[2093] = QBAi[0][1] * v[2040] + QBAi[1][1] * v[2041] + QBAi[2][1] * v[2042];
		v[3629] = v[1662] * v[2093];
		v[2094] = QAAi[0][0] * v[2020] + QAAi[1][0] * v[2021] + QAAi[2][0] * v[2022];
		v[2095] = QAAi[0][1] * v[2020] + QAAi[1][1] * v[2021] + QAAi[2][1] * v[2022];
		v[3632] = v[1654] * v[2095];
		v[2096] = QBAi[0][0] * v[2043] + QBAi[1][0] * v[2044] + QBAi[2][0] * v[2045];
		v[2097] = QBAi[0][1] * v[2043] + QBAi[1][1] * v[2044] + QBAi[2][1] * v[2045];
		v[3631] = v[1654] * v[2097];
		v[2098] = i3533 + v[2096] * v[258] + v[2097] * v[260];
		v[2099] = i3533;
		v[2100] = i3534 + v[2094] * v[258] + v[2095] * v[260];
		v[2101] = i3534;
		v[2102] = i3535 + v[2092] * v[258] + v[2093] * v[260];
		v[2103] = i3535;
		v[2104] = i3536 + v[2090] * v[258] + v[2091] * v[260];
		v[2105] = i3536;
		v[2106] = i3537 + v[2088] * v[258] + v[2089] * v[260];
		v[2107] = i3537;
		v[2108] = i3538 + v[2086] * v[258] + v[2087] * v[260];
		v[2109] = i3538;
		v[2341] = i3540 * v[455];
		v[2342] = i3544 * v[455];
		v[2343] = i3548 * v[455];
		v[2115] = i3539 - i3541;
		v[2117] = -i3539 + i3542;
		v[2119] = v[2108] * v[247] + v[2106] * v[248] - i3540 * v[301] - i3541 * v[310] - i3539 * v[311] - i3542 * v[313]
			- i3563 * v[3351] - i3564 * v[3352];
		v[2123] = i3543 - i3545;
		v[2125] = -i3543 + i3546;
		v[2127] = v[2104] * v[247] + v[2102] * v[248] - i3544 * v[301] - i3545 * v[310] - i3543 * v[311] - i3546 * v[313]
			- i3561 * v[3351] - i3562 * v[3352];
		v[2131] = i3547 - i3549;
		v[2133] = -i3547 + i3550;
		v[2135] = v[2100] * v[247] + v[2098] * v[248] - i3548 * v[301] - i3549 * v[310] - i3547 * v[311] - i3550 * v[313]
			- i3559 * v[3351] - i3560 * v[3352];
		v[3602] = v[2119] * v[399] + v[2127] * v[400] + v[2135] * v[401];
		v[2137] = v[2025] + v[2029];
		v[2155] = v[1668] * v[2137];
		v[2138] = -v[2025] + v[2029];
		v[2140] = (v[197] * v[2137] + v[2021] * v[348] + v[2139] * v[3551]) / v[350];
		v[2141] = v[2023] + v[2030];
		v[2163] = v[1668] * v[2141];
		v[2142] = -v[2023] + v[2030];
		v[2159] = v[1667] * v[2142];
		v[2144] = (v[193] * v[2141] + v[2019] * v[349] + v[2143] * v[3551]) / v[350];
		v[2146] = (v[188] * v[2142] + v[2016] * v[3353] + v[2145] * v[3551]) / v[350];
		v[2147] = v[2157] + v[2159];
		v[3706] = v[2147] / v[350];
		v[2148] = v[2026] + v[2032];
		v[2153] = v[1667] * v[2148];
		v[2149] = v[2026] - v[2032];
		v[2150] = v[2161] + v[2163];
		v[3702] = v[2150] / v[350];
		v[2151] = v[1666] * v[2024] + v[2153] + v[2155];
		v[3710] = v[2151] / v[350];
		v[2154] = v[2151] - v[2155];
		v[2156] = v[2151] - v[2153];
		v[3703] = v[2156] / v[350];
		v[2158] = v[1666] * v[2138] + v[2157];
		v[2160] = v[2158] + v[2159];
		v[3704] = v[2160] / v[350];
		v[2162] = v[1666] * v[2149] + v[2161];
		v[2164] = v[2162] + v[2163];
		v[3707] = v[2164] / v[350];
		v[2165] = v[2048] + v[2052];
		v[2183] = v[1665] * v[2165];
		v[2166] = -v[2048] + v[2052];
		v[2168] = (v[216] * v[2165] + v[2167] * v[3552] + v[2044] * v[374]) / v[376];
		v[2169] = v[2046] + v[2053];
		v[2191] = v[1665] * v[2169];
		v[2170] = -v[2046] + v[2053];
		v[2187] = v[1664] * v[2170];
		v[2172] = (v[212] * v[2169] + v[2171] * v[3552] + v[2042] * v[375]) / v[376];
		v[2174] = (v[207] * v[2170] + v[2039] * v[3358] + v[2173] * v[3552]) / v[376];
		v[2175] = v[2185] + v[2187];
		v[3718] = v[2175] / v[376];
		v[2176] = v[2049] + v[2055];
		v[2181] = v[1664] * v[2176];
		v[2177] = v[2049] - v[2055];
		v[2178] = v[2189] + v[2191];
		v[3714] = v[2178] / v[376];
		v[2179] = v[1663] * v[2047] + v[2181] + v[2183];
		v[3722] = v[2179] / v[376];
		v[2182] = v[2179] - v[2183];
		v[2184] = v[2179] - v[2181];
		v[3715] = v[2184] / v[376];
		v[2186] = v[1663] * v[2166] + v[2185];
		v[2188] = v[2186] + v[2187];
		v[3716] = v[2188] / v[376];
		v[2190] = v[1663] * v[2177] + v[2189];
		v[2192] = v[2190] + v[2191];
		v[3719] = v[2192] / v[376];
		v[2193] = v[3602] / v[1773];
		v[3553] = v[2193] * v[412];
		v[2203] = v[3553] * v[401] + v[2135] * v[413];
		v[2199] = v[3553] * v[400] + v[2127] * v[413];
		v[2195] = v[3553] * v[399] + v[2119] * v[413];
		v[2196] = 2e0*v[1698] * v[2195];
		v[2197] = v[2195];
		v[2200] = 2e0*v[1690] * v[2199];
		v[2201] = v[2199];
		v[2204] = 2e0*v[1689] * v[2203];
		v[2205] = v[2203];
		v[2206] = 0e0;
		v[2207] = 0e0;
		v[2208] = 0e0;
		v[2209] = 0e0;
		v[2210] = 0e0;
		v[2211] = 0e0;
		v[2212] = 0e0;
		v[2213] = 0e0;
		v[2214] = 0e0;
		v[2215] = 0e0;
		v[2216] = 0e0;
		v[2217] = 0e0;
		v[2218] = 0e0;
		v[2219] = 0e0;
		v[2220] = 0e0;
		v[2221] = 0e0;
		v[2222] = 0e0;
		v[2223] = 0e0;
		v[2224] = 0e0;
		v[2225] = 0e0;
		v[2226] = 0e0;
		v[2227] = 0e0;
		v[2228] = 0e0;
		v[2229] = 0e0;
		v[2230] = 0e0;
		v[2231] = 0e0;
		v[2232] = 0e0;
		v[2233] = 0e0;
		v[2234] = 0e0;
		v[2235] = 0e0;
		v[2236] = 0e0;
		v[2237] = 0e0;
		b2238 = b1016;
		if (b2238) {
			v[2241] = v[2205];
			v[2239] = v[2201];
			v[2240] = v[2205] * v[424] - v[2239] * v[425];
			v[2242] = -(v[2241] * v[423]) + v[2197] * v[425];
			v[2243] = v[2239] * v[423] - v[2197] * v[424];
			v[3557] = v[1764] * v[2240] + v[1759] * v[2242] + v[1754] * v[2243];
			v[3555] = v[1018] * v[2240] + v[1019] * v[2242] + v[1020] * v[2243];
			v[2244] = v[3555] / v[1021];
			v[3556] = v[2244] * v[3842];
			v[2254] = v[2244] * v[3554];
			v[2209] = -(v[1767] * v[2245] * v[3555]);
			v[2246] = v[2240] * v[3395] + v[1018] * v[3556];
			v[2265] = 2e0*v[1030] * v[2246];
			v[2248] = v[2242] * v[3395] + v[1019] * v[3556];
			v[2262] = 2e0*v[1031] * v[2248];
			v[2249] = v[2243] * v[3395] + v[1020] * v[3556];
			v[2263] = 2e0*v[1032] * v[2249];
			v[2212] = v[2254] * v[3482] + v[1023] * v[3557];
			v[2211] = v[1027] * v[2244] * v[2252];
			v[2210] = v[1028] * v[2244] * v[3482] + v[1029] * v[3557];
			v[2236] = 2e0*v[2254] * v[2255] * v[3843];
			v[2237] = v[1766] * v[2244] * v[2250] * v[2255] * v[3844];
			v[2208] = v[1754] * v[3556] + v[2243] * v[3558];
			v[2207] = v[1759] * v[3556] + v[2242] * v[3558];
			v[2206] = v[1764] * v[3556] + v[2240] * v[3558];
			v[2257] = (v[1031] * v[2246] + v[1030] * v[2248]) / 2e0;
			v[2258] = v[2262] + v[2265];
			v[2259] = v[2258] + v[2263];
			v[2260] = (v[1032] * v[2246] + v[1030] * v[2249]) / 2e0;
			v[2261] = (v[1032] * v[2248] + v[1031] * v[2249]) / 2e0;
			v[2264] = v[2262] + v[2263];
			v[2266] = v[2263] + v[2265];
			v[2215] = (v[1739] * v[2246] + v[1738] * v[2248] + 4e0*v[2249] * v[2267]) / 2e0;
			v[2214] = (v[1740] * v[2246] + v[1738] * v[2249] + 4e0*v[2248] * v[2268]) / 2e0;
			v[2213] = (v[1740] * v[2248] + v[1739] * v[2249] + 4e0*v[2246] * v[2269]) / 2e0;
			v[2270] = -4e0*v[2259] * v[2631];
			v[2235] = 8e0*v[1750] * v[2259] * v[3845];
			v[2226] = (v[1679] * v[2270]) / 2e0;
			v[2230] = (v[1683] * v[2270]) / 2e0;
			v[2228] = v[1681] * v[2270];
			v[2232] = v[1685] * v[2270];
			v[2231] = v[1684] * v[2270];
			v[2233] = v[1686] * v[2270];
			v[2227] = v[1680] * v[2270];
			v[2229] = v[1682] * v[2270];
			v[2234] = (v[1687] * v[2270]) / 2e0;
			v[2271] = -v[2249] + v[2257];
			v[2272] = v[2249] + v[2257];
			v[2273] = v[2248] + v[2260];
			v[2274] = -v[2248] + v[2260];
			v[2275] = -v[2246] + v[2261];
			v[2276] = v[2246] + v[2261];
			v[2218] = v[1742] * v[2270] + v[1033] * v[2271];
			v[2220] = v[1744] * v[2270] + v[1033] * v[2272];
			v[2219] = v[1743] * v[2270] + v[1033] * v[2273];
			v[2223] = v[1747] * v[2270] + v[1033] * v[2274];
			v[2217] = (-(v[1033] * v[2264]) + v[1741] * v[2270]) / 2e0;
			v[2222] = v[1746] * v[2270] + v[1033] * v[2275];
			v[2224] = v[1748] * v[2270] + v[1033] * v[2276];
			v[2221] = (-(v[1033] * v[2266]) + v[1745] * v[2270]) / 2e0;
			v[2225] = (-(v[1033] * v[2258]) + v[1749] * v[2270]) / 2e0;
			v[2216] = -(v[1687] * v[2258]) / 2e0 - (v[1679] * v[2264]) / 2e0 - (v[1683] * v[2266]) / 2e0 + v[1680] * v[2271]
				+ v[1682] * v[2272] + v[1681] * v[2273] + v[1685] * v[2274] + v[1684] * v[2275] + v[1686] * v[2276];
		}
		else {
		};
		v[2277] = 0e0;
		v[2278] = 0e0;
		v[2279] = 0e0;
		v[2280] = 0e0;
		v[2281] = 0e0;
		v[2282] = 0e0;
		b2283 = (*previouscontact);
		if (b2283) {
			v[2301] = v[2205];
			v[2295] = v[2201];
			v[2293] = v[2197];
			v[2291] = v[2218];
			v[2290] = v[2219];
			v[2288] = v[2221];
			v[2287] = v[2222];
			v[2285] = v[2224];
			v[2284] = v[2225];
			v[2299] = v[1675] * v[2293];
			v[2298] = v[1673] * v[2205];
			v[2296] = v[1674] * v[2201];
			v[2101] = v[2101] + v[2094] * v[252] + v[2095] * v[254];
			v[2099] = v[2099] + v[2096] * v[252] + v[2097] * v[254];
			v[2225] = 0e0;
			v[2224] = 0e0;
			v[2286] = gti[0] * v[2223] + gti[2] * v[2284] + gti[1] * v[2285] + v[2101] * v[245] + v[2099] * v[246] - i3548 * v[288]
				- i3549 * v[297] - i3547 * v[298] - i3550 * v[300] - i3559 * v[3349] - i3560 * v[3350];
			v[3565] = -(v[1053] * v[2301]) - v[2286] * v[416];
			v[2223] = 0e0;
			v[2105] = v[2105] + v[2090] * v[252] + v[2091] * v[254];
			v[2103] = v[2103] + v[2092] * v[252] + v[2093] * v[254];
			v[2222] = 0e0;
			v[2221] = 0e0;
			v[2289] = gti[0] * v[2220] + gti[2] * v[2287] + gti[1] * v[2288] + v[2105] * v[245] + v[2103] * v[246] - i3544 * v[288]
				- i3545 * v[297] - i3543 * v[298] - i3546 * v[300] - i3561 * v[3349] - i3562 * v[3350];
			v[3567] = -(v[1052] * v[2295]) - v[2289] * v[415];
			v[2220] = 0e0;
			v[2109] = v[2109] + v[2086] * v[252] + v[2087] * v[254];
			v[2107] = v[2107] + v[2088] * v[252] + v[2089] * v[254];
			v[2219] = 0e0;
			v[2218] = 0e0;
			v[2292] = gti[0] * v[2217] + gti[2] * v[2290] + gti[1] * v[2291] + v[2109] * v[245] + v[2107] * v[246] - i3540 * v[288]
				- i3541 * v[297] - i3539 * v[298] - i3542 * v[300] - i3563 * v[3349] - i3564 * v[3350];
			v[3566] = -(v[1051] * v[2293]) - v[2292] * v[414];
			v[2217] = 0e0;
			v[2197] = 0e0;
			v[2294] = v[2296] + v[2299];
			v[2201] = 0e0;
			v[2297] = v[2296] + v[2298];
			v[2300] = v[2298] + v[2299];
			v[2205] = 0e0;
			v[2282] = v[1673] * v[2286];
			v[2281] = v[1674] * v[2289];
			v[2280] = v[1675] * v[2292];
			v[2277] = v[2293] * v[2302] - (2e0*v[1675] * v[2195] + v[2297])*v[414];
			v[2196] = v[2196] - v[1051] * v[2297] + v[2292] * v[2302] + v[1675] * (v[3565] + v[3567]);
			v[2278] = v[2295] * v[2304] - (2e0*v[1674] * v[2199] + v[2300])*v[415];
			v[2200] = v[2200] - v[1052] * v[2300] + v[2289] * v[2304] + v[1674] * (v[3565] + v[3566]);
			v[2279] = v[2301] * v[2307] - (2e0*v[1673] * v[2203] + v[2294])*v[416];
			v[2204] = v[2204] - v[1053] * v[2294] + v[2286] * v[2307] + v[1673] * (v[3566] + v[3567]);
		}
		else {
		};
		v[2312] = v[2027] * v[2308] + v[2031] * v[2309] + v[2137] * v[2310] + v[2141] * v[2311] + v[2057] * v[2922]
			+ v[2061] * v[3354] + v[2066] * v[3356] + v[2140] * v[359] + v[2144] * v[361] + (*a4)*v[7292 + i1640];
		v[2317] = v[1935] * v[2056] + v[1934] * v[2068] + v[2027] * v[2313] + v[2028] * v[2314] + v[2142] * v[2315]
			+ v[2148] * v[2316] + v[2062] * v[2923] + v[2140] * v[353] + v[2146] * v[361] + (*a4)*v[7322 + i1640];
		v[2322] = v[1937] * v[2060] + v[1936] * v[2065] + v[2027] * v[2318] + v[2024] * v[2319] + v[2138] * v[2320]
			+ v[2149] * v[2321] + v[2070] * v[2924] + v[2144] * v[353] + v[2146] * v[359] + (*a4)*v[7352 + i1640];
		v[2327] = v[2050] * v[2323] + v[2054] * v[2324] + v[2165] * v[2325] + v[2169] * v[2326] + v[2072] * v[2925]
			+ v[2076] * v[3359] + v[2081] * v[3361] + v[2168] * v[385] + v[2172] * v[387] + (*a4)*v[7382 + i1640];
		v[2332] = v[1941] * v[2071] + v[1940] * v[2083] + v[2050] * v[2328] + v[2051] * v[2329] + v[2170] * v[2330]
			+ v[2176] * v[2331] + v[2077] * v[2926] + v[2168] * v[379] + v[2174] * v[387] + (*a4)*v[7412 + i1640];
		v[2337] = v[1943] * v[2075] + v[1942] * v[2080] + v[2050] * v[2333] + v[2047] * v[2334] + v[2166] * v[2335]
			+ v[2177] * v[2336] + v[2085] * v[2927] + v[2172] * v[379] + v[2174] * v[385] + (*a4)*v[7442 + i1640];
		v[2338] = (*ct)*(v[247] * ((v[1642] * v[2086] + v[1643] * v[2090] + v[1644] * v[2094])*v[442] + (v[1642] * v[2087]
			+ v[1643] * v[2091] + v[1644] * v[2095])*v[443]) + v[248] * ((v[1642] * v[2088] + v[1643] * v[2092] + v[1644] * v[2096]
				)*v[442] + (v[1642] * v[2089] + v[1643] * v[2093] + v[1644] * v[2097])*v[443]));
		v[2339] = ((*ct)*(v[1644] * (v[2098] - v[2100]) + v[1643] * (v[2102] - v[2104]) + v[1642] * (v[2106] - v[2108])))
			/ 2e0;
		v[2340] = (*ct)*(v[1642] * (v[2341] + i3564 * v[464] - v[2115] * v[465] + i3542 * v[466]) + v[1643] * (v[2342]
			+ i3562 * v[464] - v[2123] * v[465] + i3546 * v[466]) + v[1644] * (v[2343] + i3560 * v[464] - v[2131] * v[465]
				+ i3550 * v[466]));
		v[2344] = (*ct)*(v[1642] * (v[2341] + i3563 * v[456] + i3541 * v[457] - v[2117] * v[458]) + v[1643] * (v[2342]
			+ i3561 * v[456] + i3545 * v[457] - v[2125] * v[458]) + v[1644] * (v[2343] + i3559 * v[456] + i3549 * v[457]
				- v[2133] * v[458]));
		v[2345] = -(i3538*v[1519]) - i3536 * v[1523] - i3534 * v[1527] - i3524 * v[1531] - i3525 * v[1535] - i3523 * v[1539]
			- i3537 * v[1543] - i3535 * v[1547] - i3533 * v[1551] - i3527 * v[1555] - i3528 * v[1559] - i3526 * v[1563] - i3540 * v[1567]
			- i3544 * v[1571] - i3548 * v[1575] - i3563 * v[1579] - i3561 * v[1583] - i3559 * v[1587] - i3564 * v[1591] - i3562 * v[1595]
			- i3560 * v[1599] - i3541 * v[1603] - i3545 * v[1607] - i3549 * v[1611] - i3539 * v[1615] - i3543 * v[1619] - i3547 * v[1623]
			- i3542 * v[1627] - i3546 * v[1631] - i3550 * v[1635];
		v[2360] = v[2345];
		v[2346] = -(i3538*v[1520]) - i3536 * v[1524] - i3534 * v[1528] - i3524 * v[1532] - i3525 * v[1536] - i3523 * v[1540]
			- i3537 * v[1544] - i3535 * v[1548] - i3533 * v[1552] - i3527 * v[1556] - i3528 * v[1560] - i3526 * v[1564] - i3540 * v[1568]
			- i3544 * v[1572] - i3548 * v[1576] - i3563 * v[1580] - i3561 * v[1584] - i3559 * v[1588] - i3564 * v[1592] - i3562 * v[1596]
			- i3560 * v[1600] - i3541 * v[1604] - i3545 * v[1608] - i3549 * v[1612] - i3539 * v[1616] - i3543 * v[1620] - i3547 * v[1624]
			- i3542 * v[1628] - i3546 * v[1632] - i3550 * v[1636];
		v[2358] = v[2346];
		v[2347] = -(i3538*v[1521]) - i3536 * v[1525] - i3534 * v[1529] - i3524 * v[1533] - i3525 * v[1537] - i3523 * v[1541]
			- i3537 * v[1545] - i3535 * v[1549] - i3533 * v[1553] - i3527 * v[1557] - i3528 * v[1561] - i3526 * v[1565] - i3540 * v[1569]
			- i3544 * v[1573] - i3548 * v[1577] - i3563 * v[1581] - i3561 * v[1585] - i3559 * v[1589] - i3564 * v[1593] - i3562 * v[1597]
			- i3560 * v[1601] - i3541 * v[1605] - i3545 * v[1609] - i3549 * v[1613] - i3539 * v[1617] - i3543 * v[1621] - i3547 * v[1625]
			- i3542 * v[1629] - i3546 * v[1633] - i3550 * v[1637];
		v[2356] = v[2347];
		v[2348] = 0e0;
		v[2349] = 0e0;
		v[2350] = 0e0;
		v[2351] = 0e0;
		v[2352] = 0e0;
		v[2353] = 0e0;
		b2354 = (*stick);
		if (b2354) {
			b2355 = b1168;
			if (b2355) {
				v[2353] = v[2347];
				v[2347] = 0e0;
				v[2352] = v[2346];
				v[2346] = 0e0;
				v[2351] = v[2345];
				v[2345] = 0e0;
			}
			else {
				v[3568] = (*mud)*(v[1166] * v[2356] + v[1165] * v[2358] + v[1164] * v[2360]);
				v[2347] = 0e0;
				v[2346] = 0e0;
				v[3570] = v[1179] * v[2371] * v[3568];
				v[2345] = 0e0;
				v[3569] = v[1178] * v[1183] * v[2369] * v[3568];
				v[2353] = v[2356] * v[2368] + v[1166] * v[3569];
				v[2352] = v[2358] * v[2368] + v[1165] * v[3569];
				v[2351] = v[2360] * v[2368] + v[1164] * v[3569];
				v[2350] = v[1157] * v[3570];
				v[2349] = v[1156] * v[3570];
				v[2348] = v[1155] * v[3570];
			};
		}
		else {
			b2372 = b1202;
			if (b2372) {
				v[2353] = v[2356];
				v[2347] = 0e0;
				v[2352] = v[2358];
				v[2346] = 0e0;
				v[2351] = v[2360];
				v[2345] = 0e0;
			}
			else {
				v[2378] = v[2360] * v[3571];
				v[2376] = v[2358] * v[3571];
				v[2375] = v[2356] * v[3571];
				v[3573] = (*mud)*v[1209] * (v[1166] * v[2356] + v[1165] * v[2358] + v[1164] * v[2360])*v[2381];
				v[3572] = v[1208] * v[2377] * (v[1166] * v[2375] + v[1165] * v[2376] + v[1164] * v[2378]);
				v[2353] = v[1209] * v[2375] + v[1166] * v[3572];
				v[2352] = v[1209] * v[2376] + v[1165] * v[3572];
				v[2351] = v[1209] * v[2378] + v[1164] * v[3572];
				v[2350] = v[1157] * v[3573];
				v[2349] = v[1156] * v[3573];
				v[2348] = v[1155] * v[3573];
			};
		};
		v[3587] = (*cn)*v[2348];
		v[2500] = v[1088] * v[3587];
		v[3586] = v[2349] * v[2493] + v[2500];
		v[3582] = v[2348] * v[414] + v[2349] * v[415];
		v[3581] = (*cn)*v[2349];
		v[2497] = v[1110] * v[3581];
		v[3584] = v[2348] * v[2493] + v[2497];
		v[3585] = v[2350] * v[414];
		v[3583] = v[2350] * v[415];
		v[3580] = (*cn)*v[2350];
		v[2921] = v[2350] * v[3364];
		v[3697] = v[2497] + v[2921] * v[415];
		v[3696] = v[2500] + v[2921] * v[414];
		v[2490] = v[1138] * v[3580];
		v[3578] = -((*ct)*v[2351]);
		v[3576] = -((*ct)*v[2352]);
		v[3574] = -((*ct)*v[2353]);
		v[2383] = v[346] * v[3574] + i3550 * v[3575];
		v[2385] = v[345] * v[3574] + i3546 * v[3575];
		v[2386] = v[344] * v[3574] + i3542 * v[3575];
		v[2387] = v[343] * v[3574] + i3547 * v[3575];
		v[2388] = v[342] * v[3574] + i3543 * v[3575];
		v[2389] = v[341] * v[3574] + i3539 * v[3575];
		v[2390] = v[340] * v[3574] + i3549 * v[3575];
		v[2391] = v[339] * v[3574] + i3545 * v[3575];
		v[2392] = v[338] * v[3574] + i3541 * v[3575];
		v[2393] = v[337] * v[3574] + i3560 * v[3575];
		v[2394] = v[336] * v[3574] + i3562 * v[3575];
		v[2395] = v[335] * v[3574] + i3564 * v[3575];
		v[2396] = v[334] * v[3574] + i3559 * v[3575];
		v[2397] = v[333] * v[3574] + i3561 * v[3575];
		v[2398] = v[332] * v[3574] + i3563 * v[3575];
		v[2399] = v[331] * v[3574] + i3548 * v[3575];
		v[2400] = v[330] * v[3574] + i3544 * v[3575];
		v[2401] = v[329] * v[3574] + i3540 * v[3575];
		v[2402] = -(i3526*v[1172]) - (*ct)*(v[1644] * v[2337] + v[2353] * v[398]);
		v[2403] = -(i3528*v[1172]) - (*ct)*(v[1644] * v[2332] + v[2353] * v[388]);
		v[2404] = -(i3527*v[1172]) - (*ct)*(v[1644] * v[2327] + v[2353] * v[378]);
		v[2406] = v[328] * v[3574] + i3533 * v[3575];
		v[2408] = v[327] * v[3574] + i3535 * v[3575];
		v[2410] = v[326] * v[3574] + i3537 * v[3575];
		v[2411] = -(i3523*v[1172]) - (*ct)*(v[1644] * v[2322] + v[2353] * v[372]);
		v[2412] = -(i3525*v[1172]) - (*ct)*(v[1644] * v[2317] + v[2353] * v[362]);
		v[2413] = -(i3524*v[1172]) - (*ct)*(v[1644] * v[2312] + v[2353] * v[352]);
		v[2415] = v[325] * v[3574] + i3534 * v[3575];
		v[2417] = v[324] * v[3574] + i3536 * v[3575];
		v[2419] = v[323] * v[3574] + i3538 * v[3575];
		v[2420] = v[346] * v[3576] + i3550 * v[3577];
		v[2422] = v[345] * v[3576] + i3546 * v[3577];
		v[2423] = v[344] * v[3576] + i3542 * v[3577];
		v[2424] = v[343] * v[3576] + i3547 * v[3577];
		v[2425] = v[342] * v[3576] + i3543 * v[3577];
		v[2426] = v[341] * v[3576] + i3539 * v[3577];
		v[2427] = v[340] * v[3576] + i3549 * v[3577];
		v[2428] = v[339] * v[3576] + i3545 * v[3577];
		v[2429] = v[338] * v[3576] + i3541 * v[3577];
		v[2430] = v[337] * v[3576] + i3560 * v[3577];
		v[2431] = v[336] * v[3576] + i3562 * v[3577];
		v[2432] = v[335] * v[3576] + i3564 * v[3577];
		v[2433] = v[334] * v[3576] + i3559 * v[3577];
		v[2434] = v[333] * v[3576] + i3561 * v[3577];
		v[2435] = v[332] * v[3576] + i3563 * v[3577];
		v[2436] = v[331] * v[3576] + i3548 * v[3577];
		v[2437] = v[330] * v[3576] + i3544 * v[3577];
		v[2438] = v[329] * v[3576] + i3540 * v[3577];
		v[2439] = -(i3526*v[1171]) - (*ct)*(v[1643] * v[2337] + v[2352] * v[398]);
		v[2440] = -(i3528*v[1171]) - (*ct)*(v[1643] * v[2332] + v[2352] * v[388]);
		v[2441] = -(i3527*v[1171]) - (*ct)*(v[1643] * v[2327] + v[2352] * v[378]);
		v[2442] = v[328] * v[3576] + i3533 * v[3577];
		v[2443] = v[327] * v[3576] + i3535 * v[3577];
		v[2444] = v[326] * v[3576] + i3537 * v[3577];
		v[2445] = -(i3523*v[1171]) - (*ct)*(v[1643] * v[2322] + v[2352] * v[372]);
		v[2446] = -(i3525*v[1171]) - (*ct)*(v[1643] * v[2317] + v[2352] * v[362]);
		v[2447] = -(i3524*v[1171]) - (*ct)*(v[1643] * v[2312] + v[2352] * v[352]);
		v[2448] = v[325] * v[3576] + i3534 * v[3577];
		v[2449] = v[324] * v[3576] + i3536 * v[3577];
		v[2450] = v[323] * v[3576] + i3538 * v[3577];
		v[2451] = v[346] * v[3578] + i3550 * v[3579];
		v[2453] = v[345] * v[3578] + i3546 * v[3579];
		v[2454] = v[344] * v[3578] + i3542 * v[3579];
		v[2455] = v[343] * v[3578] + i3547 * v[3579];
		v[2456] = v[342] * v[3578] + i3543 * v[3579];
		v[2457] = v[341] * v[3578] + i3539 * v[3579];
		v[2458] = v[340] * v[3578] + i3549 * v[3579];
		v[2459] = v[339] * v[3578] + i3545 * v[3579];
		v[2460] = v[338] * v[3578] + i3541 * v[3579];
		v[2461] = v[337] * v[3578] + i3560 * v[3579];
		v[2462] = v[336] * v[3578] + i3562 * v[3579];
		v[2463] = v[335] * v[3578] + i3564 * v[3579];
		v[2464] = v[334] * v[3578] + i3559 * v[3579];
		v[2465] = v[333] * v[3578] + i3561 * v[3579];
		v[2466] = v[332] * v[3578] + i3563 * v[3579];
		v[2467] = v[331] * v[3578] + i3548 * v[3579];
		v[2468] = v[330] * v[3578] + i3544 * v[3579];
		v[2469] = v[329] * v[3578] + i3540 * v[3579];
		v[2470] = -(i3526*v[1170]) - (*ct)*(v[1642] * v[2337] + v[2351] * v[398]);
		v[2471] = -(i3528*v[1170]) - (*ct)*(v[1642] * v[2332] + v[2351] * v[388]);
		v[2472] = -(i3527*v[1170]) - (*ct)*(v[1642] * v[2327] + v[2351] * v[378]);
		v[2473] = v[328] * v[3578] + i3533 * v[3579];
		v[2474] = v[327] * v[3578] + i3535 * v[3579];
		v[2475] = v[326] * v[3578] + i3537 * v[3579];
		v[2476] = -(i3523*v[1170]) - (*ct)*(v[1642] * v[2322] + v[2351] * v[372]);
		v[2477] = -(i3525*v[1170]) - (*ct)*(v[1642] * v[2317] + v[2351] * v[362]);
		v[2478] = -(i3524*v[1170]) - (*ct)*(v[1642] * v[2312] + v[2351] * v[352]);
		v[2479] = v[325] * v[3578] + i3534 * v[3579];
		v[2480] = v[324] * v[3578] + i3536 * v[3579];
		v[2481] = v[323] * v[3578] + i3538 * v[3579];
		v[2485] = v[3143] * v[3580];
		v[2486] = v[3410] * v[3581];
		v[2488] = v[2487] * v[3582] + v[2490] * v[362];
		v[2491] = v[2490] * v[352] + v[2489] * v[3582];
		v[2492] = v[2487] * v[3583] + v[3584] * v[362];
		v[2494] = v[2489] * v[3585] + v[352] * v[3586];
		v[2496] = v[2495] * v[3582] + v[2490] * v[372];
		v[2498] = v[2495] * v[3583] + v[3584] * v[372];
		v[2499] = v[2489] * v[3583] + v[352] * v[3584];
		v[2501] = v[2495] * v[3585] + v[3586] * v[372];
		v[2502] = v[2487] * v[3585] + v[3586] * v[362];
		v[2504] = v[2503] * v[3582] + v[2490] * v[388];
		v[2506] = v[2505] * v[3582] + v[2490] * v[378];
		v[2507] = v[2503] * v[3583] + v[3584] * v[388];
		v[2508] = v[2505] * v[3585] + v[3586] * v[378];
		v[2510] = v[2509] * v[3582] + v[2490] * v[398];
		v[2511] = v[2509] * v[3583] + v[3584] * v[398];
		v[2512] = v[2505] * v[3583] + v[3584] * v[378];
		v[2513] = v[2509] * v[3585] + v[3586] * v[398];
		v[2514] = v[2503] * v[3585] + v[3586] * v[388];
		v[2515] = (*cn)*v[3582];
		v[3604] = -(v[2515] * v[416]);
		v[3698] = v[2490] - v[3604];
		v[2204] = v[2204] + (*cn)*(v[2348] * v[3140] + v[2349] * v[3141] + v[2350] * v[3142]);
		v[2532] = (*cn)*(v[2349] * v[323] + v[2348] * v[324]);
		v[2533] = (*cn)*(v[2349] * v[326] + v[2348] * v[327]);
		v[2534] = (*cn)*(v[2349] * v[329] + v[2348] * v[330]);
		v[2535] = (*cn)*(v[2349] * v[332] + v[2348] * v[333]);
		v[2536] = (*cn)*(v[2349] * v[335] + v[2348] * v[336]);
		v[2537] = (*cn)*(v[2349] * v[338] + v[2348] * v[339]);
		v[2538] = (*cn)*(v[2349] * v[341] + v[2348] * v[342]);
		v[2539] = (*cn)*(v[2349] * v[344] + v[2348] * v[345]);
		v[3601] = v[247] * v[2532] + v[248] * v[2533] - v[2534] * v[301] - v[2537] * v[310] - v[2538] * v[311] - v[2539] * v[313]
			- v[2535] * v[3351] - v[2536] * v[3352];
		v[2200] = v[2200] + (*cn)*(v[2348] * v[3145] + v[2349] * v[3148] + v[2350] * v[3149]);
		v[2546] = v[3408] * v[3587];
		v[2196] = v[2196] + (*cn)*(v[2348] * v[3153] + v[2349] * v[3154] + v[2350] * v[3155]);
		v[2560] = v[1086] * v[2488] + v[1087] * v[2491];
		v[3662] = v[1082] * v[2496] + v[2560];
		v[2561] = v[2492] + v[2494];
		v[2562] = v[2494] + v[2496];
		v[2563] = v[2492] + v[2496];
		v[2564] = v[1075] * v[3662];
		v[2565] = v[1082] * v[2498] + v[1087] * v[2499];
		v[3663] = v[1086] * v[2492] + v[2565];
		v[2566] = v[1075] * v[3663];
		v[2567] = v[1082] * v[2501] + v[1086] * v[2502];
		v[3664] = v[1087] * v[2494] + v[2567];
		v[2568] = v[1084] * v[2488] + v[2491] - v[2501] + v[1083] * v[2502] + v[1085] * v[2562] - v[2565] / 2e0;
		v[2569] = v[1085] * v[2498] - v[2499] + v[1083] * v[2501] + v[2502] - v[2560] / 2e0 + v[1084] * v[2561];
		v[2570] = v[1075] * v[3664];
		v[2571] = -v[2488] + v[1084] * v[2491] + v[2498] + v[1085] * v[2499] + v[1083] * v[2563] - v[2567] / 2e0;
		v[2572] = v[1080] * v[2504] + v[1081] * v[2506];
		v[3650] = v[1076] * v[2510] + v[2572];
		v[2573] = v[2507] + v[2508];
		v[2574] = v[2508] + v[2510];
		v[2575] = v[2507] + v[2510];
		v[2576] = v[1068] * v[3650];
		v[2577] = v[1076] * v[2511] + v[1081] * v[2512];
		v[3651] = v[1080] * v[2507] + v[2577];
		v[2578] = v[1068] * v[3651];
		v[2579] = v[1076] * v[2513] + v[1080] * v[2514];
		v[3652] = v[1081] * v[2508] + v[2579];
		v[2580] = v[1078] * v[2504] + v[2506] - v[2513] + v[1077] * v[2514] + v[1079] * v[2574] - v[2577] / 2e0;
		v[2581] = v[1079] * v[2511] - v[2512] + v[1077] * v[2513] + v[2514] - v[2572] / 2e0 + v[1078] * v[2573];
		v[2582] = v[1068] * v[3652];
		v[2583] = -v[2504] + v[1078] * v[2506] + v[2511] + v[1079] * v[2512] + v[1077] * v[2575] - v[2579] / 2e0;
		v[2584] = 0e0;
		v[2585] = 0e0;
		v[2586] = 0e0;
		v[2587] = 0e0;
		v[2588] = 0e0;
		v[2589] = 0e0;
		v[2590] = 0e0;
		v[2591] = 0e0;
		v[2592] = 0e0;
		b2593 = (*previouscontact);
		if (b2593) {
			v[2484] = (*epst)*v[2351];
			v[3590] = v[2484] * v[414];
			v[2483] = (*epst)*v[2352];
			v[3589] = v[2483] * v[415];
			v[3591] = v[3589] + v[3590];
			v[2482] = (*epst)*v[2353];
			v[3588] = v[2482] * v[416];
			v[3593] = v[3588] + v[3589];
			v[3592] = v[3588] + v[3590];
			v[2282] = v[2282] + v[1053] * v[2482];
			v[2281] = v[2281] + v[1052] * v[2483];
			v[2277] = v[2277] + v[1691] * v[2484] - v[3593] * v[414];
			v[2278] = v[2278] + v[1693] * v[2483] - v[3592] * v[415];
			v[2279] = v[2279] + v[1695] * v[2482] - v[3591] * v[416];
			v[2280] = v[2280] + v[1051] * v[2484];
			v[2204] = v[2204] + v[2482] * v[3479] - v[1053] * v[3591];
			v[2200] = v[2200] + v[2483] * v[3480] - v[1052] * v[3592];
			v[2196] = v[2196] - v[2484] * v[3481] - v[1051] * v[3593];
			v[2584] = gti[0] * v[2277];
			v[2585] = gti[1] * v[2277];
			v[2586] = gti[2] * v[2277];
			v[2594] = -(v[2277] * v[300]);
			v[2595] = -(v[2277] * v[298]);
			v[2596] = -(v[2277] * v[297]);
			v[2597] = -(v[2277] * v[3350]);
			v[2598] = -(v[2277] * v[3349]);
			v[2599] = -(v[2277] * v[288]);
			v[2600] = v[2277] * v[246];
			v[2601] = v[2277] * v[245];
			v[2602] = v[254] * v[2600];
			v[2603] = v[252] * v[2600];
			v[2604] = v[254] * v[2601];
			v[2605] = v[252] * v[2601];
			v[2587] = gti[0] * v[2278];
			v[2588] = gti[1] * v[2278];
			v[2589] = gti[2] * v[2278];
			v[2606] = -(v[2278] * v[300]);
			v[2607] = -(v[2278] * v[298]);
			v[2608] = -(v[2278] * v[297]);
			v[2609] = -(v[2278] * v[3350]);
			v[2610] = -(v[2278] * v[3349]);
			v[2611] = -(v[2278] * v[288]);
			v[2612] = v[2278] * v[246];
			v[2613] = v[2278] * v[245];
			v[2614] = v[254] * v[2612];
			v[2615] = v[252] * v[2612];
			v[2616] = v[254] * v[2613];
			v[2617] = v[252] * v[2613];
			v[2590] = gti[0] * v[2279];
			v[2591] = gti[1] * v[2279];
			v[2592] = gti[2] * v[2279];
			v[2618] = -(v[2279] * v[300]);
			v[2619] = -(v[2279] * v[298]);
			v[2620] = -(v[2279] * v[297]);
			v[2621] = -(v[2279] * v[3350]);
			v[2622] = -(v[2279] * v[3349]);
			v[2623] = -(v[2279] * v[288]);
			v[2624] = v[2279] * v[246];
			v[2625] = v[2279] * v[245];
			v[2626] = v[254] * v[2624];
			v[2627] = v[252] * v[2624];
			v[2628] = v[254] * v[2625];
			v[2629] = v[252] * v[2625];
			v[2546] = -v[2280] + v[2546];
			v[2486] = -v[2281] + v[2486];
			v[2485] = -v[2282] + v[2485];
		}
		else {
			v[2605] = 0e0;
			v[2604] = 0e0;
			v[2617] = 0e0;
			v[2616] = 0e0;
			v[2629] = 0e0;
			v[2628] = 0e0;
			v[2603] = 0e0;
			v[2602] = 0e0;
			v[2615] = 0e0;
			v[2614] = 0e0;
			v[2627] = 0e0;
			v[2626] = 0e0;
			v[2601] = 0e0;
			v[2613] = 0e0;
			v[2625] = 0e0;
			v[2600] = 0e0;
			v[2612] = 0e0;
			v[2624] = 0e0;
			v[2599] = 0e0;
			v[2611] = 0e0;
			v[2623] = 0e0;
			v[2598] = 0e0;
			v[2610] = 0e0;
			v[2622] = 0e0;
			v[2597] = 0e0;
			v[2609] = 0e0;
			v[2621] = 0e0;
			v[2596] = 0e0;
			v[2608] = 0e0;
			v[2620] = 0e0;
			v[2595] = 0e0;
			v[2607] = 0e0;
			v[2619] = 0e0;
			v[2594] = 0e0;
			v[2606] = 0e0;
			v[2618] = 0e0;
		};
		b2630 = b1016;
		if (b2630) {
			v[2234] = v[2234] + (v[1033] * v[2592]) / 2e0;
			v[2233] = v[2233] + v[1033] * v[2591];
			v[2232] = v[2232] + v[1033] * v[2590];
			v[2231] = v[2231] + v[1033] * v[2589];
			v[2230] = v[2230] + (v[1033] * v[2588]) / 2e0;
			v[2229] = v[2229] + v[1033] * v[2587];
			v[2228] = v[2228] + v[1033] * v[2586];
			v[2227] = v[2227] + v[1033] * v[2585];
			v[2216] = v[2216] + (v[1741] * v[2584]) / 2e0 + v[1742] * v[2585] + v[1743] * v[2586] + v[1744] * v[2587] +
				(v[1745] * v[2588]) / 2e0 + v[1746] * v[2589] + v[1747] * v[2590] + v[1748] * v[2591] + (v[1749] * v[2592]) / 2e0;
			v[2226] = v[2226] + (v[1033] * v[2584]) / 2e0;
			v[2235] = v[2235] - 4e0*v[2216] * v[2631];
			v[3594] = v[2226] - v[2235];
			v[3596] = (v[2228] + v[2232]) / 2e0;
			v[3595] = (v[2231] + v[2233]) / 2e0;
			v[2215] = v[2215] - v[2227] + v[2229] - 2e0*v[1032] * (v[2230] + v[3594]) + v[1031] * v[3595] + v[1030] * v[3596];
			v[3597] = (v[2227] + v[2229]) / 2e0;
			v[2214] = v[2214] + v[2228] - v[2232] - 2e0*v[1031] * (v[2234] + v[3594]) + v[1032] * v[3595] + v[1030] * v[3597];
			v[2213] = v[2213] - v[2231] + v[2233] - 2e0*v[1030] * (v[2230] + v[2234] - v[2235]) + v[1032] * v[3596]
				+ v[1031] * v[3597];
			v[3598] = v[1018] * v[2213] + v[1019] * v[2214] + v[1020] * v[2215];
			v[2212] = v[2212] + v[1023] * v[3598];
			v[2210] = v[2210] + v[1029] * v[3598];
			v[2211] = v[2211] + v[1028] * v[2212];
			v[2236] = v[2236] + 2e0*v[2210] * v[2250];
			v[2237] = v[2237] + (v[2236] * v[2251]) / 2e0;
			v[2209] = v[2209] + v[2211] + v[2237];
			v[3599] = v[2209] / v[1021];
			v[2208] = v[2208] + v[2215] * v[3395] + v[1020] * v[3599];
			v[2207] = v[2207] + v[2214] * v[3395] + v[1019] * v[3599];
			v[2206] = v[2206] + v[2213] * v[3395] + v[1018] * v[3599];
			v[2196] = v[2196] - v[2208] * v[424] + v[2207] * v[425];
			v[2204] = v[2204] - v[2207] * v[423] + v[2206] * v[424];
			v[2200] = v[2200] + v[2208] * v[423] - v[2206] * v[425];
		}
		else {
		};
		v[2638] = -(v[2481] * v[956]) - v[2480] * v[957] - v[2479] * v[958] - v[2478] * v[959] - v[2477] * v[960]
			- v[2476] * v[961] - v[2475] * v[962] - v[2474] * v[963] - v[2473] * v[964] - v[2472] * v[965] - v[2471] * v[966]
			- v[2470] * v[967] - v[2469] * v[968] - v[2468] * v[969] - v[2467] * v[970] - v[2466] * v[971] - v[2465] * v[972]
			- v[2464] * v[973] - v[2463] * v[974] - v[2462] * v[975] - v[2461] * v[976] - v[2460] * v[977] - v[2459] * v[978]
			- v[2458] * v[979] - v[2457] * v[980] - v[2456] * v[981] - v[2455] * v[982] - v[2454] * v[983] - v[2453] * v[984]
			- v[2451] * v[985];
		v[2769] = -(v[2638] * v[458]);
		v[2639] = -(v[1015] * v[2451]) - v[1014] * v[2453] - v[1013] * v[2454] - v[1012] * v[2455] - v[1011] * v[2456]
			- v[1010] * v[2457] - v[1009] * v[2458] - v[1008] * v[2459] - v[1007] * v[2460] - v[1006] * v[2461] - v[1005] * v[2462]
			- v[1004] * v[2463] - v[1003] * v[2464] - v[1002] * v[2465] - v[1001] * v[2466] - v[1000] * v[2467] - v[2481] * v[986]
			- v[2480] * v[987] - v[2479] * v[988] - v[2478] * v[989] - v[2477] * v[990] - v[2476] * v[991] - v[2475] * v[992]
			- v[2474] * v[993] - v[2473] * v[994] - v[2472] * v[995] - v[2471] * v[996] - v[2470] * v[997] - v[2469] * v[998]
			- v[2468] * v[999];
		v[2770] = -(v[2639] * v[465]);
		v[2775] = (-(v[2481] * v[896]) - v[2480] * v[897] - v[2479] * v[898] - v[2478] * v[899] - v[2477] * v[900]
			- v[2476] * v[901] - v[2475] * v[902] - v[2474] * v[903] - v[2473] * v[904] - v[2472] * v[905] - v[2471] * v[906]
			- v[2470] * v[907] - v[2469] * v[908] - v[2468] * v[909] - v[2467] * v[910] - v[2466] * v[911] - v[2465] * v[912]
			- v[2464] * v[913] - v[2463] * v[914] - v[2462] * v[915] - v[2461] * v[916] - v[2460] * v[917] - v[2459] * v[918]
			- v[2458] * v[919] - v[2457] * v[920] - v[2456] * v[921] - v[2455] * v[922] - v[2454] * v[923] - v[2453] * v[924]
			- v[2451] * v[925]) / 2e0;
		v[2641] = v[2481] * v[926] + v[2480] * v[927] + v[2479] * v[928] + v[2478] * v[929] + v[2477] * v[930] + v[2476] * v[931]
			+ v[2475] * v[932] + v[2474] * v[933] + v[2473] * v[934] + v[2472] * v[935] + v[2471] * v[936] + v[2470] * v[937]
			+ v[2469] * v[938] + v[2468] * v[939] + v[2467] * v[940] + v[2466] * v[941] + v[2465] * v[942] + v[2464] * v[943]
			+ v[2463] * v[944] + v[2462] * v[945] + v[2461] * v[946] + v[2460] * v[947] + v[2459] * v[948] + v[2458] * v[949]
			+ v[2457] * v[950] + v[2456] * v[951] + v[2455] * v[952] + v[2454] * v[953] + v[2453] * v[954] + v[2451] * v[955];
		v[3626] = v[247] * v[2641];
		v[3625] = v[248] * v[2641];
		v[2642] = -(v[2450] * v[956]) - v[2449] * v[957] - v[2448] * v[958] - v[2447] * v[959] - v[2446] * v[960]
			- v[2445] * v[961] - v[2444] * v[962] - v[2443] * v[963] - v[2442] * v[964] - v[2441] * v[965] - v[2440] * v[966]
			- v[2439] * v[967] - v[2438] * v[968] - v[2437] * v[969] - v[2436] * v[970] - v[2435] * v[971] - v[2434] * v[972]
			- v[2433] * v[973] - v[2432] * v[974] - v[2431] * v[975] - v[2430] * v[976] - v[2429] * v[977] - v[2428] * v[978]
			- v[2427] * v[979] - v[2426] * v[980] - v[2425] * v[981] - v[2424] * v[982] - v[2423] * v[983] - v[2422] * v[984]
			- v[2420] * v[985];
		v[2765] = -(v[2642] * v[458]);
		v[2643] = -(v[1015] * v[2420]) - v[1014] * v[2422] - v[1013] * v[2423] - v[1012] * v[2424] - v[1011] * v[2425]
			- v[1010] * v[2426] - v[1009] * v[2427] - v[1008] * v[2428] - v[1007] * v[2429] - v[1006] * v[2430] - v[1005] * v[2431]
			- v[1004] * v[2432] - v[1003] * v[2433] - v[1002] * v[2434] - v[1001] * v[2435] - v[1000] * v[2436] - v[2450] * v[986]
			- v[2449] * v[987] - v[2448] * v[988] - v[2447] * v[989] - v[2446] * v[990] - v[2445] * v[991] - v[2444] * v[992]
			- v[2443] * v[993] - v[2442] * v[994] - v[2441] * v[995] - v[2440] * v[996] - v[2439] * v[997] - v[2438] * v[998]
			- v[2437] * v[999];
		v[2766] = -(v[2643] * v[465]);
		v[2778] = (-(v[2450] * v[896]) - v[2449] * v[897] - v[2448] * v[898] - v[2447] * v[899] - v[2446] * v[900]
			- v[2445] * v[901] - v[2444] * v[902] - v[2443] * v[903] - v[2442] * v[904] - v[2441] * v[905] - v[2440] * v[906]
			- v[2439] * v[907] - v[2438] * v[908] - v[2437] * v[909] - v[2436] * v[910] - v[2435] * v[911] - v[2434] * v[912]
			- v[2433] * v[913] - v[2432] * v[914] - v[2431] * v[915] - v[2430] * v[916] - v[2429] * v[917] - v[2428] * v[918]
			- v[2427] * v[919] - v[2426] * v[920] - v[2425] * v[921] - v[2424] * v[922] - v[2423] * v[923] - v[2422] * v[924]
			- v[2420] * v[925]) / 2e0;
		v[2645] = v[2450] * v[926] + v[2449] * v[927] + v[2448] * v[928] + v[2447] * v[929] + v[2446] * v[930] + v[2445] * v[931]
			+ v[2444] * v[932] + v[2443] * v[933] + v[2442] * v[934] + v[2441] * v[935] + v[2440] * v[936] + v[2439] * v[937]
			+ v[2438] * v[938] + v[2437] * v[939] + v[2436] * v[940] + v[2435] * v[941] + v[2434] * v[942] + v[2433] * v[943]
			+ v[2432] * v[944] + v[2431] * v[945] + v[2430] * v[946] + v[2429] * v[947] + v[2428] * v[948] + v[2427] * v[949]
			+ v[2426] * v[950] + v[2425] * v[951] + v[2424] * v[952] + v[2423] * v[953] + v[2422] * v[954] + v[2420] * v[955];
		v[3624] = v[247] * v[2645];
		v[3623] = v[248] * v[2645];
		v[2646] = -(v[2419] * v[956]) - v[2417] * v[957] - v[2415] * v[958] - v[2413] * v[959] - v[2412] * v[960]
			- v[2411] * v[961] - v[2410] * v[962] - v[2408] * v[963] - v[2406] * v[964] - v[2404] * v[965] - v[2403] * v[966]
			- v[2402] * v[967] - v[2401] * v[968] - v[2400] * v[969] - v[2399] * v[970] - v[2398] * v[971] - v[2397] * v[972]
			- v[2396] * v[973] - v[2395] * v[974] - v[2394] * v[975] - v[2393] * v[976] - v[2392] * v[977] - v[2391] * v[978]
			- v[2390] * v[979] - v[2389] * v[980] - v[2388] * v[981] - v[2387] * v[982] - v[2386] * v[983] - v[2385] * v[984]
			- v[2383] * v[985];
		v[2762] = -(v[2646] * v[458]);
		v[2647] = -(v[1015] * v[2383]) - v[1014] * v[2385] - v[1013] * v[2386] - v[1012] * v[2387] - v[1011] * v[2388]
			- v[1010] * v[2389] - v[1009] * v[2390] - v[1008] * v[2391] - v[1007] * v[2392] - v[1006] * v[2393] - v[1005] * v[2394]
			- v[1004] * v[2395] - v[1003] * v[2396] - v[1002] * v[2397] - v[1001] * v[2398] - v[1000] * v[2399] - v[2419] * v[986]
			- v[2417] * v[987] - v[2415] * v[988] - v[2413] * v[989] - v[2412] * v[990] - v[2411] * v[991] - v[2410] * v[992]
			- v[2408] * v[993] - v[2406] * v[994] - v[2404] * v[995] - v[2403] * v[996] - v[2402] * v[997] - v[2401] * v[998]
			- v[2400] * v[999];
		v[2763] = -(v[2647] * v[465]);
		v[2781] = (-(v[2419] * v[896]) - v[2417] * v[897] - v[2415] * v[898] - v[2413] * v[899] - v[2412] * v[900]
			- v[2411] * v[901] - v[2410] * v[902] - v[2408] * v[903] - v[2406] * v[904] - v[2404] * v[905] - v[2403] * v[906]
			- v[2402] * v[907] - v[2401] * v[908] - v[2400] * v[909] - v[2399] * v[910] - v[2398] * v[911] - v[2397] * v[912]
			- v[2396] * v[913] - v[2395] * v[914] - v[2394] * v[915] - v[2393] * v[916] - v[2392] * v[917] - v[2391] * v[918]
			- v[2390] * v[919] - v[2389] * v[920] - v[2388] * v[921] - v[2387] * v[922] - v[2386] * v[923] - v[2385] * v[924]
			- v[2383] * v[925]) / 2e0;
		v[2649] = v[2419] * v[926] + v[2417] * v[927] + v[2415] * v[928] + v[2413] * v[929] + v[2412] * v[930] + v[2411] * v[931]
			+ v[2410] * v[932] + v[2408] * v[933] + v[2406] * v[934] + v[2404] * v[935] + v[2403] * v[936] + v[2402] * v[937]
			+ v[2401] * v[938] + v[2400] * v[939] + v[2399] * v[940] + v[2398] * v[941] + v[2397] * v[942] + v[2396] * v[943]
			+ v[2395] * v[944] + v[2394] * v[945] + v[2393] * v[946] + v[2392] * v[947] + v[2391] * v[948] + v[2390] * v[949]
			+ v[2389] * v[950] + v[2388] * v[951] + v[2387] * v[952] + v[2386] * v[953] + v[2385] * v[954] + v[2383] * v[955];
		v[3622] = v[247] * v[2649];
		v[3621] = v[248] * v[2649];
		v[2653] = -((*ct)*(v[1563] * v[2351] + v[1564] * v[2352] + v[1565] * v[2353])) + (*cn)*(v[2348] * v[2650]
			+ v[2349] * v[2651] + v[2350] * v[2652]) - v[2339] * v[907] - v[2338] * v[937] + v[2344] * v[967] + v[2340] * v[997];
		v[2802] = v[2653] * v[3343];
		v[3637] = v[2802] * v[376];
		v[2657] = -((*ct)*(v[1559] * v[2351] + v[1560] * v[2352] + v[1561] * v[2353])) + (*cn)*(v[2348] * v[2654]
			+ v[2349] * v[2655] + v[2350] * v[2656]) - v[2339] * v[906] - v[2338] * v[936] + v[2344] * v[966] + v[2340] * v[996];
		v[3609] = v[2657] * v[376];
		v[2807] = v[2657] * v[3342];
		v[2661] = -((*ct)*(v[1555] * v[2351] + v[1556] * v[2352] + v[1557] * v[2353])) + (*cn)*(v[2348] * v[2658]
			+ v[2349] * v[2659] + v[2350] * v[2660]) - v[2339] * v[905] - v[2338] * v[935] + v[2344] * v[965] + v[2340] * v[995];
		v[3612] = v[2661] * v[376];
		v[2811] = v[2661] * v[3341];
		v[2665] = -((*ct)*(v[1539] * v[2351] + v[1540] * v[2352] + v[1541] * v[2353])) + (*cn)*(v[2348] * v[2662]
			+ v[2349] * v[2663] + v[2350] * v[2664]) - v[2339] * v[901] - v[2338] * v[931] + v[2344] * v[961] + v[2340] * v[991];
		v[2835] = v[2665] * v[3340];
		v[3643] = v[2835] * v[350];
		v[2669] = -((*ct)*(v[1535] * v[2351] + v[1536] * v[2352] + v[1537] * v[2353])) + (*cn)*(v[2348] * v[2666]
			+ v[2349] * v[2667] + v[2350] * v[2668]) - v[2339] * v[900] - v[2338] * v[930] + v[2344] * v[960] + v[2340] * v[990];
		v[3617] = v[2669] * v[350];
		v[2840] = v[2669] * v[3339];
		v[2673] = -((*ct)*(v[1531] * v[2351] + v[1532] * v[2352] + v[1533] * v[2353])) + (*cn)*(v[2348] * v[2670]
			+ v[2349] * v[2671] + v[2350] * v[2672]) - v[2339] * v[899] - v[2338] * v[929] + v[2344] * v[959] + v[2340] * v[989];
		v[10263] = (*ct)*(-(v[1519] * v[2351]) - v[1520] * v[2352] - v[1521] * v[2353]) + v[1102] * v[3581] + v[247] * v[3696]
			- v[2339] * v[896] - v[2338] * v[926] + v[2344] * v[956] + v[2340] * v[986];
		v[10264] = (*ct)*(-(v[1523] * v[2351]) - v[1524] * v[2352] - v[1525] * v[2353]) + v[1102] * v[3587] + v[247] * v[3697]
			- v[2339] * v[897] - v[2338] * v[927] + v[2344] * v[957] + v[2340] * v[987];
		v[10265] = (*ct)*(-(v[1527] * v[2351]) - v[1528] * v[2352] - v[1529] * v[2353]) + v[247] * v[3698] - v[2339] * v[898]
			- v[2338] * v[928] + v[2344] * v[958] + v[2340] * v[988];
		v[10266] = v[1667] * v[2140] + v[1666] * v[2144] + v[2027] * (v[2849] + v[1666] * v[2895] + v[1667] * v[2897])
			+ v[2673] * v[2922] + v[2669] * v[3354] + v[2665] * v[3356] + v[2014] * v[3699] + v[2017] * v[3700] + v[2020] * v[3701]
			+ v[190] * v[3702] + v[195] * v[3703] + v[186] * v[3704];
		v[10267] = v[1668] * v[2140] + v[1666] * v[2146] + v[1934] * v[2665] + v[1935] * v[2673] + v[2027] * (v[2839]
			+ v[1666] * v[2894] + v[1668] * v[2898]) + v[2669] * v[2923] + v[2021] * v[3494] + v[2015] * v[3496] + v[2018] * v[3705]
			+ v[187] * v[3706] + v[192] * v[3707] + v[2154] * v[3745];
		v[10268] = v[1668] * v[2144] + v[1667] * v[2146] + v[1936] * v[2669] + v[1937] * v[2673] + v[2027] * (v[2828]
			+ v[1667] * v[2896] + v[1668] * v[2899]) + v[2665] * v[2924] + v[2019] * v[3495] + v[2016] * v[3708] + v[2022] * v[3709]
			+ v[198] * v[3710] + v[2158] * v[3743] + v[2162] * v[3744];
		v[10269] = (*ct)*(-(v[1543] * v[2351]) - v[1544] * v[2352] - v[1545] * v[2353]) + v[1103] * v[3581] + v[248] * v[3696]
			- v[2339] * v[902] - v[2338] * v[932] + v[2344] * v[962] + v[2340] * v[992];
		v[10270] = (*ct)*(-(v[1547] * v[2351]) - v[1548] * v[2352] - v[1549] * v[2353]) + v[1103] * v[3587] + v[248] * v[3697]
			- v[2339] * v[903] - v[2338] * v[933] + v[2344] * v[963] + v[2340] * v[993];
		v[10271] = (*ct)*(-(v[1551] * v[2351]) - v[1552] * v[2352] - v[1553] * v[2353]) + v[248] * v[3698] - v[2339] * v[904]
			- v[2338] * v[934] + v[2344] * v[964] + v[2340] * v[994];
		v[10272] = v[1664] * v[2168] + v[1663] * v[2172] + v[2050] * (v[2816] + v[1663] * v[2873] + v[1664] * v[2875])
			+ v[2661] * v[2925] + v[2657] * v[3359] + v[2653] * v[3361] + v[2037] * v[3711] + v[2040] * v[3712] + v[2043] * v[3713]
			+ v[209] * v[3714] + v[214] * v[3715] + v[205] * v[3716];
		v[10273] = v[1665] * v[2168] + v[1663] * v[2174] + v[1940] * v[2653] + v[1941] * v[2661] + v[2050] * (v[2806]
			+ v[1663] * v[2872] + v[1665] * v[2876]) + v[2657] * v[2926] + v[2044] * v[3491] + v[2038] * v[3493] + v[2041] * v[3717]
			+ v[206] * v[3718] + v[211] * v[3719] + v[2182] * v[3742];
		v[10274] = v[1665] * v[2172] + v[1664] * v[2174] + v[1942] * v[2657] + v[1943] * v[2661] + v[2050] * (v[2795]
			+ v[1664] * v[2874] + v[1665] * v[2877]) + v[2653] * v[2927] + v[2042] * v[3492] + v[2039] * v[3720] + v[2045] * v[3721]
			+ v[217] * v[3722] + v[2186] * v[3740] + v[2190] * v[3741];
		v[10275] = (*ct)*(-(v[1567] * v[2351]) - v[1568] * v[2352] - v[1569] * v[2353]) + v[1104] * v[3581] - v[301] * v[3696]
			- v[2339] * v[908] - v[2338] * v[938] + v[2344] * v[968] + v[2340] * v[998];
		v[10276] = (*ct)*(-(v[1571] * v[2351]) - v[1572] * v[2352] - v[1573] * v[2353]) + v[1104] * v[3587] - v[301] * v[3697]
			- v[2339] * v[909] - v[2338] * v[939] + v[2344] * v[969] + v[2340] * v[999];
		v[10277] = v[1000] * v[2340] + (*ct)*(-(v[1575] * v[2351]) - v[1576] * v[2352] - v[1577] * v[2353]) - v[301] * v[3698]
			- v[2339] * v[910] - v[2338] * v[940] + v[2344] * v[970];
		v[10278] = v[1001] * v[2340] + (*ct)*(-(v[1579] * v[2351]) - v[1580] * v[2352] - v[1581] * v[2353])
			+ v[1105] * v[3581] - v[3351] * v[3696] - v[2339] * v[911] - v[2338] * v[941] + v[2344] * v[971];
		v[10279] = v[1002] * v[2340] + (*ct)*(-(v[1583] * v[2351]) - v[1584] * v[2352] - v[1585] * v[2353])
			+ v[1105] * v[3587] - v[3351] * v[3697] - v[2339] * v[912] - v[2338] * v[942] + v[2344] * v[972];
		v[10280] = v[1003] * v[2340] + (*ct)*(-(v[1587] * v[2351]) - v[1588] * v[2352] - v[1589] * v[2353])
			- v[3351] * v[3698] - v[2339] * v[913] - v[2338] * v[943] + v[2344] * v[973];
		v[10281] = v[1004] * v[2340] + (*ct)*(-(v[1591] * v[2351]) - v[1592] * v[2352] - v[1593] * v[2353])
			+ v[1106] * v[3581] - v[3352] * v[3696] - v[2339] * v[914] - v[2338] * v[944] + v[2344] * v[974];
		v[10282] = v[1005] * v[2340] + (*ct)*(-(v[1595] * v[2351]) - v[1596] * v[2352] - v[1597] * v[2353])
			+ v[1106] * v[3587] - v[3352] * v[3697] - v[2339] * v[915] - v[2338] * v[945] + v[2344] * v[975];
		v[10283] = v[1006] * v[2340] + (*ct)*(-(v[1599] * v[2351]) - v[1600] * v[2352] - v[1601] * v[2353])
			- v[3352] * v[3698] - v[2339] * v[916] - v[2338] * v[946] + v[2344] * v[976];
		v[10284] = v[1007] * v[2340] + (*ct)*(-(v[1603] * v[2351]) - v[1604] * v[2352] - v[1605] * v[2353])
			+ v[1107] * v[3581] - v[310] * v[3696] - v[2339] * v[917] - v[2338] * v[947] + v[2344] * v[977];
		v[10285] = v[1008] * v[2340] + (*ct)*(-(v[1607] * v[2351]) - v[1608] * v[2352] - v[1609] * v[2353])
			+ v[1107] * v[3587] - v[310] * v[3697] - v[2339] * v[918] - v[2338] * v[948] + v[2344] * v[978];
		v[10286] = v[1009] * v[2340] + (*ct)*(-(v[1611] * v[2351]) - v[1612] * v[2352] - v[1613] * v[2353]) - v[310] * v[3698]
			- v[2339] * v[919] - v[2338] * v[949] + v[2344] * v[979];
		v[10287] = v[1010] * v[2340] + (*ct)*(-(v[1615] * v[2351]) - v[1616] * v[2352] - v[1617] * v[2353])
			+ v[1108] * v[3581] - v[311] * v[3696] - v[2339] * v[920] - v[2338] * v[950] + v[2344] * v[980];
		v[10288] = v[1011] * v[2340] + (*ct)*(-(v[1619] * v[2351]) - v[1620] * v[2352] - v[1621] * v[2353])
			+ v[1108] * v[3587] - v[311] * v[3697] - v[2339] * v[921] - v[2338] * v[951] + v[2344] * v[981];
		v[10289] = v[1012] * v[2340] + (*ct)*(-(v[1623] * v[2351]) - v[1624] * v[2352] - v[1625] * v[2353]) - v[311] * v[3698]
			- v[2339] * v[922] - v[2338] * v[952] + v[2344] * v[982];
		v[10290] = v[1013] * v[2340] + (*ct)*(-(v[1627] * v[2351]) - v[1628] * v[2352] - v[1629] * v[2353])
			+ v[1109] * v[3581] - v[313] * v[3696] - v[2339] * v[923] - v[2338] * v[953] + v[2344] * v[983];
		v[10291] = v[1014] * v[2340] + (*ct)*(-(v[1631] * v[2351]) - v[1632] * v[2352] - v[1633] * v[2353])
			+ v[1109] * v[3587] - v[313] * v[3697] - v[2339] * v[924] - v[2338] * v[954] + v[2344] * v[984];
		v[10292] = v[1015] * v[2340] + (*ct)*(-(v[1635] * v[2351]) - v[1636] * v[2352] - v[1637] * v[2353]) - v[313] * v[3698]
			- v[2339] * v[925] - v[2338] * v[955] + v[2344] * v[985];
		v[3620] = v[2673] * v[350];
		v[2844] = v[2673] * v[3338];
		v[2204] = v[2204] + v[2515] * v[3600] + 2e0*v[2485] * v[416];
		v[2200] = v[2200] + v[3601] * v[414] + 2e0*v[2486] * v[415];
		v[2196] = v[2196] + 2e0*v[2546] * v[414] + v[3601] * v[415];
		v[3603] = (-(v[1772] * v[2674] * v[3602]) + v[2193] * v[2675] * v[411] + (v[1676] * v[2119] + v[1677] * v[2127]
			+ v[1678] * v[2135] + v[2196] * v[399] + v[2200] * v[400] + v[2204] * v[401])*v[412]) / v[1773];
		v[2677] = v[183] * v[2571] + v[2564] * v[656] + v[2566] * v[664] + (v[2570] * v[675]) / 2e0;
		v[2678] = v[183] * v[2568] + v[2564] * v[655] + (v[2566] * v[662]) / 2e0 + v[2570] * v[670];
		v[2679] = v[183] * v[2569] + (v[2564] * v[652]) / 2e0 + v[2566] * v[657] + v[2570] * v[665];
		v[2680] = v[202] * v[2583] + v[2576] * v[625] + v[2578] * v[633] + (v[2582] * v[644]) / 2e0;
		v[2681] = v[202] * v[2580] + v[2576] * v[624] + (v[2578] * v[631]) / 2e0 + v[2582] * v[639];
		v[2682] = v[202] * v[2581] + (v[2576] * v[621]) / 2e0 + v[2578] * v[626] + v[2582] * v[634];
		v[2684] = (*epsn)*v[2350] + v[2135] * v[3484] + v[1678] * v[3553] + v[3603] * v[401] + v[2204] * v[413];
		v[2686] = (*epsn)*v[2349] + v[2127] * v[3484] + v[1677] * v[3553] + v[3603] * v[400] + v[2200] * v[413];
		v[2688] = (*epsn)*v[2348] + v[2119] * v[3484] + v[1676] * v[3553] + v[3603] * v[399] + v[2196] * v[413];
		v[2689] = -(i3550*v[1774]) - i3546 * v[1776] - i3542 * v[1777] - v[2688] * v[285] - v[2686] * v[286] - v[2684] * v[287]
			- v[2539] * v[3363] - v[2500] * v[344] - v[2497] * v[345] + v[3173] * v[3580] + v[346] * v[3604];
		v[2693] = -(i3548*v[1774]) - i3544 * v[1776] - i3540 * v[1777] - v[2688] * v[270] - v[2686] * v[271] - v[2684] * v[272]
			- v[2500] * v[329] - v[2497] * v[330] - v[2534] * v[3363] + v[3181] * v[3580] + v[331] * v[3604];
		v[2694] = v[1663] * v[3605] + v[2653] * v[385];
		v[2695] = v[1663] * v[3606] + v[2653] * v[379];
		v[2696] = v[1790] * v[2653] + v[1663] * (v[2050] * v[3610] + v[2080] / v[376]) + (v[211] * v[2694]) / v[376];
		v[2697] = v[1797] * v[2653] + (v[205] * v[2695]) / v[376] + v[1663] * (v[2075] / v[376] + v[2050] * v[3930]);
		v[2698] = (v[216] * v[2694] + v[214] * v[2695] + v[1786] * v[2653] * v[376] + v[1663] * (v[2085] + v[3552] * v[3931]))
			/ v[376];
		v[2699] = v[1664] * v[3607] + v[2657] * v[387];
		v[2700] = v[1664] * v[3606] + v[2657] * v[379];
		v[2703] = v[1785] * v[2657] + v[1664] * (v[2050] * v[3608] + v[2083] / v[376]) + (v[217] * v[2699]) / v[376];
		v[2704] = v[2694] + v[2699];
		v[2705] = -v[2696] + v[2703];
		v[2706] = v[2696] + v[2703];
		v[2708] = (v[1788] * v[2039] + v[205] * v[2700] + v[207] * v[2704] + v[2868] * v[3552] + v[1796] * v[3609] + v[1664] *
			(v[2071] + v[3552] * v[3611])) / v[376];
		v[2711] = (v[212] * v[2699] + v[209] * v[2700] + v[1789] * v[3609] + v[1664] * (v[2077] + v[3552] * v[3932])) / v[376];
		v[2712] = v[1665] * v[3605] + v[2661] * v[385];
		v[2713] = v[1665] * v[3607] + v[2661] * v[387];
		v[2714] = v[2700] + v[2712];
		v[2717] = (v[206] * v[2712] + v[207] * v[2713] + v[1794] * v[3612] + v[1665] * (v[2072] + v[3552] * v[3933])) / v[376];
		v[2718] = v[2695] + v[2713];
		v[2720] = (v[1799] * v[2042] + v[211] * v[2712] + v[212] * v[2718] + v[2867] * v[3552] + v[1801] * v[3612] + v[1665] *
			(v[2076] + v[3552] * v[3934])) / v[376];
		v[2721] = v[2708] + v[2720];
		v[2722] = -v[2708] + v[2720];
		v[2724] = (v[1800] * v[2044] + v[217] * v[2713] + v[216] * v[2714] + v[2866] * v[3552] + v[1805] * v[3612] + v[1665] *
			(v[2081] + v[3552] * v[3935])) / v[376];
		v[2725] = v[2697] + v[2724];
		v[2726] = -v[2697] + v[2724];
		v[2727] = v[2665] * v[359] + v[1666] * v[3613];
		v[2728] = v[2665] * v[353] + v[1666] * v[3614];
		v[2729] = v[1817] * v[2665] + (v[192] * v[2727]) / v[350] + v[1666] * (v[2065] / v[350] + v[2027] * v[3618]);
		v[2730] = v[1824] * v[2665] + (v[186] * v[2728]) / v[350] + v[1666] * (v[2060] / v[350] + v[2027] * v[3936]);
		v[2731] = (v[197] * v[2727] + v[195] * v[2728] + v[1813] * v[2665] * v[350] + v[1666] * (v[2070] + v[3551] * v[3937]))
			/ v[350];
		v[2732] = v[2669] * v[361] + v[1667] * v[3615];
		v[2733] = v[2669] * v[353] + v[1667] * v[3614];
		v[2736] = v[1812] * v[2669] + (v[198] * v[2732]) / v[350] + v[1667] * (v[2068] / v[350] + v[2027] * v[3616]);
		v[2737] = v[2727] + v[2732];
		v[2738] = -v[2729] + v[2736];
		v[2739] = v[2729] + v[2736];
		v[2741] = (v[1815] * v[2016] + v[186] * v[2733] + v[188] * v[2737] + v[2890] * v[3551] + v[1823] * v[3617] + v[1667] *
			(v[2056] + v[3551] * v[3619])) / v[350];
		v[2744] = (v[193] * v[2732] + v[190] * v[2733] + v[1816] * v[3617] + v[1667] * (v[2062] + v[3551] * v[3938])) / v[350];
		v[2745] = v[2673] * v[359] + v[1668] * v[3613];
		v[2746] = v[2673] * v[361] + v[1668] * v[3615];
		v[2747] = v[2733] + v[2745];
		v[2750] = (v[187] * v[2745] + v[188] * v[2746] + v[1821] * v[3620] + v[1668] * (v[2057] + v[3551] * v[3939])) / v[350];
		v[2751] = v[2728] + v[2746];
		v[2753] = (v[1826] * v[2019] + v[192] * v[2745] + v[193] * v[2751] + v[2889] * v[3551] + v[1828] * v[3620] + v[1668] *
			(v[2061] + v[3551] * v[3940])) / v[350];
		v[2754] = v[2741] + v[2753];
		v[2755] = -v[2741] + v[2753];
		v[2757] = (v[1827] * v[2021] + v[198] * v[2746] + v[197] * v[2747] + v[2888] * v[3551] + v[1832] * v[3620] + v[1668] *
			(v[2066] + v[3551] * v[3941])) / v[350];
		v[2758] = v[2730] + v[2757];
		v[2759] = -v[2730] + v[2757];
		v[2760] = -(i3549*v[1774]) - i3545 * v[1776] - i3541 * v[1777] + v[2689] - v[2688] * v[279] - v[2686] * v[280]
			- v[2684] * v[281] - v[2537] * v[3363] - v[2500] * v[338] - v[2497] * v[339] + v[3222] * v[3580] + v[340] * v[3604];
		v[2761] = -(i3547*v[1774]) - i3543 * v[1776] - i3539 * v[1777] + v[2693] - v[2760] - v[2688] * v[282] - v[2686] * v[283]
			- v[2684] * v[284] - v[2538] * v[3363] - v[2500] * v[341] - v[2497] * v[342] + v[3175] * v[3580] + v[343] * v[3604];
		v[2622] = v[2622] - v[2684] * v[3351] + v[2646] * v[456];
		v[2618] = v[2618] + v[2762] - v[2684] * v[313] + v[2647] * v[466];
		v[2619] = v[2619] - v[2762] + v[2763] - v[2684] * v[311];
		v[2620] = v[2620] - v[2763] - v[2684] * v[310] + v[2646] * v[457];
		v[2621] = v[2621] - v[2684] * v[3352] + v[2647] * v[464];
		v[2764] = v[2646] + v[2647];
		v[2610] = v[2610] - v[2686] * v[3351] + v[2642] * v[456];
		v[2606] = v[2606] + v[2765] - v[2686] * v[313] + v[2643] * v[466];
		v[2607] = v[2607] - v[2765] + v[2766] - v[2686] * v[311];
		v[2608] = v[2608] - v[2766] - v[2686] * v[310] + v[2642] * v[457];
		v[2609] = v[2609] - v[2686] * v[3352] + v[2643] * v[464];
		v[2767] = v[2642] + v[2643];
		v[2598] = v[2598] - v[2688] * v[3351] + v[2638] * v[456];
		v[2768] = i3549 * v[1651] + i3545 * v[1656] + i3541 * v[1669] + v[2638] * v[279] + v[2642] * v[280] + v[2646] * v[281];
		v[2594] = v[2594] + v[2769] - v[2688] * v[313] + v[2639] * v[466];
		v[2595] = v[2595] - v[2769] + v[2770] - v[2688] * v[311];
		v[2596] = v[2596] - v[2770] - v[2688] * v[310] + v[2638] * v[457];
		v[2597] = v[2597] - v[2688] * v[3352] + v[2639] * v[464];
		v[2771] = v[2638] + v[2639];
		v[2772] = i3550 * v[1652] + i3546 * v[1658] + i3542 * v[1670] + v[2639] * v[285] + v[2643] * v[286] + v[2647] * v[287];
		v[2623] = v[2623] - v[2684] * v[301] + v[2764] * v[455];
		v[2611] = v[2611] - v[2686] * v[301] + v[2767] * v[455];
		v[2599] = v[2599] - v[2688] * v[301] + v[2771] * v[455];
		v[2906] = i3548 * v[1839] + i3544 * v[1842] + i3540 * v[1845] - v[2693] + v[2761] + v[272] * v[2764] + v[271] * v[2767]
			+ v[270] * v[2771];
		v[2774] = v[247] * v[2688] + v[2775];
		v[2776] = v[248] * v[2688] - v[2775];
		v[2601] = v[2601] + v[2774];
		v[2600] = v[2600] + v[2776];
		v[2777] = v[247] * v[2686] + v[2778];
		v[2779] = v[248] * v[2686] - v[2778];
		v[2613] = v[2613] + v[2777];
		v[2612] = v[2612] + v[2779];
		v[2780] = v[247] * v[2684] + v[2781];
		v[2782] = v[248] * v[2684] - v[2781];
		v[2625] = v[2625] + v[2780];
		v[2783] = v[1846] * v[2087] + v[1848] * v[2089] + v[1849] * v[2091] + v[1851] * v[2093] + v[1852] * v[2095]
			+ v[1854] * v[2097] + v[247] * (QAAi[0][1] * v[2677] + QAAi[1][1] * v[2678] + QAAi[2][1] * v[2679]) + v[248] *
			(QBAi[0][1] * v[2680] + QBAi[1][1] * v[2681] + QBAi[2][1] * v[2682]) + v[222] * v[2774] + v[231] * v[2776]
			+ v[225] * v[2777] + v[234] * v[2779] + v[228] * v[2780] + v[237] * v[2782];
		v[2784] = v[1846] * v[2086] + v[1848] * v[2088] + v[1849] * v[2090] + v[1851] * v[2092] + v[1852] * v[2094]
			+ v[1854] * v[2096] + v[247] * (QAAi[0][0] * v[2677] + QAAi[1][0] * v[2678] + QAAi[2][0] * v[2679]) + v[248] *
			(QBAi[0][0] * v[2680] + QBAi[1][0] * v[2681] + QBAi[2][0] * v[2682]) + v[221] * v[2774] + v[230] * v[2776]
			+ v[224] * v[2777] + v[233] * v[2779] + v[227] * v[2780] + v[236] * v[2782];
		v[2624] = v[2624] + v[2782];
		v[2626] = v[2626] + v[260] * v[2782] + v[3621] * v[443];
		v[2627] = v[2627] + v[258] * v[2782] + v[3621] * v[442];
		v[2628] = v[2628] + v[260] * v[2780] + v[3622] * v[443];
		v[2629] = v[2629] + v[258] * v[2780] + v[3622] * v[442];
		v[2614] = v[2614] + v[260] * v[2779] + v[3623] * v[443];
		v[2615] = v[2615] + v[258] * v[2779] + v[3623] * v[442];
		v[2616] = v[2616] + v[260] * v[2777] + v[3624] * v[443];
		v[2617] = v[2617] + v[258] * v[2777] + v[3624] * v[442];
		v[2785] = (v[1672] * v[2086] + v[1662] * v[2090] + v[1654] * v[2094])*v[247] + (v[1672] * v[2088] + v[1662] * v[2092]
			+ v[1654] * v[2096])*v[248] + v[1396] * v[2641] + v[1393] * v[2645] + v[1388] * v[2649];
		v[3645] = (*aA)*v[2785];
		v[2786] = v[1397] * v[2641] + v[1394] * v[2645] + v[1389] * v[2649] + v[248] * (v[3627] + v[3629] + v[3631]) + v[247] *
			(v[3628] + v[3630] + v[3632]);
		v[3646] = (*bA)*v[2786];
		v[2602] = v[2602] + v[260] * v[2776] + v[3625] * v[443];
		v[2603] = v[2603] + v[258] * v[2776] + v[3625] * v[442];
		v[2604] = v[2604] + v[260] * v[2774] + v[3626] * v[443];
		v[2605] = v[2605] + v[258] * v[2774] + v[3626] * v[442];
		v[2787] = v[2786] * v[3348] + v[2785] * v[3444];
		v[3647] = v[249] * (((*aA)*(v[1518] * v[2784] - v[1140] * v[2785]) + (*bA)*(v[1140] * v[2783] + v[1518] * v[2786])
			)*v[3465] + v[2787] * v[3752]);
		v[2789] = (v[1774] * v[2098] - v[1774] * v[2100] + v[1776] * v[2102] - v[1776] * v[2104] + v[1777] * v[2106]
			- v[1777] * v[2108] - v[1433] * v[2677] - v[1434] * v[2678] - v[1435] * v[2679] + v[1436] * v[2680] + v[1437] * v[2681]
			+ v[1438] * v[2682] - v[2500] * v[323] - v[2497] * v[324] + v[2500] * v[326] + v[2497] * v[327] - v[2532] * v[3363]
			+ v[2533] * v[3363] + v[325] * v[3604] - v[328] * v[3604] + v[3580] * v[3942] - v[2688] * v[426] + v[2688] * v[427]
			- v[2686] * v[429] + v[2686] * v[430] - v[2684] * v[432] + v[2684] * v[433] + (v[1672] * (-v[2086] + v[2088]) + v[1662] * (
				-v[2090] + v[2092]) + v[1654] * (-v[2094] + v[2096]))*v[442] + v[3627] * v[443] - v[3628] * v[443] + v[3629] * v[443]
			- v[3630] * v[443] + v[3631] * v[443] - v[3632] * v[443] + v[2649] * v[444] - v[2649] * v[445] + v[2645] * v[446]
			- v[2645] * v[447] + v[2641] * v[448] - v[2641] * v[449]) / 2e0;
		v[3693] = (-(v[1807] * v[2033]) - 2e0*v[1792] * v[2034] + v[1803] * v[2035] - 2e0*v[1798] * v[2036] + v[202] * v[2705]
			- 2e0*v[220] * v[2717] + v[219] * v[2721] - v[218] * v[2725]) / 2e0;
		v[3692] = (-(v[1793] * v[2033]) + 2e0*v[1808] * v[2034] + 2e0*v[1791] * v[2035] - v[1803] * v[2036] - v[218] * v[2706]
			+ 2e0*v[219] * v[2711] - v[220] * v[2721] - v[202] * v[2726]) / 2e0;
		v[3691] = (-2e0*v[1784] * v[2033] - 2e0*v[1804] * v[2034] + v[1793] * v[2035] - v[1807] * v[2036]
			- 2e0*v[218] * v[2698] + v[219] * v[2706] + v[202] * v[2722] - v[220] * v[2725]) / 2e0;
		v[2793] = QBAi[2][1] * v[2626] + QBAi[2][0] * v[2627] + v[1940] * v[2699] + v[2713] * v[3361] + v[2802] * v[389]
			+ v[387] * (v[3722] + v[2050] * v[3943]);
		v[2794] = (-2e0*v[1862] * v[2034] + v[1056] * v[2576] + v[202] * v[2793]) / 2e0;
		v[2797] = (v[1800] * v[2165] + v[2714] * v[374] + QBAi[1][1] * v[2626] * v[376] + QBAi[1][0] * v[2627] * v[376]
			+ v[2182] * v[385] + v[2807] * v[376] * v[386] + v[2694] * v[389] + v[3552] * v[3944]) / v[376];
		v[2798] = -2e0*v[1865] * v[2034] + v[1057] * v[2576] + v[202] * v[2797];
		v[2800] = QBAi[0][1] * v[2626] + QBAi[0][0] * v[2627] + v[2695] * v[2927] + v[2811] * v[374] + v[379] * (v[3715]
			+ v[2050] * v[3945]);
		v[2801] = -2e0*v[1867] * v[2034] + v[1058] * v[2576] + v[202] * v[2800];
		v[2803] = (v[1799] * v[2169] + v[2614] * v[3635] + v[2615] * v[3636] + v[3362] * v[3637] + v[2718] * v[375]
			+ v[2699] * v[380] + v[2190] * v[387] + v[3552] * v[3946]) / v[376];
		v[2804] = -2e0*v[1868] * v[2034] + v[1056] * v[2578] + v[202] * v[2803];
		v[2808] = QBAi[1][1] * v[2614] + QBAi[1][0] * v[2615] + v[1942] * v[2694] + v[2712] * v[3359] + v[2807] * v[380]
			+ v[385] * (v[3719] + v[2050] * v[3947]);
		v[2812] = QBAi[0][1] * v[2614] + QBAi[0][0] * v[2615] + v[2700] * v[2926] + v[2811] * v[375] + v[379] * (v[3714]
			+ v[2050] * v[3948]);
		v[2813] = -2e0*v[1873] * v[2034] + v[1058] * v[2578] + v[202] * v[2812];
		v[2814] = (v[1788] * v[2170] + v[2704] * v[3358] + v[2602] * v[3635] + v[2603] * v[3636] + v[3360] * v[3637]
			+ v[2713] * v[377] + v[2186] * v[387] + v[3552] * v[3949]) / v[376];
		v[2815] = -2e0*v[1874] * v[2034] + v[1056] * v[2582] + v[202] * v[2814];
		v[2817] = QBAi[1][1] * v[2602] + QBAi[1][0] * v[2603] + v[2712] * v[2925] + v[2807] * v[3358] + (v[2050] * v[3638]
			+ v[3718])*v[385];
		v[2818] = -2e0*v[1876] * v[2034] + v[1057] * v[2582] + v[202] * v[2817];
		v[2821] = QBAi[0][1] * v[2602] + QBAi[0][0] * v[2603] + v[1943] * v[2695] + v[1941] * v[2700] + v[2811] * v[377]
			+ v[379] * (v[3716] + v[2050] * v[3950]);
		v[2822] = (-2e0*v[1879] * v[2034] + v[1058] * v[2582] + v[202] * v[2821]) / 2e0;
		v[3688] = (-(v[1834] * v[2010]) - 2e0*v[1819] * v[2011] + v[1830] * v[2012] - 2e0*v[1825] * v[2013] + v[183] * v[2738]
			- 2e0*v[201] * v[2750] + v[200] * v[2754] - v[199] * v[2758]) / 2e0;
		v[3687] = (-(v[1820] * v[2010]) + 2e0*v[1835] * v[2011] + 2e0*v[1818] * v[2012] - v[1830] * v[2013] - v[199] * v[2739]
			+ 2e0*v[200] * v[2744] - v[201] * v[2754] - v[183] * v[2759]) / 2e0;
		v[3686] = (-2e0*v[1811] * v[2010] - 2e0*v[1831] * v[2011] + v[1820] * v[2012] - v[1834] * v[2013]
			- 2e0*v[199] * v[2731] + v[200] * v[2739] + v[183] * v[2755] - v[201] * v[2758]) / 2e0;
		v[2826] = QAAi[2][1] * v[2628] + QAAi[2][0] * v[2629] + v[1934] * v[2732] + v[2746] * v[3356] + v[2835] * v[363]
			+ v[361] * (v[3710] + v[2027] * v[3951]);
		v[2827] = (-2e0*v[1880] * v[2011] + v[1059] * v[2564] + v[183] * v[2826]) / 2e0;
		v[2830] = (v[1827] * v[2137] + v[2747] * v[348] + QAAi[1][1] * v[2628] * v[350] + QAAi[1][0] * v[2629] * v[350]
			+ v[2154] * v[359] + v[2840] * v[350] * v[360] + v[2727] * v[363] + v[3551] * v[3952]) / v[350];
		v[2831] = -2e0*v[1883] * v[2011] + v[1060] * v[2564] + v[183] * v[2830];
		v[2833] = QAAi[0][1] * v[2628] + QAAi[0][0] * v[2629] + v[2728] * v[2924] + v[2844] * v[348] + v[353] * (v[3703]
			+ v[2027] * v[3953]);
		v[2834] = -2e0*v[1885] * v[2011] + v[1061] * v[2564] + v[183] * v[2833];
		v[2836] = (v[1826] * v[2141] + v[2751] * v[349] + v[2732] * v[354] + v[2162] * v[361] + v[2616] * v[3641]
			+ v[2617] * v[3642] + v[3357] * v[3643] + v[3551] * v[3954]) / v[350];
		v[2837] = -2e0*v[1886] * v[2011] + v[1059] * v[2566] + v[183] * v[2836];
		v[2841] = QAAi[1][1] * v[2616] + QAAi[1][0] * v[2617] + v[1936] * v[2727] + v[2745] * v[3354] + v[2840] * v[354]
			+ v[359] * (v[3707] + v[2027] * v[3955]);
		v[2845] = QAAi[0][1] * v[2616] + QAAi[0][0] * v[2617] + v[2733] * v[2923] + v[2844] * v[349] + v[353] * (v[3702]
			+ v[2027] * v[3956]);
		v[2846] = -2e0*v[1891] * v[2011] + v[1061] * v[2566] + v[183] * v[2845];
		v[2847] = (v[1815] * v[2142] + v[2737] * v[3353] + v[2746] * v[351] + v[2158] * v[361] + v[2604] * v[3641]
			+ v[2605] * v[3642] + v[3355] * v[3643] + v[3551] * v[3957]) / v[350];
		v[2848] = -2e0*v[1892] * v[2011] + v[1059] * v[2570] + v[183] * v[2847];
		v[2850] = QAAi[1][1] * v[2604] + QAAi[1][0] * v[2605] + v[2745] * v[2922] + v[2840] * v[3353] + v[359] *
			(v[2027] * v[3644] + v[3706]);
		v[2851] = -2e0*v[1894] * v[2011] + v[1060] * v[2570] + v[183] * v[2850];
		v[2854] = QAAi[0][1] * v[2604] + QAAi[0][0] * v[2605] + v[1937] * v[2728] + v[1935] * v[2733] + v[2844] * v[351]
			+ v[353] * (v[3704] + v[2027] * v[3958]);
		v[2855] = (-2e0*v[1897] * v[2011] + v[1061] * v[2570] + v[183] * v[2854]) / 2e0;
		v[2857] = v[2787] * v[3760];
		v[2859] = -(v[1140] * (v[2787] * v[2982] + v[256] * ((*aA)*v[2784] + v[3646]) + v[1143] * (v[1280] * v[3647]
			+ v[2857] * v[3648]) + v[3645] * v[441])) + v[1518] * (-(v[2787] * v[2983]) + v[256] * ((*bA)*v[2783] - v[3645])
				+ v[1141] * (v[1277] * v[3647] + v[2857] * v[3649]) + v[3646] * v[441]);
		v[2878] = 8e0*v[2860] * (v[1961] * v[2861] + v[1067] * v[3650] + v[1066] * v[3651] + v[1065] * v[3652]) - 4e0*v[1301] *
			((v[1879] * v[1963]) / 2e0 + (v[1871] * v[1965]) / 2e0 + (v[1862] * v[1967]) / 2e0 + v[1876] * v[2004] + v[1873] * v[2005]
				+ v[1868] * v[2006] + v[1865] * v[2007] + v[1874] * v[2008] + v[1867] * v[2009] - v[1804] * v[2033] - v[1808] * v[2035]
				- v[1792] * v[2036] + v[1057] * v[2580] + v[1056] * v[2581] + v[1058] * v[2583] - v[220] * v[2705] - v[218] * v[2722]
				- v[219] * v[2726] - 4e0*v[2034] * v[2862] + dA[11] * v[3691] + dA[10] * v[3692] + dA[9] * v[3693] + 2e0*v[202] *
				(v[2698] + v[2182] * v[2701] + v[2179] * v[2702] + v[2173] * v[2704] + v[2188] * v[2707] + v[2192] * v[2709]
					+ v[2190] * v[2710] + v[2711] + v[2167] * v[2714] + v[2175] * v[2715] + v[2186] * v[2716] + v[2717] + v[2171] * v[2718]
					+ v[2178] * v[2719] + v[2184] * v[2723] + v[2085] * v[2795] + v[2083] * v[2796] + v[2081] * v[2799] + v[2080] * v[2805]
					+ v[2077] * v[2806] + v[2076] * v[2810] + v[2072] * v[2816] + v[2075] * v[2819] + v[2071] * v[2820] + v[2039] * v[2863]
					+ v[2042] * v[2864] + v[2044] * v[2865] + v[2165] * v[2866] + v[2169] * v[2867] + v[2170] * v[2868] + v[2694] * v[2872]
					+ v[2695] * v[2873] + v[2699] * v[2874] + v[2700] * v[2875] + v[2712] * v[2876] + v[2713] * v[2877] + v[2653] * v[3659]
					+ v[2657] * v[3660] + v[2661] * v[3661] - 2e0*v[2050] * v[3960] * v[3961]) + (v[2793] * v[621]) / 2e0 + v[2797] * v[624]
				+ v[2800] * v[625] + v[2803] * v[626] + (v[2808] * v[631]) / 2e0 + v[2812] * v[633] + v[2814] * v[634] + v[2817] * v[639] +
				(v[2821] * v[644]) / 2e0 + v[9992 + i1640]);
		v[3694] = (2e0*v[1871] * v[2034] - v[1057] * v[2578] - v[202] * v[2808]) / 2e0 + v[2878];
		v[3695] = (v[2801] + v[2815]) / 2e0;
		v[2880] = v[2798] + v[2804];
		v[2881] = v[2813] + v[2818];
		v[2900] = 8e0*v[2882] * (v[1954] * v[2883] + v[1074] * v[3662] + v[1073] * v[3663] + v[1072] * v[3664]) - 4e0*v[1290] *
			(v[10022 + i1640] + (v[1897] * v[1956]) / 2e0 + (v[1889] * v[1958]) / 2e0 + (v[1880] * v[1960]) / 2e0 + v[1894] * v[1998]
				+ v[1891] * v[1999] + v[1886] * v[2000] + v[1883] * v[2001] + v[1892] * v[2002] + v[1885] * v[2003] - v[1831] * v[2010]
				- v[1835] * v[2012] - v[1819] * v[2013] + v[1060] * v[2568] + v[1059] * v[2569] + v[1061] * v[2571] - v[201] * v[2738]
				- v[199] * v[2755] - v[200] * v[2759] - 4e0*v[2011] * v[2884] + dA[5] * v[3686] + dA[4] * v[3687] + dA[3] * v[3688]
				+ 2e0*v[183] * (v[2731] + v[2154] * v[2734] + v[2151] * v[2735] + v[2145] * v[2737] + v[2160] * v[2740]
					+ v[2164] * v[2742] + v[2162] * v[2743] + v[2744] + v[2139] * v[2747] + v[2147] * v[2748] + v[2158] * v[2749] + v[2750]
					+ v[2143] * v[2751] + v[2150] * v[2752] + v[2156] * v[2756] + v[2070] * v[2828] + v[2068] * v[2829] + v[2066] * v[2832]
					+ v[2065] * v[2838] + v[2062] * v[2839] + v[2061] * v[2843] + v[2057] * v[2849] + v[2060] * v[2852] + v[2056] * v[2853]
					+ v[2016] * v[2885] + v[2019] * v[2886] + v[2021] * v[2887] + v[2137] * v[2888] + v[2141] * v[2889] + v[2142] * v[2890]
					+ v[2727] * v[2894] + v[2728] * v[2895] + v[2732] * v[2896] + v[2733] * v[2897] + v[2745] * v[2898] + v[2746] * v[2899]
					+ v[2665] * v[3671] + v[2669] * v[3672] + v[2673] * v[3673] - 2e0*v[2027] * v[3963] * v[3964]) + (v[2826] * v[652]) / 2e0
				+ v[2830] * v[655] + v[2833] * v[656] + v[2836] * v[657] + (v[2841] * v[662]) / 2e0 + v[2845] * v[664] + v[2847] * v[665]
				+ v[2850] * v[670] + (v[2854] * v[675]) / 2e0);
		v[3689] = (2e0*v[1889] * v[2011] - v[1060] * v[2566] - v[183] * v[2841]) / 2e0 + v[2900];
		v[3690] = (v[2834] + v[2848]) / 2e0;
		v[2902] = v[2831] + v[2837];
		v[2903] = v[2846] + v[2851];
		v[10053] = 0e0;
		v[10054] = 0e0;
		v[10055] = 0e0;
		v[10056] = 2e0*v[2909];
		v[10057] = v[2910];
		v[10058] = v[2911];
		v[10059] = 0e0;
		v[10060] = 0e0;
		v[10061] = 0e0;
		v[10062] = 0e0;
		v[10063] = 0e0;
		v[10064] = 0e0;
		v[10065] = 0e0;
		v[10066] = 0e0;
		v[10067] = 0e0;
		v[10068] = 0e0;
		v[10069] = 0e0;
		v[10070] = 0e0;
		v[10071] = 0e0;
		v[10072] = 0e0;
		v[10073] = 0e0;
		v[10074] = 0e0;
		v[10075] = 0e0;
		v[10076] = 0e0;
		v[10077] = 0e0;
		v[10078] = 0e0;
		v[10079] = 0e0;
		v[10080] = 0e0;
		v[10081] = 0e0;
		v[10082] = 0e0;
		v[10083] = 0e0;
		v[10084] = 0e0;
		v[10085] = 0e0;
		v[10086] = v[2910];
		v[10087] = 2e0*v[2912];
		v[10088] = v[2913];
		v[10089] = 0e0;
		v[10090] = 0e0;
		v[10091] = 0e0;
		v[10092] = 0e0;
		v[10093] = 0e0;
		v[10094] = 0e0;
		v[10095] = 0e0;
		v[10096] = 0e0;
		v[10097] = 0e0;
		v[10098] = 0e0;
		v[10099] = 0e0;
		v[10100] = 0e0;
		v[10101] = 0e0;
		v[10102] = 0e0;
		v[10103] = 0e0;
		v[10104] = 0e0;
		v[10105] = 0e0;
		v[10106] = 0e0;
		v[10107] = 0e0;
		v[10108] = 0e0;
		v[10109] = 0e0;
		v[10110] = 0e0;
		v[10111] = 0e0;
		v[10112] = 0e0;
		v[10113] = 0e0;
		v[10114] = 0e0;
		v[10115] = 0e0;
		v[10116] = v[2911];
		v[10117] = v[2913];
		v[10118] = 2e0*v[2914];
		v[10119] = 0e0;
		v[10120] = 0e0;
		v[10121] = 0e0;
		v[10122] = 0e0;
		v[10123] = 0e0;
		v[10124] = 0e0;
		v[10125] = 0e0;
		v[10126] = 0e0;
		v[10127] = 0e0;
		v[10128] = 0e0;
		v[10129] = 0e0;
		v[10130] = 0e0;
		v[10131] = 0e0;
		v[10132] = 0e0;
		v[10133] = 0e0;
		v[10134] = 0e0;
		v[10135] = 0e0;
		v[10136] = 0e0;
		v[10137] = 0e0;
		v[10138] = 0e0;
		v[10139] = 0e0;
		v[10140] = 0e0;
		v[10141] = 0e0;
		v[10142] = 0e0;
		v[10143] = 0e0;
		v[10144] = 0e0;
		v[10145] = 0e0;
		v[10146] = 0e0;
		v[10147] = 0e0;
		v[10148] = 0e0;
		v[10149] = 0e0;
		v[10150] = 0e0;
		v[10151] = 0e0;
		v[10152] = 2e0*v[2915];
		v[10153] = v[2916];
		v[10154] = v[2917];
		v[10155] = 0e0;
		v[10156] = 0e0;
		v[10157] = 0e0;
		v[10158] = 0e0;
		v[10159] = 0e0;
		v[10160] = 0e0;
		v[10161] = 0e0;
		v[10162] = 0e0;
		v[10163] = 0e0;
		v[10164] = 0e0;
		v[10165] = 0e0;
		v[10166] = 0e0;
		v[10167] = 0e0;
		v[10168] = 0e0;
		v[10169] = 0e0;
		v[10170] = 0e0;
		v[10171] = 0e0;
		v[10172] = 0e0;
		v[10173] = 0e0;
		v[10174] = 0e0;
		v[10175] = 0e0;
		v[10176] = 0e0;
		v[10177] = 0e0;
		v[10178] = 0e0;
		v[10179] = 0e0;
		v[10180] = 0e0;
		v[10181] = 0e0;
		v[10182] = v[2916];
		v[10183] = 2e0*v[2918];
		v[10184] = v[2919];
		v[10185] = 0e0;
		v[10186] = 0e0;
		v[10187] = 0e0;
		v[10188] = 0e0;
		v[10189] = 0e0;
		v[10190] = 0e0;
		v[10191] = 0e0;
		v[10192] = 0e0;
		v[10193] = 0e0;
		v[10194] = 0e0;
		v[10195] = 0e0;
		v[10196] = 0e0;
		v[10197] = 0e0;
		v[10198] = 0e0;
		v[10199] = 0e0;
		v[10200] = 0e0;
		v[10201] = 0e0;
		v[10202] = 0e0;
		v[10203] = 0e0;
		v[10204] = 0e0;
		v[10205] = 0e0;
		v[10206] = 0e0;
		v[10207] = 0e0;
		v[10208] = 0e0;
		v[10209] = 0e0;
		v[10210] = 0e0;
		v[10211] = 0e0;
		v[10212] = v[2917];
		v[10213] = v[2919];
		v[10214] = 2e0*v[2920];
		v[10215] = 0e0;
		v[10216] = 0e0;
		v[10217] = 0e0;
		v[10218] = 0e0;
		v[10219] = 0e0;
		v[10220] = 0e0;
		v[10221] = 0e0;
		v[10222] = 0e0;
		v[10223] = 0e0;
		v[10224] = 0e0;
		v[10225] = 0e0;
		v[10226] = 0e0;
		v[10227] = 0e0;
		v[10228] = 0e0;
		v[10229] = 0e0;
		v[10230] = 0e0;
		v[10231] = 0e0;
		v[10232] = 0e0;
		v[10233] = v[2601];
		v[10234] = v[2613];
		v[10235] = v[2625];
		v[10236] = v[10052 + i1640] + v[1912] * v[2011] + (v[1069] * v[2501] + v[1070] * v[2502] + v[1071] * v[2563]) / 2e0
			+ v[2831] - v[2837] + v[1085] * v[2903] + 2e0*(v[1100] * v[2491] + v[1096] * v[2499] + v[2494] * v[3406])
			+ v[183] * v[3688] + 2e0*dA[3] * (-v[2827] + v[3689]) + dA[5] * v[3690];
		v[10237] = v[10082 + i1640] - v[1913] * v[2011] + (v[1069] * v[2498] + v[1071] * v[2499] + v[1070] * v[2562]) / 2e0
			- v[2834] + v[2848] + 2e0*dA[4] * (-v[2827] - v[2855] + v[2900]) + (dA[5] * v[2902]) / 2e0 + (dA[3] * v[2903]) / 2e0 + 2e0*
			(v[1100] * v[2488] + v[1095] * v[2502] + v[2492] * v[3409]) + v[183] * v[3687];
		v[10238] = v[10112 + i1640] + v[1914] * v[2011] + (v[1070] * v[2488] + v[1071] * v[2491] + v[1069] * v[2561]) / 2e0
			+ v[2846] - v[2851] + v[1085] * v[2902] + 2e0*(v[1096] * v[2498] + v[1095] * v[2501] + v[2496] * v[3416])
			+ v[183] * v[3686] + 2e0*dA[5] * (-v[2855] + v[3689]) + dA[3] * v[3690];
		v[10239] = v[2600];
		v[10240] = v[2612];
		v[10241] = v[2624];
		v[10242] = v[10142 + i1640] + v[1898] * v[2034] + (v[1062] * v[2513] + v[1063] * v[2514] + v[1064] * v[2575]) / 2e0
			+ v[2798] - v[2804] + v[1079] * v[2881] + 2e0*(v[1094] * v[2506] + v[1090] * v[2512] + v[2508] * v[3400])
			+ v[202] * v[3693] + 2e0*dA[9] * (-v[2794] + v[3694]) + dA[11] * v[3695];
		v[10243] = v[10172 + i1640] - v[1899] * v[2034] + (v[1062] * v[2511] + v[1064] * v[2512] + v[1063] * v[2574]) / 2e0
			- v[2801] + v[2815] + 2e0*dA[10] * (-v[2794] - v[2822] + v[2878]) + (dA[11] * v[2880]) / 2e0 + (dA[9] * v[2881]) / 2e0
			+ 2e0*(v[1094] * v[2504] + v[1089] * v[2514] + v[2507] * v[3401]) + v[202] * v[3692];
		v[10244] = v[10202 + i1640] + v[1900] * v[2034] + (v[1063] * v[2504] + v[1064] * v[2506] + v[1062] * v[2573]) / 2e0
			+ v[2813] - v[2818] + v[1079] * v[2880] + 2e0*(v[1090] * v[2511] + v[1089] * v[2513] + v[2510] * v[3402])
			+ v[202] * v[3691] + 2e0*dA[11] * (-v[2822] + v[3694]) + dA[9] * v[3695];
		v[10245] = v[2599];
		v[10246] = v[2611];
		v[10247] = v[2623];
		v[10248] = v[2598];
		v[10249] = v[2610];
		v[10250] = v[2622];
		v[10251] = v[2597];
		v[10252] = v[2609];
		v[10253] = v[2621];
		v[10254] = v[2596];
		v[10255] = v[2608];
		v[10256] = v[2620];
		v[10257] = v[2595];
		v[10258] = v[2607];
		v[10259] = v[2619];
		v[10260] = v[2594];
		v[10261] = v[2606];
		v[10262] = v[2618];
		v[2904] = (-(i3559*v[1774]) - i3561 * v[1776] - i3563 * v[1777] + v[2693] - v[2688] * v[273] - v[2686] * v[274]
			- v[2684] * v[275] - v[2500] * v[332] - v[2497] * v[333] - v[2535] * v[3363] + v[3179] * v[3580] + v[334] * v[3604])
			/ 2e0;
		v[2905] = i3559 * v[1651] + i3561 * v[1656] + i3563 * v[1669] + v[1670] * v[2115] + v[1658] * v[2123] + v[1652] * v[2131]
			+ v[2638] * v[273] + v[2642] * v[274] + v[2646] * v[275] + cp[3] * v[2761] - 2e0*v[2768] - v[2772] + v[2904] + 2e0*cp[2] *
			(v[2689] - v[2760] + v[2904]) + v[2906] - v[2639] * v[3674] - v[2643] * v[3675] - v[2647] * v[3676];
		v[2907] = (-(i3560*v[1774]) - i3562 * v[1776] - i3564 * v[1777] + v[2693] - v[2688] * v[276] - v[2686] * v[277]
			- v[2684] * v[278] - v[2500] * v[335] - v[2497] * v[336] - v[2536] * v[3363] + v[3177] * v[3580] + v[337] * v[3604])
			/ 2e0;
		v[2908] = i3560 * v[1652] + i3562 * v[1658] + i3564 * v[1670] - v[1669] * v[2117] - v[1656] * v[2125] - v[1651] * v[2133]
			+ v[2639] * v[276] + cp[2] * v[2761] - v[2768] + v[2643] * v[277] - 2e0*v[2772] + v[2647] * v[278] + v[2906] + v[2907]
			+ 2e0*cp[3] * (-v[2689] + v[2907]) + v[2638] * v[3677] + v[2642] * v[3678] + v[2646] * v[3679];
		Rc[i1640 - 1] += v[6088 + i1640] + (*a4)*v[6118 + i1640];
		for (i1946 = 1; i1946 <= 30; i1946++) {
			Kc[i1640 - 1][i1946 - 1] += v[10232 + i1946] + (*a4)*v[10262 + i1946] + v[2908] * v[4610 + i1946] + v[2905] * v[4640
				+ i1946] + v[2859] * v[4670 + i1946] + v[2789] * v[4700 + i1946];
		};/* end for */
	};/* end for */
	v[2933] = v[1056] * v[1154];
	v[2934] = v[1057] * v[1154];
	v[2935] = v[1058] * v[1154];
	v[2936] = v[1059] * v[1154];
	v[2937] = v[1060] * v[1154];
	v[2938] = v[1061] * v[1154];
	v[2939] = v[1056] * v[1153];
	v[2940] = v[1057] * v[1153];
	v[2941] = v[1058] * v[1153];
	v[2942] = v[1059] * v[1153];
	v[2943] = v[1060] * v[1153];
	v[2944] = v[1061] * v[1153];
	v[2945] = -(v[1152] * v[285]) - v[1153] * v[286] - v[1154] * v[287];
	v[2946] = -(v[1152] * v[282]) - v[1153] * v[283] - v[1154] * v[284];
	v[2949] = -(v[1152] * v[270]) - v[1153] * v[271] - v[1154] * v[272];
	v[2950] = v[1154] * v[1389] + v[1153] * v[1394] + v[1152] * v[1397];
	v[2951] = v[1154] * v[1388] + v[1153] * v[1393] + v[1152] * v[1396];
	v[3976] = (*bA)*v[1518] * v[2950] - (*aA)*v[1140] * v[2951];
	v[2952] = v[1056] * v[1152];
	v[2953] = v[1057] * v[1152];
	v[2954] = v[1058] * v[1152];
	v[3310] = (v[2933] * v[621]) / 2e0 + v[2934] * v[624] + v[2935] * v[625] + v[2939] * v[626] + (v[2940] * v[631]) / 2e0
		+ v[2941] * v[633] + v[2952] * v[634] + v[2953] * v[639] + (v[2954] * v[644]) / 2e0;
	v[2955] = v[1059] * v[1152];
	v[2956] = v[1060] * v[1152];
	v[2957] = v[1061] * v[1152];
	v[3318] = (v[2936] * v[652]) / 2e0 + v[2937] * v[655] + v[2938] * v[656] + v[2942] * v[657] + (v[2943] * v[662]) / 2e0
		+ v[2944] * v[664] + v[2955] * v[665] + v[2956] * v[670] + (v[2957] * v[675]) / 2e0;
	v[2958] = -(v[1152] * v[279]) - v[1153] * v[280] - v[1154] * v[281] + v[2945];
	v[2959] = v[2946] + v[2949] - v[2958];
	v[2960] = v[2950] * v[3348] + v[2951] * v[3444];
	v[3305] = v[2960] * v[2983] + v[2951] * v[3347];
	v[3303] = v[2960] * v[2982] + v[2950] * v[3449];
	v[2961] = (-(v[1152] * v[426]) + v[1152] * v[427] - v[1153] * v[429] + v[1153] * v[430] - v[1154] * v[432]
		+ v[1154] * v[433]) / 2e0;
	v[2963] = v[202] * v[2934];
	v[2964] = v[202] * v[2935];
	v[2965] = v[202] * v[2939];
	v[2966] = (v[202] * v[2940]) / 2e0;
	v[2967] = v[202] * v[2941];
	v[2968] = v[202] * v[2952];
	v[2969] = v[202] * v[2953];
	v[2970] = (v[202] * v[2954]) / 2e0;
	v[3334] = -v[2966] - v[2970] - 4e0*v[1301] * v[3310];
	v[3332] = -(v[202] * v[2933]) / 2e0 + v[2966] + v[3334];
	v[3329] = -v[2966] + v[2970] + v[3332];
	v[2973] = v[183] * v[2937];
	v[2974] = v[183] * v[2938];
	v[2975] = v[183] * v[2942];
	v[2976] = (v[183] * v[2943]) / 2e0;
	v[2977] = v[183] * v[2944];
	v[2978] = v[183] * v[2955];
	v[2979] = v[183] * v[2956];
	v[2980] = (v[183] * v[2957]) / 2e0;
	v[3328] = -v[2976] - v[2980] - 4e0*v[1290] * v[3318];
	v[3326] = -(v[183] * v[2936]) / 2e0 + v[2976] + v[3328];
	v[3323] = -v[2976] + v[2980] + v[3326];
	v[2984] = v[1518] * v[3303] - v[1140] * v[3305];
	v[3307] = v[2945] + (-(v[1152] * v[273]) - v[1153] * v[274] - v[1154] * v[275] + v[2949]) / 2e0 - v[2958];
	v[2986] = -v[2945] + v[2946] + cp[3] * v[2959] + v[3307] + 2e0*cp[2] * v[3307];
	v[2987] = (-(v[1152] * v[276]) - v[1153] * v[277] - v[1154] * v[278] + v[2949]) / 2e0;
	v[3315] = -v[2945] + v[2987];
	v[2988] = -v[2949] + v[2959] + cp[2] * v[2959] + v[2987] + 2e0*cp[3] * v[3315];
	v[3331] = (v[2964] + v[2968]) / 2e0;
	v[2990] = v[2963] + v[2965];
	v[3333] = v[2990] / 2e0;
	v[2991] = v[2967] + v[2969];
	v[3330] = v[2991] / 2e0;
	v[3325] = (v[2974] + v[2978]) / 2e0;
	v[2993] = v[2973] + v[2975];
	v[3327] = v[2993] / 2e0;
	v[2994] = v[2977] + v[2979];
	v[10297] = v[3746];
	v[10298] = v[3748];
	v[10299] = v[3750];
	v[10300] = v[2973] - v[2975] + v[1085] * v[2994] + 2e0*dA[3] * v[3323] + dA[5] * v[3325];
	v[10301] = -v[2974] + v[2978] + (dA[5] * v[2993]) / 2e0 + (dA[3] * v[2994]) / 2e0 + 2e0*dA[4] * v[3326];
	v[10302] = v[2977] - v[2979] + v[1085] * v[2993] + dA[3] * v[3325] + 2e0*dA[5] * v[3328];
	v[10303] = v[3747];
	v[10304] = v[3749];
	v[10305] = v[3751];
	v[10306] = v[2963] - v[2965] + v[1079] * v[2991] + 2e0*dA[9] * v[3329] + dA[11] * v[3331];
	v[10307] = -v[2964] + v[2968] + (dA[11] * v[2990]) / 2e0 + (dA[9] * v[2991]) / 2e0 + 2e0*dA[10] * v[3332];
	v[10308] = v[2967] - v[2969] + v[1079] * v[2990] + dA[9] * v[3331] + 2e0*dA[11] * v[3334];
	v[10309] = -(v[1152] * v[301]);
	v[10310] = -(v[1153] * v[301]);
	v[10311] = -(v[1154] * v[301]);
	v[10312] = -(v[1152] * v[3351]);
	v[10313] = -(v[1153] * v[3351]);
	v[10314] = -(v[1154] * v[3351]);
	v[10315] = -(v[1152] * v[3352]);
	v[10316] = -(v[1153] * v[3352]);
	v[10317] = -(v[1154] * v[3352]);
	v[10318] = -(v[1152] * v[310]);
	v[10319] = -(v[1153] * v[310]);
	v[10320] = -(v[1154] * v[310]);
	v[10321] = -(v[1152] * v[311]);
	v[10322] = -(v[1153] * v[311]);
	v[10323] = -(v[1154] * v[311]);
	v[10324] = -(v[1152] * v[313]);
	v[10325] = -(v[1153] * v[313]);
	v[10326] = -(v[1154] * v[313]);
	v[3324] = v[2994] / 2e0;
	for (i2931 = 1; i2931 <= 30; i2931++) {
		i3728 = (i2931 == 11 ? 1 : 0);
		i3727 = (i2931 == 10 ? 1 : 0);
		i3726 = (i2931 == 12 ? 1 : 0);
		i3725 = (i2931 == 5 ? 1 : 0);
		i3724 = (i2931 == 4 ? 1 : 0);
		i3723 = (i2931 == 6 ? 1 : 0);
		v[3076] = v[4700 + i2931];
		v[3184] = -(v[1152] * v[3076]) / 2e0;
		v[3171] = -(v[1153] * v[3076]) / 2e0;
		v[3168] = -(v[1154] * v[3076]) / 2e0;
		v[3027] = v[4670 + i2931];
		v[3759] = v[2960] * v[3027];
		v[3014] = v[4640 + i2931];
		v[3011] = v[4610 + i2931];
		v[3000] = v[6152 + i2931];
		v[3002] = v[6182 + i2931];
		v[3004] = v[6212 + i2931];
		v[3006] = v[6242 + i2931];
		v[3008] = v[6272 + i2931];
		v[3010] = v[6302 + i2931];
		v[3013] = v[3011] * v[3012];
		v[3016] = v[3014] * v[3015];
		v[3018] = v[6332 + i2931];
		v[3051] = -4e0*v[1290] * v[3018];
		v[3019] = v[5004 + i2931];
		v[3020] = v[5124 + i2931];
		v[3021] = v[5244 + i2931];
		v[3023] = v[6452 + i2931];
		v[3062] = -4e0*v[1301] * v[3023];
		v[3024] = v[5274 + i2931];
		v[3025] = v[5394 + i2931];
		v[3026] = v[5514 + i2931];
		v[3028] = v[3027] * v[441];
		v[3029] = cp[2] * v[3011] + cp[3] * v[3014];
		v[3030] = -i3723 + v[3000];
		v[3032] = i3723 + v[3000];
		v[3033] = -i3724 + v[3002];
		v[3035] = i3724 + v[3002];
		v[3036] = i3725 + v[3004];
		v[3038] = -i3725 + v[3004];
		v[3039] = -i3726 + v[3006];
		v[3041] = i3726 + v[3006];
		v[3042] = -i3727 + v[3008];
		v[3044] = i3727 + v[3008];
		v[3045] = i3728 + v[3010];
		v[3047] = -i3728 + v[3010];
		v[3049] = (v[183] * v[3019]) / 2e0 + v[3018] * v[3048];
		v[3050] = v[183] * v[3030] + v[3051] * v[670];
		v[3052] = v[183] * v[3036] + v[3051] * v[665];
		v[3053] = v[183] * v[3032] + v[3051] * v[664];
		v[3054] = (v[183] * v[3020] + v[3051] * v[662]) / 2e0;
		v[3055] = v[183] * v[3033] + v[3051] * v[657];
		v[3056] = v[183] * v[3038] + v[3051] * v[656];
		v[3057] = v[183] * v[3035] + v[3051] * v[655];
		v[3058] = (v[183] * v[3021] + v[3051] * v[652]) / 2e0;
		v[3060] = (v[202] * v[3024]) / 2e0 + v[3023] * v[3059];
		v[3061] = v[202] * v[3039] + v[3062] * v[639];
		v[3063] = v[202] * v[3045] + v[3062] * v[634];
		v[3064] = v[202] * v[3041] + v[3062] * v[633];
		v[3065] = (v[202] * v[3025] + v[3062] * v[631]) / 2e0;
		v[3066] = v[202] * v[3042] + v[3062] * v[626];
		v[3067] = v[202] * v[3047] + v[3062] * v[625];
		v[3068] = v[202] * v[3044] + v[3062] * v[624];
		v[3069] = (v[202] * v[3026] + v[3062] * v[621]) / 2e0;
		v[3070] = v[1334] * v[3027] + v[3028] * v[3444];
		v[3071] = v[1337] * v[3027] + v[3028] * v[3348];
		v[3072] = -v[3011] - v[3016] - v[3029];
		v[3073] = (v[3013] + v[3016] + 2e0*v[3029]) / 2e0;
		v[3074] = v[3011] + v[3014] + v[3029];
		v[3075] = -2e0*cp[3] * v[3011] + 2e0*cp[2] * v[3014] + v[3072];
		v[3077] = v[10390 + i2931] - (v[276] * v[3013]) / 2e0 - (v[273] * v[3016]) / 2e0 + v[1061] * v[3049] + v[1060] * v[3050]
			+ v[1059] * v[3052] + v[1058] * v[3060] + v[1057] * v[3061] + v[1056] * v[3063] + v[1396] * v[3070] + v[1397] * v[3071]
			- v[279] * v[3072] - v[270] * v[3073] - v[282] * v[3074] - v[285] * v[3075] + v[3076] * v[428];
		v[3729] = (*cn)*v[3077];
		v[3151] = v[3729] * v[414];
		v[3089] = v[1088] * v[3729];
		v[3078] = v[10360 + i2931] - (v[277] * v[3013]) / 2e0 - (v[274] * v[3016]) / 2e0 + v[1061] * v[3053] + v[1060] * v[3054]
			+ v[1059] * v[3055] + v[1058] * v[3064] + v[1057] * v[3065] + v[1056] * v[3066] + v[1393] * v[3070] + v[1394] * v[3071]
			- v[280] * v[3072] - v[271] * v[3073] - v[283] * v[3074] - v[286] * v[3075] + v[3076] * v[431];
		v[3735] = v[2493] * v[3078] + v[3089];
		v[3731] = v[3077] * v[414] + v[3078] * v[415];
		v[3730] = (*cn)*v[3078];
		v[3146] = v[3730] * v[415];
		v[3086] = v[1110] * v[3730];
		v[3733] = v[2493] * v[3077] + v[3086];
		v[3079] = v[10330 + i2931] - (v[278] * v[3013]) / 2e0 - (v[275] * v[3016]) / 2e0 + v[1061] * v[3056] + v[1060] * v[3057]
			+ v[1059] * v[3058] + v[1058] * v[3067] + v[1057] * v[3068] + v[1056] * v[3069] + v[1388] * v[3070] + v[1389] * v[3071]
			- v[281] * v[3072] - v[272] * v[3073] - v[284] * v[3074] - v[287] * v[3075] + v[3076] * v[434];
		v[3738] = (*cn)*v[3079];
		v[3734] = v[3079] * v[414];
		v[3732] = v[3079] * v[415];
		v[3335] = v[3079] * v[3364];
		v[3783] = v[3086] + v[3335] * v[415];
		v[3782] = v[3089] + v[3335] * v[414];
		v[3081] = v[1138] * v[3738];
		v[3080] = v[3081] * v[362] + v[2487] * v[3731];
		v[3082] = v[3081] * v[352] + v[2489] * v[3731];
		v[3083] = v[2487] * v[3732] + v[362] * v[3733];
		v[3084] = v[2489] * v[3734] + v[352] * v[3735];
		v[3085] = v[3081] * v[372] + v[2495] * v[3731];
		v[3772] = v[1082] * v[3085];
		v[3087] = v[2495] * v[3732] + v[372] * v[3733];
		v[3088] = v[2489] * v[3732] + v[352] * v[3733];
		v[3090] = v[2495] * v[3734] + v[372] * v[3735];
		v[3091] = v[2487] * v[3734] + v[362] * v[3735];
		v[3092] = v[2503] * v[3731] + v[3081] * v[388];
		v[3093] = v[2505] * v[3731] + v[3081] * v[378];
		v[3094] = v[2503] * v[3732] + v[3733] * v[388];
		v[3095] = v[2505] * v[3734] + v[3735] * v[378];
		v[3096] = v[2509] * v[3731] + v[3081] * v[398];
		v[3765] = v[1076] * v[3096];
		v[3097] = v[2509] * v[3732] + v[3733] * v[398];
		v[3098] = v[2505] * v[3732] + v[3733] * v[378];
		v[3099] = v[2509] * v[3734] + v[3735] * v[398];
		v[3100] = v[2503] * v[3734] + v[3735] * v[388];
		v[3101] = v[3146] + v[3151];
		v[3739] = -(v[3101] * v[416]);
		v[3784] = v[3081] - v[3739];
		v[3102] = (*cn)*(v[3078] * v[323] + v[3077] * v[324]);
		v[3103] = (*cn)*(v[3078] * v[326] + v[3077] * v[327]);
		v[3104] = (*cn)*(v[3078] * v[329] + v[3077] * v[330]);
		v[3105] = (*cn)*(v[3078] * v[332] + v[3077] * v[333]);
		v[3106] = (*cn)*(v[3078] * v[335] + v[3077] * v[336]);
		v[3107] = (*cn)*(v[3078] * v[338] + v[3077] * v[339]);
		v[3108] = (*cn)*(v[3078] * v[341] + v[3077] * v[342]);
		v[3109] = (*cn)*(v[3078] * v[344] + v[3077] * v[345]);
		v[3736] = v[247] * v[3102] + v[248] * v[3103] - v[301] * v[3104] - v[310] * v[3107] - v[3108] * v[311] - v[3109] * v[313]
			- v[3105] * v[3351] - v[3106] * v[3352];
		v[3110] = (*cn)*(v[2650] * v[3077] + v[2651] * v[3078] + v[2652] * v[3079]);
		v[3258] = v[1943] * v[3110];
		v[3244] = v[2927] * v[3110];
		v[3111] = (*cn)*(v[2654] * v[3077] + v[2655] * v[3078] + v[2656] * v[3079]);
		v[3251] = v[2926] * v[3111];
		v[3754] = v[1942] * v[3110] + v[3251];
		v[3753] = v[1940] * v[3111] + v[3244];
		v[3112] = (*cn)*(v[2658] * v[3077] + v[2659] * v[3078] + v[2660] * v[3079]);
		v[3256] = v[2925] * v[3112];
		v[3755] = v[1941] * v[3111] + v[3256];
		v[3253] = v[3112] * v[3359];
		v[3247] = v[3112] * v[3361];
		v[3113] = (*cn)*(v[2662] * v[3077] + v[2663] * v[3078] + v[2664] * v[3079]);
		v[3276] = v[1937] * v[3113];
		v[3262] = v[2924] * v[3113];
		v[3114] = (*cn)*(v[2666] * v[3077] + v[2667] * v[3078] + v[2668] * v[3079]);
		v[3269] = v[2923] * v[3114];
		v[3757] = v[1936] * v[3113] + v[3269];
		v[3756] = v[1934] * v[3114] + v[3262];
		v[3115] = (*cn)*(v[2670] * v[3077] + v[2671] * v[3078] + v[2672] * v[3079]);
		v[3274] = v[2922] * v[3115];
		v[10871] = v[1102] * v[3730] + v[247] * v[3782];
		v[10872] = v[1102] * v[3729] + v[247] * v[3783];
		v[10873] = v[247] * v[3784];
		v[10874] = v[3274] + v[3114] * v[3354] + v[3113] * v[3356];
		v[10875] = v[1934] * v[3113] + v[1935] * v[3115] + v[3269];
		v[10876] = v[1936] * v[3114] + v[1937] * v[3115] + v[3262];
		v[10877] = v[1103] * v[3730] + v[248] * v[3782];
		v[10878] = v[1103] * v[3729] + v[248] * v[3783];
		v[10879] = v[248] * v[3784];
		v[10880] = v[3256] + v[3111] * v[3359] + v[3110] * v[3361];
		v[10881] = v[1940] * v[3110] + v[1941] * v[3112] + v[3251];
		v[10882] = v[1942] * v[3111] + v[1943] * v[3112] + v[3244];
		v[10883] = v[1104] * v[3730] - v[301] * v[3782];
		v[10884] = v[1104] * v[3729] - v[301] * v[3783];
		v[10885] = -(v[301] * v[3784]);
		v[10886] = v[1105] * v[3730] - v[3351] * v[3782];
		v[10887] = v[1105] * v[3729] - v[3351] * v[3783];
		v[10888] = -(v[3351] * v[3784]);
		v[10889] = v[1106] * v[3730] - v[3352] * v[3782];
		v[10890] = v[1106] * v[3729] - v[3352] * v[3783];
		v[10891] = -(v[3352] * v[3784]);
		v[10892] = v[1107] * v[3730] - v[310] * v[3782];
		v[10893] = v[1107] * v[3729] - v[310] * v[3783];
		v[10894] = -(v[310] * v[3784]);
		v[10895] = v[1108] * v[3730] - v[311] * v[3782];
		v[10896] = v[1108] * v[3729] - v[311] * v[3783];
		v[10897] = -(v[311] * v[3784]);
		v[10898] = v[1109] * v[3730] - v[313] * v[3782];
		v[10899] = v[1109] * v[3729] - v[313] * v[3783];
		v[10900] = -(v[313] * v[3784]);
		v[3758] = v[1935] * v[3114] + v[3274];
		v[3271] = v[3115] * v[3354];
		v[3265] = v[3115] * v[3356];
		v[3116] = v[1086] * v[3080] + v[1087] * v[3082];
		v[3117] = v[3083] + v[3084];
		v[3118] = v[3084] + v[3085];
		v[3119] = v[3083] + v[3085];
		v[3120] = v[1075] * (v[3116] + v[3772]);
		v[3121] = v[1082] * v[3087] + v[1087] * v[3088];
		v[3773] = v[1086] * v[3083] + v[3121];
		v[3122] = v[1075] * v[3773];
		v[3123] = v[1082] * v[3090] + v[1086] * v[3091];
		v[3774] = v[1087] * v[3084] + v[3123];
		v[3124] = v[1084] * v[3080] + v[3082] - v[3090] + v[1083] * v[3091] + v[1085] * v[3118] - v[3121] / 2e0;
		v[3125] = v[1085] * v[3087] - v[3088] + v[1083] * v[3090] + v[3091] - v[3116] / 2e0 + v[1084] * v[3117];
		v[3126] = v[1075] * v[3774];
		v[3127] = -v[3080] + v[1084] * v[3082] + v[3087] + v[1085] * v[3088] + v[1083] * v[3119] - v[3123] / 2e0;
		v[3128] = v[1080] * v[3092] + v[1081] * v[3093];
		v[3129] = v[3094] + v[3095];
		v[3130] = v[3095] + v[3096];
		v[3131] = v[3094] + v[3096];
		v[3132] = v[1068] * (v[3128] + v[3765]);
		v[3133] = v[1076] * v[3097] + v[1081] * v[3098];
		v[3766] = v[1080] * v[3094] + v[3133];
		v[3134] = v[1068] * v[3766];
		v[3135] = v[1076] * v[3099] + v[1080] * v[3100];
		v[3767] = v[1081] * v[3095] + v[3135];
		v[3136] = v[1078] * v[3092] + v[3093] - v[3099] + v[1077] * v[3100] + v[1079] * v[3130] - v[3133] / 2e0;
		v[3137] = v[1079] * v[3097] - v[3098] + v[1077] * v[3099] + v[3100] - v[3128] / 2e0 + v[1078] * v[3129];
		v[3138] = v[1068] * v[3767];
		v[3139] = -v[3092] + v[1078] * v[3093] + v[3097] + v[1079] * v[3098] + v[1077] * v[3131] - v[3135] / 2e0;
		v[3144] = (*cn)*(v[3077] * v[3140] + v[3078] * v[3141] + v[3079] * v[3142]) + 2e0*v[3143] * v[3335]
			+ v[3101] * v[3600];
		v[3150] = (*cn)*(v[3077] * v[3145] + v[3078] * v[3148] + v[3079] * v[3149]) + 2e0*v[3146] * v[3410]
			+ v[3736] * v[414];
		v[3156] = (*cn)*(v[3077] * v[3153] + v[3078] * v[3154] + v[3079] * v[3155]) + 2e0*v[3151] * v[3408]
			+ v[3736] * v[415];
		v[3737] = ((v[3156] * v[399] + v[3150] * v[400] + v[3144] * v[401])*v[412]) / v[1773];
		v[3158] = v[3737] * v[401] + v[3144] * v[413];
		v[3159] = v[3737] * v[400] + v[3150] * v[413];
		v[3160] = v[3737] * v[399] + v[3156] * v[413];
		v[3161] = v[1152] * v[3049] + v[1153] * v[3053] + v[1154] * v[3056] + v[183] * v[3127] + v[3120] * v[656]
			+ v[3122] * v[664] + (v[3126] * v[675]) / 2e0;
		v[3162] = v[1152] * v[3050] + v[1153] * v[3054] + v[1154] * v[3057] + v[183] * v[3124] + v[3120] * v[655] +
			(v[3122] * v[662]) / 2e0 + v[3126] * v[670];
		v[3163] = v[1152] * v[3052] + v[1153] * v[3055] + v[1154] * v[3058] + v[183] * v[3125] + (v[3120] * v[652]) / 2e0
			+ v[3122] * v[657] + v[3126] * v[665];
		v[3164] = v[1152] * v[3060] + v[1153] * v[3064] + v[1154] * v[3067] + v[202] * v[3139] + v[3132] * v[625]
			+ v[3134] * v[633] + (v[3138] * v[644]) / 2e0;
		v[3165] = v[1152] * v[3061] + v[1153] * v[3065] + v[1154] * v[3068] + v[202] * v[3136] + v[3132] * v[624] +
			(v[3134] * v[631]) / 2e0 + v[3138] * v[639];
		v[3166] = v[1152] * v[3063] + v[1153] * v[3066] + v[1154] * v[3069] + v[202] * v[3137] + (v[3132] * v[621]) / 2e0
			+ v[3134] * v[626] + v[3138] * v[634];
		v[3167] = v[247] * v[3158] + v[3168];
		v[3169] = v[248] * v[3158] - v[3168];
		v[3170] = v[247] * v[3159] + v[3171];
		v[3172] = v[248] * v[3159] - v[3171];
		v[3174] = v[10420 + i2931] - v[287] * v[3158] - v[286] * v[3159] - v[285] * v[3160] - v[3109] * v[3363] - v[3089] * v[344]
			- v[3086] * v[345] + v[3173] * v[3738] + v[346] * v[3739];
		v[3182] = v[10570 + i2931] - v[272] * v[3158] - v[271] * v[3159] - v[270] * v[3160] - v[3089] * v[329] - v[3086] * v[330]
			- v[3104] * v[3363] + v[3181] * v[3738] + v[331] * v[3739];
		v[3183] = v[247] * v[3160] + v[3184];
		v[3185] = v[248] * v[3160] - v[3184];
		v[3186] = v[2336] * v[3110];
		v[3187] = v[2335] * v[3110];
		v[3188] = v[2334] * v[3110];
		v[3189] = v[2331] * v[3111];
		v[3190] = v[3110] * v[385] + v[3111] * v[387];
		v[3191] = v[2329] * v[3111];
		v[3192] = -v[3186] + v[3189];
		v[3193] = v[3186] + v[3189];
		v[3194] = v[2330] * v[3111] + v[3190] * v[3740];
		v[3195] = v[2324] * v[3112];
		v[3196] = v[3110] * v[379] + v[3112] * v[387];
		v[3197] = v[3111] * v[379] + v[3112] * v[385];
		v[3198] = v[2326] * v[3112] + v[3196] * v[3741];
		v[3199] = v[3194] + v[3198];
		v[3200] = -v[3194] + v[3198];
		v[3201] = v[2325] * v[3112] + v[3197] * v[3742];
		v[3202] = v[3187] + v[3201];
		v[3203] = -v[3187] + v[3201];
		v[3204] = v[2321] * v[3113];
		v[3205] = v[2320] * v[3113];
		v[3206] = v[2319] * v[3113];
		v[3207] = v[2316] * v[3114];
		v[3208] = v[3113] * v[359] + v[3114] * v[361];
		v[3209] = v[2314] * v[3114];
		v[3210] = -v[3204] + v[3207];
		v[3211] = v[3204] + v[3207];
		v[3212] = v[2315] * v[3114] + v[3208] * v[3743];
		v[3213] = v[2309] * v[3115];
		v[3214] = v[3113] * v[353] + v[3115] * v[361];
		v[3215] = v[3114] * v[353] + v[3115] * v[359];
		v[3216] = v[2311] * v[3115] + v[3214] * v[3744];
		v[3217] = v[3212] + v[3216];
		v[3218] = -v[3212] + v[3216];
		v[3219] = v[2310] * v[3115] + v[3215] * v[3745];
		v[3220] = v[3205] + v[3219];
		v[3221] = -v[3205] + v[3219];
		v[3223] = v[10480 + i2931] - v[281] * v[3158] - v[280] * v[3159] - v[279] * v[3160] + v[3174] - v[3107] * v[3363]
			- v[3089] * v[338] - v[3086] * v[339] + v[3222] * v[3738] + v[340] * v[3739];
		v[3224] = v[10450 + i2931] - v[284] * v[3158] - v[283] * v[3159] - v[282] * v[3160] + v[3182] - v[3223]
			- v[3108] * v[3363] - v[3089] * v[341] - v[3086] * v[342] + v[3175] * v[3738] + v[343] * v[3739];
		v[3768] = -v[3182] + v[3224];
		v[3225] = v[260] * v[3183] + v[3071] * v[3746];
		v[3226] = v[258] * v[3183] + v[3070] * v[3746];
		v[3227] = v[260] * v[3185] + v[3071] * v[3747];
		v[3228] = v[258] * v[3185] + v[3070] * v[3747];
		v[3229] = v[260] * v[3170] + v[3071] * v[3748];
		v[3230] = v[258] * v[3170] + v[3070] * v[3748];
		v[3231] = v[260] * v[3172] + v[3071] * v[3749];
		v[3232] = v[258] * v[3172] + v[3070] * v[3749];
		v[3233] = v[260] * v[3167] + v[3071] * v[3750];
		v[3234] = v[258] * v[3167] + v[3070] * v[3750];
		v[3235] = v[247] * (QAAi[0][1] * v[3161] + QAAi[1][1] * v[3162] + QAAi[2][1] * v[3163]) + v[248] *
			(QBAi[0][1] * v[3164] + QBAi[1][1] * v[3165] + QBAi[2][1] * v[3166]) + v[228] * v[3167] + v[237] * v[3169]
			+ v[225] * v[3170] + v[234] * v[3172] + v[222] * v[3183] + v[231] * v[3185];
		v[3236] = v[247] * (QAAi[0][0] * v[3161] + QAAi[1][0] * v[3162] + QAAi[2][0] * v[3163]) + v[248] *
			(QBAi[0][0] * v[3164] + QBAi[1][0] * v[3165] + QBAi[2][0] * v[3166]) + v[227] * v[3167] + v[236] * v[3169]
			+ v[224] * v[3170] + v[233] * v[3172] + v[221] * v[3183] + v[230] * v[3185];
		v[3237] = v[260] * v[3169] + v[3071] * v[3751];
		v[3238] = v[258] * v[3169] + v[3070] * v[3751];
		v[3761] = v[249] * (v[3752] * v[3759] + v[3465] * (v[3235] * v[3348] + v[3236] * v[3444] + v[3027] * v[3976]));
		v[3242] = (v[10600 + i2931] - v[10630 + i2931] - v[1433] * v[3161] - v[1434] * v[3162] - v[1435] * v[3163]
			+ v[1436] * v[3164] + v[1437] * v[3165] + v[1438] * v[3166] - v[3089] * v[323] - v[3086] * v[324] + v[3089] * v[326]
			+ v[3086] * v[327] - v[3102] * v[3363] + v[3103] * v[3363] - v[3240] * v[3738] + v[3241] * v[3738] + v[325] * v[3739]
			- v[328] * v[3739] - v[3070] * v[3978] - v[3071] * v[3979] + v[3070] * v[3981] + v[3071] * v[3982] - v[3160] * v[426]
			+ v[3160] * v[427] - v[3159] * v[429] + v[3159] * v[430] - v[3158] * v[432] + v[3158] * v[433]) / 2e0;
		v[3243] = QBAi[2][1] * v[3237] + QBAi[2][0] * v[3238] + (v[3247] + v[3753])*v[387];
		v[3246] = QBAi[1][1] * v[3237] + QBAi[1][0] * v[3238] + v[3197] * v[3361] + v[3753] * v[385];
		v[3248] = QBAi[0][1] * v[3237] + QBAi[0][0] * v[3238] + (v[3244] + v[3247])*v[379];
		v[3249] = QBAi[2][1] * v[3231] + QBAi[2][0] * v[3232] + v[3196] * v[3359] + v[3754] * v[387];
		v[3252] = QBAi[1][1] * v[3231] + QBAi[1][0] * v[3232] + (v[3253] + v[3754])*v[385];
		v[3254] = QBAi[0][1] * v[3231] + QBAi[0][0] * v[3232] + (v[3251] + v[3253])*v[379];
		v[3255] = v[1941] * v[3190] + QBAi[2][1] * v[3227] + QBAi[2][0] * v[3228] + (v[3256] + v[3258])*v[387];
		v[3257] = QBAi[1][1] * v[3227] + QBAi[1][0] * v[3228] + v[3755] * v[385];
		v[3260] = QBAi[0][1] * v[3227] + QBAi[0][0] * v[3228] + (v[3258] + v[3755])*v[379];
		v[3261] = QAAi[2][1] * v[3233] + QAAi[2][0] * v[3234] + v[361] * (v[3265] + v[3756]);
		v[3264] = QAAi[1][1] * v[3233] + QAAi[1][0] * v[3234] + v[3215] * v[3356] + v[359] * v[3756];
		v[3266] = QAAi[0][1] * v[3233] + QAAi[0][0] * v[3234] + (v[3262] + v[3265])*v[353];
		v[3267] = QAAi[2][1] * v[3229] + QAAi[2][0] * v[3230] + v[3214] * v[3354] + v[361] * v[3757];
		v[3270] = QAAi[1][1] * v[3229] + QAAi[1][0] * v[3230] + v[359] * (v[3271] + v[3757]);
		v[3272] = QAAi[0][1] * v[3229] + QAAi[0][0] * v[3230] + (v[3269] + v[3271])*v[353];
		v[3273] = v[1935] * v[3208] + QAAi[2][1] * v[3225] + QAAi[2][0] * v[3226] + (v[3274] + v[3276])*v[361];
		v[3275] = QAAi[1][1] * v[3225] + QAAi[1][0] * v[3226] + v[359] * v[3758];
		v[3278] = QAAi[0][1] * v[3225] + QAAi[0][0] * v[3226] + v[353] * (v[3276] + v[3758]);
		v[3279] = -(v[202] * v[3192]) - v[219] * v[3199] + v[218] * v[3202] + v[3195] * v[3762];
		v[3280] = -(v[218] * v[3193]) - v[220] * v[3199] - v[202] * v[3203] + v[3191] * v[3764];
		v[3281] = -(v[219] * v[3193]) - v[202] * v[3200] + v[220] * v[3202] + v[3188] * v[3763];
		v[3282] = (v[2933] * v[3062] + v[1056] * v[3132] + v[202] * v[3243]) / 2e0;
		v[3283] = v[2934] * v[3062] + v[1057] * v[3132] + v[202] * v[3246];
		v[3284] = v[2935] * v[3062] + v[1058] * v[3132] + v[202] * v[3248];
		v[3285] = v[2939] * v[3062] + v[1056] * v[3134] + v[202] * v[3249];
		v[3287] = v[2941] * v[3062] + v[1058] * v[3134] + v[202] * v[3254];
		v[3288] = v[2952] * v[3062] + v[1056] * v[3138] + v[202] * v[3255];
		v[3289] = v[2953] * v[3062] + v[1057] * v[3138] + v[202] * v[3257];
		v[3290] = (v[2954] * v[3062] + v[1058] * v[3138] + v[202] * v[3260]) / 2e0;
		v[3291] = -(v[183] * v[3210]) - v[200] * v[3217] + v[199] * v[3220] + v[3213] * v[3769];
		v[3292] = -(v[199] * v[3211]) - v[201] * v[3217] - v[183] * v[3221] + v[3209] * v[3771];
		v[3293] = -(v[200] * v[3211]) - v[183] * v[3218] + v[201] * v[3220] + v[3206] * v[3770];
		v[3294] = (v[2936] * v[3051] + v[1059] * v[3120] + v[183] * v[3261]) / 2e0;
		v[3295] = v[2937] * v[3051] + v[1060] * v[3120] + v[183] * v[3264];
		v[3296] = v[2938] * v[3051] + v[1061] * v[3120] + v[183] * v[3266];
		v[3297] = v[2942] * v[3051] + v[1059] * v[3122] + v[183] * v[3267];
		v[3299] = v[2944] * v[3051] + v[1061] * v[3122] + v[183] * v[3272];
		v[3300] = v[2955] * v[3051] + v[1059] * v[3126] + v[183] * v[3273];
		v[3301] = v[2956] * v[3051] + v[1060] * v[3126] + v[183] * v[3275];
		v[3302] = (v[2957] * v[3051] + v[1061] * v[3126] + v[183] * v[3278]) / 2e0;
		v[3304] = v[3759] * v[3760];
		v[3306] = v[1518] * ((*bA)*(v[2950] * v[3028] + v[256] * v[3235]) - v[3027] * v[3305] + v[1141] * (v[3304] * v[3649]
			+ v[1277] * v[3761])) - v[1140] * ((*aA)*(v[2951] * v[3028] + v[256] * v[3236]) + v[3027] * v[3303] + v[1143] *
			(v[3304] * v[3648] + v[1280] * v[3761]));
		v[3308] = (v[10540 + i2931] - v[275] * v[3158] - v[274] * v[3159] - v[273] * v[3160] + v[3182] - v[3089] * v[332]
			- v[3086] * v[333] - v[3105] * v[3363] + v[3179] * v[3738] + v[334] * v[3739]) / 2e0;
		v[3309] = v[2959] * v[3011] + cp[3] * v[3224] + 2e0*v[3014] * v[3307] + v[3308] + 2e0*cp[2] * (v[3174] - v[3223]
			+ v[3308]) + v[3768];
		v[3311] = 8e0*v[2860] * (v[1067] * v[3128] + v[3023] * v[3310] + v[1067] * v[3765] + v[1066] * v[3766]
			+ v[1065] * v[3767]) - 2e0*v[1301] * (v[2954] * v[3024] + v[2940] * v[3025] + v[2933] * v[3026] + 2e0*v[2953] * v[3039]
				+ 2e0*v[2941] * v[3041] + 2e0*v[2939] * v[3042] + 2e0*v[2934] * v[3044] + 2e0*v[2952] * v[3045]
				+ 2e0*v[2935] * v[3047] + 2e0*v[1057] * v[3136] + 2e0*v[1056] * v[3137] + 2e0*v[1058] * v[3139] + 4e0*v[202] *
				(v[2333] * v[3110] + v[2328] * v[3111] + v[2323] * v[3112] + v[3188] + v[2173] * v[3190] + v[3191] + v[3195]
					+ v[2171] * v[3196] + v[2167] * v[3197]) - dA[9] * v[3279] + dA[10] * v[3280] - dA[11] * v[3281] - v[3192] * v[3762]
				- v[3200] * v[3763] - v[3203] * v[3764] + v[3243] * v[621] + 2e0*v[3246] * v[624] + 2e0*v[3248] * v[625]
				+ 2e0*v[3249] * v[626] + v[3252] * v[631] + 2e0*v[3254] * v[633] + 2e0*v[3255] * v[634] + 2e0*v[3257] * v[639]
				+ v[3260] * v[644]);
		v[3777] = (-(v[2940] * v[3062]) - v[1057] * v[3134] - v[202] * v[3252]) / 2e0 + v[3311];
		v[3778] = (v[3284] + v[3288]) / 2e0;
		v[3313] = v[3283] + v[3285];
		v[3314] = v[3287] + v[3289];
		v[3316] = (v[10510 + i2931] - v[278] * v[3158] - v[277] * v[3159] - v[276] * v[3160] + v[3182] - v[3089] * v[335]
			- v[3086] * v[336] - v[3106] * v[3363] + v[3177] * v[3738] + v[337] * v[3739]) / 2e0;
		v[3317] = v[2959] * v[3014] + cp[2] * v[3224] + 2e0*v[3011] * v[3315] + v[3316] + 2e0*cp[3] * (-v[3174] + v[3316])
			+ v[3768];
		v[3319] = 8e0*v[2882] * (v[1074] * v[3116] + v[3018] * v[3318] + v[1074] * v[3772] + v[1073] * v[3773]
			+ v[1072] * v[3774]) - 2e0*v[1290] * (v[2957] * v[3019] + v[2943] * v[3020] + v[2936] * v[3021] + 2e0*v[2956] * v[3030]
				+ 2e0*v[2944] * v[3032] + 2e0*v[2942] * v[3033] + 2e0*v[2937] * v[3035] + 2e0*v[2955] * v[3036]
				+ 2e0*v[2938] * v[3038] + 2e0*v[1060] * v[3124] + 2e0*v[1059] * v[3125] + 2e0*v[1061] * v[3127] + 4e0*v[183] *
				(v[2318] * v[3113] + v[2313] * v[3114] + v[2308] * v[3115] + v[3206] + v[2145] * v[3208] + v[3209] + v[3213]
					+ v[2143] * v[3214] + v[2139] * v[3215]) - dA[3] * v[3291] + dA[4] * v[3292] - dA[5] * v[3293] - v[3210] * v[3769]
				- v[3218] * v[3770] - v[3221] * v[3771] + v[3261] * v[652] + 2e0*v[3264] * v[655] + 2e0*v[3266] * v[656]
				+ 2e0*v[3267] * v[657] + v[3270] * v[662] + 2e0*v[3272] * v[664] + 2e0*v[3273] * v[665] + 2e0*v[3275] * v[670]
				+ v[3278] * v[675]);
		v[3775] = (-(v[2943] * v[3051]) - v[1060] * v[3122] - v[183] * v[3270]) / 2e0 + v[3319];
		v[3776] = (v[3296] + v[3300]) / 2e0;
		v[3321] = v[3295] + v[3297];
		v[3322] = v[3299] + v[3301];
		v[10751] = 0e0;
		v[10752] = 0e0;
		v[10753] = 0e0;
		v[10754] = 2e0*v[3323];
		v[10755] = v[3324];
		v[10756] = v[3325];
		v[10757] = 0e0;
		v[10758] = 0e0;
		v[10759] = 0e0;
		v[10760] = 0e0;
		v[10761] = 0e0;
		v[10762] = 0e0;
		v[10763] = 0e0;
		v[10764] = 0e0;
		v[10765] = 0e0;
		v[10766] = 0e0;
		v[10767] = 0e0;
		v[10768] = 0e0;
		v[10769] = 0e0;
		v[10770] = 0e0;
		v[10771] = 0e0;
		v[10772] = 0e0;
		v[10773] = 0e0;
		v[10774] = 0e0;
		v[10775] = 0e0;
		v[10776] = 0e0;
		v[10777] = 0e0;
		v[10778] = 0e0;
		v[10779] = 0e0;
		v[10780] = 0e0;
		v[10721] = 0e0;
		v[10722] = 0e0;
		v[10723] = 0e0;
		v[10724] = v[3324];
		v[10725] = 2e0*v[3326];
		v[10726] = v[3327];
		v[10727] = 0e0;
		v[10728] = 0e0;
		v[10729] = 0e0;
		v[10730] = 0e0;
		v[10731] = 0e0;
		v[10732] = 0e0;
		v[10733] = 0e0;
		v[10734] = 0e0;
		v[10735] = 0e0;
		v[10736] = 0e0;
		v[10737] = 0e0;
		v[10738] = 0e0;
		v[10739] = 0e0;
		v[10740] = 0e0;
		v[10741] = 0e0;
		v[10742] = 0e0;
		v[10743] = 0e0;
		v[10744] = 0e0;
		v[10745] = 0e0;
		v[10746] = 0e0;
		v[10747] = 0e0;
		v[10748] = 0e0;
		v[10749] = 0e0;
		v[10750] = 0e0;
		v[10691] = 0e0;
		v[10692] = 0e0;
		v[10693] = 0e0;
		v[10694] = v[3325];
		v[10695] = v[3327];
		v[10696] = 2e0*v[3328];
		v[10697] = 0e0;
		v[10698] = 0e0;
		v[10699] = 0e0;
		v[10700] = 0e0;
		v[10701] = 0e0;
		v[10702] = 0e0;
		v[10703] = 0e0;
		v[10704] = 0e0;
		v[10705] = 0e0;
		v[10706] = 0e0;
		v[10707] = 0e0;
		v[10708] = 0e0;
		v[10709] = 0e0;
		v[10710] = 0e0;
		v[10711] = 0e0;
		v[10712] = 0e0;
		v[10713] = 0e0;
		v[10714] = 0e0;
		v[10715] = 0e0;
		v[10716] = 0e0;
		v[10717] = 0e0;
		v[10718] = 0e0;
		v[10719] = 0e0;
		v[10720] = 0e0;
		v[10661] = 0e0;
		v[10662] = 0e0;
		v[10663] = 0e0;
		v[10664] = 0e0;
		v[10665] = 0e0;
		v[10666] = 0e0;
		v[10667] = 0e0;
		v[10668] = 0e0;
		v[10669] = 0e0;
		v[10670] = 2e0*v[3329];
		v[10671] = v[3330];
		v[10672] = v[3331];
		v[10673] = 0e0;
		v[10674] = 0e0;
		v[10675] = 0e0;
		v[10676] = 0e0;
		v[10677] = 0e0;
		v[10678] = 0e0;
		v[10679] = 0e0;
		v[10680] = 0e0;
		v[10681] = 0e0;
		v[10682] = 0e0;
		v[10683] = 0e0;
		v[10684] = 0e0;
		v[10685] = 0e0;
		v[10686] = 0e0;
		v[10687] = 0e0;
		v[10688] = 0e0;
		v[10689] = 0e0;
		v[10690] = 0e0;
		v[10781] = 0e0;
		v[10782] = 0e0;
		v[10783] = 0e0;
		v[10784] = 0e0;
		v[10785] = 0e0;
		v[10786] = 0e0;
		v[10787] = 0e0;
		v[10788] = 0e0;
		v[10789] = 0e0;
		v[10790] = v[3330];
		v[10791] = 2e0*v[3332];
		v[10792] = v[3333];
		v[10793] = 0e0;
		v[10794] = 0e0;
		v[10795] = 0e0;
		v[10796] = 0e0;
		v[10797] = 0e0;
		v[10798] = 0e0;
		v[10799] = 0e0;
		v[10800] = 0e0;
		v[10801] = 0e0;
		v[10802] = 0e0;
		v[10803] = 0e0;
		v[10804] = 0e0;
		v[10805] = 0e0;
		v[10806] = 0e0;
		v[10807] = 0e0;
		v[10808] = 0e0;
		v[10809] = 0e0;
		v[10810] = 0e0;
		v[10811] = 0e0;
		v[10812] = 0e0;
		v[10813] = 0e0;
		v[10814] = 0e0;
		v[10815] = 0e0;
		v[10816] = 0e0;
		v[10817] = 0e0;
		v[10818] = 0e0;
		v[10819] = 0e0;
		v[10820] = v[3331];
		v[10821] = v[3333];
		v[10822] = 2e0*v[3334];
		v[10823] = 0e0;
		v[10824] = 0e0;
		v[10825] = 0e0;
		v[10826] = 0e0;
		v[10827] = 0e0;
		v[10828] = 0e0;
		v[10829] = 0e0;
		v[10830] = 0e0;
		v[10831] = 0e0;
		v[10832] = 0e0;
		v[10833] = 0e0;
		v[10834] = 0e0;
		v[10835] = 0e0;
		v[10836] = 0e0;
		v[10837] = 0e0;
		v[10838] = 0e0;
		v[10839] = 0e0;
		v[10840] = 0e0;
		v[10841] = v[3183];
		v[10842] = v[3170];
		v[10843] = v[3167];
		v[10844] = v[10750 + i2931] + (v[1069] * v[3090] + v[1070] * v[3091] + v[1071] * v[3119]) / 2e0 + v[3295] - v[3297]
			+ v[1085] * v[3322] + 2e0*(v[1100] * v[3082] + v[1096] * v[3088] + v[3084] * v[3406]) + 2e0*dA[3] * (-v[3294] + v[3775]
				) + dA[5] * v[3776] + v[3291] * v[654];
		v[10845] = v[10720 + i2931] + (v[1069] * v[3087] + v[1071] * v[3088] + v[1070] * v[3118]) / 2e0 + (v[183] * v[3292]) / 2e0
			- v[3296] + v[3300] + 2e0*dA[4] * (-v[3294] - v[3302] + v[3319]) + (dA[5] * v[3321]) / 2e0 + (dA[3] * v[3322]) / 2e0 + 2e0*
			(v[1100] * v[3080] + v[1095] * v[3091] + v[3083] * v[3409]);
		v[10846] = v[10690 + i2931] + (v[1070] * v[3080] + v[1071] * v[3082] + v[1069] * v[3117]) / 2e0 + v[3299] - v[3301]
			+ v[1085] * v[3321] + 2e0*(v[1096] * v[3087] + v[1095] * v[3090] + v[3085] * v[3416]) + 2e0*dA[5] * (-v[3302] + v[3775]
				) + dA[3] * v[3776] + v[3293] * v[654];
		v[10847] = v[3185];
		v[10848] = v[3172];
		v[10849] = v[3169];
		v[10850] = v[10660 + i2931] + (v[1062] * v[3099] + v[1063] * v[3100] + v[1064] * v[3131]) / 2e0 + v[3283] - v[3285]
			+ v[1079] * v[3314] + 2e0*(v[1094] * v[3093] + v[1090] * v[3098] + v[3095] * v[3400]) + 2e0*dA[9] * (-v[3282] + v[3777]
				) + dA[11] * v[3778] + v[3279] * v[623];
		v[10851] = v[10780 + i2931] + (v[1062] * v[3097] + v[1064] * v[3098] + v[1063] * v[3130]) / 2e0 + (v[202] * v[3280]) / 2e0
			- v[3284] + v[3288] + 2e0*dA[10] * (-v[3282] - v[3290] + v[3311]) + (dA[11] * v[3313]) / 2e0 + (dA[9] * v[3314]) / 2e0
			+ 2e0*(v[1094] * v[3092] + v[1089] * v[3100] + v[3094] * v[3401]);
		v[10852] = v[10810 + i2931] + (v[1063] * v[3092] + v[1064] * v[3093] + v[1062] * v[3129]) / 2e0 + v[3287] - v[3289]
			+ v[1079] * v[3313] + 2e0*(v[1090] * v[3097] + v[1089] * v[3099] + v[3096] * v[3402]) + 2e0*dA[11] * (-v[3290]
				+ v[3777]) + dA[9] * v[3778] + v[3281] * v[623];
		v[10853] = -(v[1152] * v[3073]) - v[301] * v[3160];
		v[10854] = -(v[1153] * v[3073]) - v[301] * v[3159];
		v[10855] = -(v[1154] * v[3073]) - v[301] * v[3158];
		v[10856] = -(v[3160] * v[3351]) + v[3016] * v[3779];
		v[10857] = -(v[3159] * v[3351]) + v[3016] * v[3780];
		v[10858] = -(v[3158] * v[3351]) + v[3016] * v[3781];
		v[10859] = -(v[3160] * v[3352]) + v[3013] * v[3779];
		v[10860] = -(v[3159] * v[3352]) + v[3013] * v[3780];
		v[10861] = -(v[3158] * v[3352]) + v[3013] * v[3781];
		v[10862] = -(v[1152] * v[3072]) - v[310] * v[3160];
		v[10863] = -(v[1153] * v[3072]) - v[310] * v[3159];
		v[10864] = -(v[1154] * v[3072]) - v[310] * v[3158];
		v[10865] = -(v[1152] * v[3074]) - v[311] * v[3160];
		v[10866] = -(v[1153] * v[3074]) - v[311] * v[3159];
		v[10867] = -(v[1154] * v[3074]) - v[311] * v[3158];
		v[10868] = -(v[1152] * v[3075]) - v[313] * v[3160];
		v[10869] = -(v[1153] * v[3075]) - v[313] * v[3159];
		v[10870] = -(v[1154] * v[3075]) - v[313] * v[3158];
		Rc[i2931 - 1] += v[10296 + i2931] + v[2988] * v[3011] + v[2986] * v[3014] + v[2984] * v[3027] + v[2961] * v[3076];
		for (i2997 = 1; i2997 <= 30; i2997++) {
			Kc[i2931 - 1][i2997 - 1] += v[10840 + i2997] + (*a4)*v[10870 + i2997] + v[3317] * v[4610 + i2997] + v[3309] * v[4640
				+ i2997] + v[3306] * v[4670 + i2997] + v[3242] * v[4700 + i2997];
		};/* end for */
	};/* end for */
#pragma endregion



}

//Calcula a função objetivo para um conjunto de coordenadas convectivas - Phase 1
double FlexibleSECylinder_1_FlexibleTriangularSurface_2::ObjectivePhase1(Matrix& mc)
{
	double v[2000];		//variável temporária - AceGen
	double* cp = mc.getMatrix();
	EvaluateDOFsVariables();

	double Ob;
	v[259] = sin(cp[1]);
	v[214] = cos(cp[1]);
	v[220] = fabs(v[259]);
	v[218] = fabs(v[214]);
	v[240] = -1e0 - cp[2];
	v[237] = 0.5e0 + cp[2];
	v[204] = Power(cp[2], 2);
	v[668] = (cp[2] + v[204]) / 2e0;
	v[241] = 1e0 + cp[3];
	v[239] = -1e0 - 2e0*cp[2] - cp[3];
	v[238] = 0.5e0 + cp[3];
	v[236] = 0.5e0 + cp[2] + cp[3];
	v[242] = -2e0*cp[3] + v[240];
	v[208] = Power(cp[3], 2);
	v[205] = cp[2] * cp[3];
	v[669] = (cp[3] + v[208]) / 2e0;
	v[120] = Power(dA[3], 2);
	v[118] = 0.5e0*dA[3] * dA[4];
	v[113] = Power(dA[4], 2);
	v[125] = 0.5e0*dA[4] * dA[5];
	v[123] = 0.5e0*dA[3] * dA[5];
	v[114] = Power(dA[5], 2);
	v[662] = v[113] + v[114];
	v[136] = Power(dA[9], 2);
	v[134] = 0.5e0*dA[10] * dA[9];
	v[129] = Power(dA[10], 2);
	v[141] = 0.5e0*dA[10] * dA[11];
	v[139] = 0.5e0*dA[11] * dA[9];
	v[130] = Power(dA[11], 2);
	v[663] = v[129] + v[130];
	v[112] = 4e0 / (4e0 + v[120] + v[662]);
	v[115] = 1e0 - 0.5e0*v[112] * v[662];
	v[116] = v[112] * (-dA[5] + v[118]);
	v[117] = v[112] * (dA[4] + v[123]);
	v[119] = v[112] * (dA[5] + v[118]);
	v[121] = 1e0 - 0.5e0*v[112] * (v[114] + v[120]);
	v[122] = v[112] * (-dA[3] + v[125]);
	v[124] = v[112] * (-dA[4] + v[123]);
	v[126] = v[112] * (dA[3] + v[125]);
	v[127] = 1e0 - 0.5e0*v[112] * (v[113] + v[120]);
	v[128] = 4e0 / (4e0 + v[136] + v[663]);
	v[131] = 1e0 - 0.5e0*v[128] * v[663];
	v[132] = v[128] * (-dA[11] + v[134]);
	v[133] = v[128] * (dA[10] + v[139]);
	v[135] = v[128] * (dA[11] + v[134]);
	v[137] = 1e0 - 0.5e0*v[128] * (v[130] + v[136]);
	v[138] = v[128] * (-dA[9] + v[141]);
	v[140] = v[128] * (-dA[10] + v[139]);
	v[142] = v[128] * (dA[9] + v[141]);
	v[143] = 1e0 - 0.5e0*v[128] * (v[129] + v[136]);
	v[144] = QAAi[0][0] * v[115] + QAAi[1][0] * v[116] + QAAi[2][0] * v[117];
	v[145] = QAAi[0][1] * v[115] + QAAi[1][1] * v[116] + QAAi[2][1] * v[117];
	v[147] = QAAi[0][0] * v[119] + QAAi[1][0] * v[121] + QAAi[2][0] * v[122];
	v[148] = QAAi[0][1] * v[119] + QAAi[1][1] * v[121] + QAAi[2][1] * v[122];
	v[150] = QAAi[0][0] * v[124] + QAAi[1][0] * v[126] + QAAi[2][0] * v[127];
	v[151] = QAAi[0][1] * v[124] + QAAi[1][1] * v[126] + QAAi[2][1] * v[127];
	v[153] = QBAi[0][0] * v[131] + QBAi[1][0] * v[132] + QBAi[2][0] * v[133];
	v[154] = QBAi[0][1] * v[131] + QBAi[1][1] * v[132] + QBAi[2][1] * v[133];
	v[156] = QBAi[0][0] * v[135] + QBAi[1][0] * v[137] + QBAi[2][0] * v[138];
	v[157] = QBAi[0][1] * v[135] + QBAi[1][1] * v[137] + QBAi[2][1] * v[138];
	v[159] = QBAi[0][0] * v[140] + QBAi[1][0] * v[142] + QBAi[2][0] * v[143];
	v[160] = QBAi[0][1] * v[140] + QBAi[1][1] * v[142] + QBAi[2][1] * v[143];
	v[168] = 0.5e0 - 0.5e0*cp[0];
	v[169] = 0.5e0*(1e0 + cp[0]);
	v[170] = 2e0 / (*eA);
	v[664] = -1e0 + v[170];
	v[217] = Power(v[218], v[170]) + Power(v[220], v[170]);
	v[221] = Power(v[217], -1e0 - 1e0 / v[170])*(Power(v[218], v[664])*v[259] * _copysign(1.e0, v[214])
		- v[214] * Power(v[220], v[664])*_copysign(1.e0, v[259]));
	v[171] = 1e0 / Power(v[217], 1 / v[170]);
	v[667] = v[171] * v[259];
	v[666] = v[171] * v[214];
	v[223] = (*bA)*(v[221] * v[259] + v[666]);
	v[222] = (*aA)*(v[214] * v[221] - v[667]);
	v[173] = (*aA)*v[666];
	v[175] = (*bA)*v[667];
	v[233] = dA[8] + v[159] * v[173] + v[160] * v[175] + xBAi[2];
	v[232] = dA[2] + v[150] * v[173] + v[151] * v[175] + xAAi[2];
	v[229] = dA[7] + v[156] * v[173] + v[157] * v[175] + xBAi[1];
	v[228] = dA[1] + v[147] * v[173] + v[148] * v[175] + xAAi[1];
	v[225] = dA[6] + v[153] * v[173] + v[154] * v[175] + xBAi[0];
	v[224] = dA[0] + v[144] * v[173] + v[145] * v[175] + xAAi[0];
	v[179] = dB[0] + xAi[0];
	v[244] = v[179] * v[236];
	v[180] = dB[1] + xAi[1];
	v[247] = v[180] * v[236];
	v[181] = dB[2] + xAi[2];
	v[250] = v[181] * v[236];
	v[182] = dB[3] + xBi[0];
	v[183] = dB[4] + xBi[1];
	v[184] = dB[5] + xBi[2];
	v[185] = dB[6] + xCi[0];
	v[186] = dB[7] + xCi[1];
	v[187] = dB[8] + xCi[2];
	v[188] = dB[9] + xDi[0];
	v[189] = dB[10] + xDi[1];
	v[190] = dB[11] + xDi[2];
	v[191] = dB[12] + xEi[0];
	v[192] = dB[13] + xEi[1];
	v[193] = dB[14] + xEi[2];
	v[194] = dB[15] + xFi[0];
	v[195] = dB[16] + xFi[1];
	v[196] = dB[17] + xFi[2];
	v[197] = v[205] + v[668] + v[669];
	v[206] = -cp[2] - cp[3] - v[204] - v[205];
	v[207] = 0.5e0 + v[205] + v[236];
	v[209] = v[204] + v[206] - v[208];
	v[252] = -(v[179] * v[197]) - v[188] * v[206] - v[191] * v[207] - v[194] * v[209] + v[168] * v[224] + v[169] * v[225]
		- v[182] * v[668] - v[185] * v[669];
	v[670] = 2e0*v[252];
	v[253] = -(v[180] * v[197]) - v[189] * v[206] - v[192] * v[207] - v[195] * v[209] + v[168] * v[228] + v[169] * v[229]
		- v[183] * v[668] - v[186] * v[669];
	v[671] = 2e0*v[253];
	v[254] = -(v[181] * v[197]) - v[190] * v[206] - v[193] * v[207] - v[196] * v[209] + v[168] * v[232] + v[169] * v[233]
		- v[184] * v[668] - v[187] * v[669];
	v[672] = 2e0*v[254];
	(Ob) = 0.5e0*((v[252] * v[252]) + (v[253] * v[253]) + (v[254] * v[254]));
	
	return Ob;
}

//Calcula o Gradiente da função objetivo - Phase 1
void FlexibleSECylinder_1_FlexibleTriangularSurface_2::GradientPhase1(Matrix& mc, Matrix& mGra)
{
	double v[2000];		//variável temporária - AceGen
	double* cp = mc.getMatrix();
	EvaluateDOFsVariables();
	double* Gra = mGra.getMatrix();

	v[259] = sin(cp[1]);
	v[214] = cos(cp[1]);
	v[220] = fabs(v[259]);
	v[218] = fabs(v[214]);
	v[240] = -1e0 - cp[2];
	v[237] = 0.5e0 + cp[2];
	v[204] = Power(cp[2], 2);
	v[667] = (cp[2] + v[204]) / 2e0;
	v[241] = 1e0 + cp[3];
	v[239] = -1e0 - 2e0*cp[2] - cp[3];
	v[238] = 0.5e0 + cp[3];
	v[236] = 0.5e0 + cp[2] + cp[3];
	v[242] = -2e0*cp[3] + v[240];
	v[208] = Power(cp[3], 2);
	v[205] = cp[2] * cp[3];
	v[668] = (cp[3] + v[208]) / 2e0;
	v[120] = Power(dA[3], 2);
	v[118] = 0.5e0*dA[3] * dA[4];
	v[113] = Power(dA[4], 2);
	v[125] = 0.5e0*dA[4] * dA[5];
	v[123] = 0.5e0*dA[3] * dA[5];
	v[114] = Power(dA[5], 2);
	v[661] = v[113] + v[114];
	v[136] = Power(dA[9], 2);
	v[134] = 0.5e0*dA[10] * dA[9];
	v[129] = Power(dA[10], 2);
	v[141] = 0.5e0*dA[10] * dA[11];
	v[139] = 0.5e0*dA[11] * dA[9];
	v[130] = Power(dA[11], 2);
	v[662] = v[129] + v[130];
	v[112] = 4e0 / (4e0 + v[120] + v[661]);
	v[115] = 1e0 - 0.5e0*v[112] * v[661];
	v[116] = v[112] * (-dA[5] + v[118]);
	v[117] = v[112] * (dA[4] + v[123]);
	v[119] = v[112] * (dA[5] + v[118]);
	v[121] = 1e0 - 0.5e0*v[112] * (v[114] + v[120]);
	v[122] = v[112] * (-dA[3] + v[125]);
	v[124] = v[112] * (-dA[4] + v[123]);
	v[126] = v[112] * (dA[3] + v[125]);
	v[127] = 1e0 - 0.5e0*v[112] * (v[113] + v[120]);
	v[128] = 4e0 / (4e0 + v[136] + v[662]);
	v[131] = 1e0 - 0.5e0*v[128] * v[662];
	v[132] = v[128] * (-dA[11] + v[134]);
	v[133] = v[128] * (dA[10] + v[139]);
	v[135] = v[128] * (dA[11] + v[134]);
	v[137] = 1e0 - 0.5e0*v[128] * (v[130] + v[136]);
	v[138] = v[128] * (-dA[9] + v[141]);
	v[140] = v[128] * (-dA[10] + v[139]);
	v[142] = v[128] * (dA[9] + v[141]);
	v[143] = 1e0 - 0.5e0*v[128] * (v[129] + v[136]);
	v[144] = QAAi[0][0] * v[115] + QAAi[1][0] * v[116] + QAAi[2][0] * v[117];
	v[145] = QAAi[0][1] * v[115] + QAAi[1][1] * v[116] + QAAi[2][1] * v[117];
	v[147] = QAAi[0][0] * v[119] + QAAi[1][0] * v[121] + QAAi[2][0] * v[122];
	v[148] = QAAi[0][1] * v[119] + QAAi[1][1] * v[121] + QAAi[2][1] * v[122];
	v[150] = QAAi[0][0] * v[124] + QAAi[1][0] * v[126] + QAAi[2][0] * v[127];
	v[151] = QAAi[0][1] * v[124] + QAAi[1][1] * v[126] + QAAi[2][1] * v[127];
	v[153] = QBAi[0][0] * v[131] + QBAi[1][0] * v[132] + QBAi[2][0] * v[133];
	v[154] = QBAi[0][1] * v[131] + QBAi[1][1] * v[132] + QBAi[2][1] * v[133];
	v[156] = QBAi[0][0] * v[135] + QBAi[1][0] * v[137] + QBAi[2][0] * v[138];
	v[157] = QBAi[0][1] * v[135] + QBAi[1][1] * v[137] + QBAi[2][1] * v[138];
	v[159] = QBAi[0][0] * v[140] + QBAi[1][0] * v[142] + QBAi[2][0] * v[143];
	v[160] = QBAi[0][1] * v[140] + QBAi[1][1] * v[142] + QBAi[2][1] * v[143];
	v[168] = 0.5e0 - 0.5e0*cp[0];
	v[169] = 0.5e0*(1e0 + cp[0]);
	v[170] = 2e0 / (*eA);
	v[663] = -1e0 + v[170];
	v[217] = Power(v[218], v[170]) + Power(v[220], v[170]);
	v[221] = Power(v[217], -1e0 - 1e0 / v[170])*(Power(v[218], v[663])*v[259] * _copysign(1.e0, v[214])
		- v[214] * Power(v[220], v[663])*_copysign(1.e0, v[259]));
	v[171] = 1e0 / Power(v[217], 1 / v[170]);
	v[666] = v[171] * v[259];
	v[665] = v[171] * v[214];
	v[223] = (*bA)*(v[221] * v[259] + v[665]);
	v[222] = (*aA)*(v[214] * v[221] - v[666]);
	v[173] = (*aA)*v[665];
	v[175] = (*bA)*v[666];
	v[233] = dA[8] + v[159] * v[173] + v[160] * v[175] + xBAi[2];
	v[232] = dA[2] + v[150] * v[173] + v[151] * v[175] + xAAi[2];
	v[229] = dA[7] + v[156] * v[173] + v[157] * v[175] + xBAi[1];
	v[228] = dA[1] + v[147] * v[173] + v[148] * v[175] + xAAi[1];
	v[225] = dA[6] + v[153] * v[173] + v[154] * v[175] + xBAi[0];
	v[224] = dA[0] + v[144] * v[173] + v[145] * v[175] + xAAi[0];
	v[179] = dB[0] + xAi[0];
	v[244] = v[179] * v[236];
	v[180] = dB[1] + xAi[1];
	v[247] = v[180] * v[236];
	v[181] = dB[2] + xAi[2];
	v[250] = v[181] * v[236];
	v[182] = dB[3] + xBi[0];
	v[183] = dB[4] + xBi[1];
	v[184] = dB[5] + xBi[2];
	v[185] = dB[6] + xCi[0];
	v[186] = dB[7] + xCi[1];
	v[187] = dB[8] + xCi[2];
	v[188] = dB[9] + xDi[0];
	v[189] = dB[10] + xDi[1];
	v[190] = dB[11] + xDi[2];
	v[191] = dB[12] + xEi[0];
	v[192] = dB[13] + xEi[1];
	v[193] = dB[14] + xEi[2];
	v[194] = dB[15] + xFi[0];
	v[195] = dB[16] + xFi[1];
	v[196] = dB[17] + xFi[2];
	v[197] = v[205] + v[667] + v[668];
	v[206] = -cp[2] - cp[3] - v[204] - v[205];
	v[207] = 0.5e0 + v[205] + v[236];
	v[209] = v[204] + v[206] - v[208];
	v[669] = 2e0*(-(v[179] * v[197]) - v[188] * v[206] - v[191] * v[207] - v[194] * v[209] + v[168] * v[224] + v[169] * v[225]
		- v[182] * v[667] - v[185] * v[668]);
	v[670] = 2e0*(-(v[180] * v[197]) - v[189] * v[206] - v[192] * v[207] - v[195] * v[209] + v[168] * v[228] + v[169] * v[229]
		- v[183] * v[667] - v[186] * v[668]);
	v[671] = 2e0*(-(v[181] * v[197]) - v[190] * v[206] - v[193] * v[207] - v[196] * v[209] + v[168] * v[232] + v[169] * v[233]
		- v[184] * v[667] - v[187] * v[668]);
	Gra[0] = 0.5e0*((-0.5e0*v[224] + 0.5e0*v[225])*v[669] + (-0.5e0*v[228] + 0.5e0*v[229])*v[670] + (
		-0.5e0*v[232] + 0.5e0*v[233])*v[671]);
	Gra[1] = 0.5e0*((v[168] * (v[144] * v[222] + v[145] * v[223]) + v[169] * (v[153] * v[222] + v[154] * v[223]))*v[669] +
		(v[168] * (v[147] * v[222] + v[148] * v[223]) + v[169] * (v[156] * v[222] + v[157] * v[223]))*v[670] + (v[168] *
		(v[150] * v[222] + v[151] * v[223]) + v[169] * (v[159] * v[222] + v[160] * v[223]))*v[671]);
	Gra[2] = 0.5e0*((-(v[182] * v[237]) - v[188] * v[239] - (v[191] - v[194])*v[241] - v[244])*v[669] + (-
		(v[183] * v[237]) - v[189] * v[239] - (v[192] - v[195])*v[241] - v[247])*v[670] + (-(v[184] * v[237]) - v[190] * v[239]
			- (v[193] - v[196])*v[241] - v[250])*v[671]);
	Gra[3] = 0.5e0*((-(v[185] * v[238]) - (v[188] - v[191])*v[240] - v[194] * v[242] - v[244])*v[669] + (-
		(v[186] * v[238]) - (v[189] - v[192])*v[240] - v[195] * v[242] - v[247])*v[670] + (-(v[187] * v[238]) - (v[190]
			- v[193])*v[240] - v[196] * v[242] - v[250])*v[671]);
	
}

//Calcula a Hessiana da função objetivo - Phase 1
void FlexibleSECylinder_1_FlexibleTriangularSurface_2::HessianPhase1(Matrix& mc, Matrix& mHes)
{
	double v[2000];		//variável temporária - AceGen
	double* cp = mc.getMatrix();
	EvaluateDOFsVariables();
	double Hes[4][4];

	int i01; int i02;
	v[352] = sin(cp[1]);
	v[314] = cos(cp[1]);
	v[260] = _copysign(1.e0, v[352]);
	v[261] = v[260] * v[314];
	v[220] = fabs(v[352]);
	v[262] = _copysign(1.e0, v[314]);
	v[263] = -(v[262] * v[352]);
	v[218] = fabs(v[314]);
	v[240] = -1e0 - cp[2];
	v[237] = 0.5e0 + cp[2];
	v[204] = Power(cp[2], 2);
	v[670] = (cp[2] + v[204]) / 2e0;
	v[241] = 1e0 + cp[3];
	v[239] = -1e0 - 2e0*cp[2] - cp[3];
	v[238] = 0.5e0 + cp[3];
	v[236] = 0.5e0 + cp[2] + cp[3];
	v[242] = -2e0*cp[3] + v[240];
	v[208] = Power(cp[3], 2);
	v[205] = cp[2] * cp[3];
	v[671] = (cp[3] + v[208]) / 2e0;
	v[120] = Power(dA[3], 2);
	v[118] = 0.5e0*dA[3] * dA[4];
	v[113] = Power(dA[4], 2);
	v[125] = 0.5e0*dA[4] * dA[5];
	v[123] = 0.5e0*dA[3] * dA[5];
	v[114] = Power(dA[5], 2);
	v[662] = v[113] + v[114];
	v[136] = Power(dA[9], 2);
	v[134] = 0.5e0*dA[10] * dA[9];
	v[129] = Power(dA[10], 2);
	v[141] = 0.5e0*dA[10] * dA[11];
	v[139] = 0.5e0*dA[11] * dA[9];
	v[130] = Power(dA[11], 2);
	v[663] = v[129] + v[130];
	v[112] = 4e0 / (4e0 + v[120] + v[662]);
	v[115] = 1e0 - 0.5e0*v[112] * v[662];
	v[116] = v[112] * (-dA[5] + v[118]);
	v[117] = v[112] * (dA[4] + v[123]);
	v[119] = v[112] * (dA[5] + v[118]);
	v[121] = 1e0 - 0.5e0*v[112] * (v[114] + v[120]);
	v[122] = v[112] * (-dA[3] + v[125]);
	v[124] = v[112] * (-dA[4] + v[123]);
	v[126] = v[112] * (dA[3] + v[125]);
	v[127] = 1e0 - 0.5e0*v[112] * (v[113] + v[120]);
	v[128] = 4e0 / (4e0 + v[136] + v[663]);
	v[131] = 1e0 - 0.5e0*v[128] * v[663];
	v[132] = v[128] * (-dA[11] + v[134]);
	v[133] = v[128] * (dA[10] + v[139]);
	v[135] = v[128] * (dA[11] + v[134]);
	v[137] = 1e0 - 0.5e0*v[128] * (v[130] + v[136]);
	v[138] = v[128] * (-dA[9] + v[141]);
	v[140] = v[128] * (-dA[10] + v[139]);
	v[142] = v[128] * (dA[9] + v[141]);
	v[143] = 1e0 - 0.5e0*v[128] * (v[129] + v[136]);
	v[144] = QAAi[0][0] * v[115] + QAAi[1][0] * v[116] + QAAi[2][0] * v[117];
	v[145] = QAAi[0][1] * v[115] + QAAi[1][1] * v[116] + QAAi[2][1] * v[117];
	v[147] = QAAi[0][0] * v[119] + QAAi[1][0] * v[121] + QAAi[2][0] * v[122];
	v[148] = QAAi[0][1] * v[119] + QAAi[1][1] * v[121] + QAAi[2][1] * v[122];
	v[150] = QAAi[0][0] * v[124] + QAAi[1][0] * v[126] + QAAi[2][0] * v[127];
	v[151] = QAAi[0][1] * v[124] + QAAi[1][1] * v[126] + QAAi[2][1] * v[127];
	v[153] = QBAi[0][0] * v[131] + QBAi[1][0] * v[132] + QBAi[2][0] * v[133];
	v[154] = QBAi[0][1] * v[131] + QBAi[1][1] * v[132] + QBAi[2][1] * v[133];
	v[156] = QBAi[0][0] * v[135] + QBAi[1][0] * v[137] + QBAi[2][0] * v[138];
	v[157] = QBAi[0][1] * v[135] + QBAi[1][1] * v[137] + QBAi[2][1] * v[138];
	v[159] = QBAi[0][0] * v[140] + QBAi[1][0] * v[142] + QBAi[2][0] * v[143];
	v[160] = QBAi[0][1] * v[140] + QBAi[1][1] * v[142] + QBAi[2][1] * v[143];
	v[168] = 0.5e0 - 0.5e0*cp[0];
	v[169] = 0.5e0*(1e0 + cp[0]);
	v[170] = 2e0 / (*eA);
	v[664] = -2e0 + v[170];
	v[355] = -1e0 + v[170];
	v[268] = Power(v[220], v[355]);
	v[267] = Power(v[218], v[355]);
	v[265] = -1e0 - 1e0 / v[170];
	v[264] = v[170] * (v[263] * v[267] + v[261] * v[268]);
	v[217] = Power(v[218], v[170]) + Power(v[220], v[170]);
	v[266] = Power(v[217], v[265]);
	v[221] = -((v[264] * v[266]) / v[170]);
	v[666] = 2e0*v[221];
	v[171] = 1e0 / Power(v[217], 1 / v[170]);
	v[669] = v[171] * v[352];
	v[668] = v[171] * v[314];
	v[667] = -v[171] - (Power(v[217], -1e0 + v[265])*(v[264] * v[264])*v[265]) / v[170] + v[266] *
		(v[262] * v[267] * v[314] + v[260] * v[268] * v[352] + (-(Power(v[220], v[664])*(v[261] * v[261])) - Power(v[218]
			, v[664])*(v[263] * v[263]))*v[355]);
	v[274] = (*aA)*(-(v[352] * v[666]) + v[314] * v[667]);
	v[272] = (*bA)*(v[314] * v[666] + v[352] * v[667]);
	v[223] = (*bA)*(v[221] * v[352] + v[668]);
	v[222] = (*aA)*(v[221] * v[314] - v[669]);
	v[284] = v[153] * v[222] + v[154] * v[223];
	v[283] = v[144] * v[222] + v[145] * v[223];
	v[280] = v[156] * v[222] + v[157] * v[223];
	v[279] = v[147] * v[222] + v[148] * v[223];
	v[276] = v[159] * v[222] + v[160] * v[223];
	v[275] = v[150] * v[222] + v[151] * v[223];
	v[235] = v[168] * v[275] + v[169] * v[276];
	v[674] = 2e0*v[235];
	v[231] = v[168] * v[279] + v[169] * v[280];
	v[673] = 2e0*v[231];
	v[227] = v[168] * v[283] + v[169] * v[284];
	v[672] = 2e0*v[227];
	v[173] = (*aA)*v[668];
	v[175] = (*bA)*v[669];
	v[233] = dA[8] + v[159] * v[173] + v[160] * v[175] + xBAi[2];
	v[232] = dA[2] + v[150] * v[173] + v[151] * v[175] + xAAi[2];
	v[234] = -0.5e0*v[232] + 0.5e0*v[233];
	v[229] = dA[7] + v[156] * v[173] + v[157] * v[175] + xBAi[1];
	v[228] = dA[1] + v[147] * v[173] + v[148] * v[175] + xAAi[1];
	v[230] = -0.5e0*v[228] + 0.5e0*v[229];
	v[225] = dA[6] + v[153] * v[173] + v[154] * v[175] + xBAi[0];
	v[224] = dA[0] + v[144] * v[173] + v[145] * v[175] + xAAi[0];
	v[226] = -0.5e0*v[224] + 0.5e0*v[225];
	v[179] = dB[0] + xAi[0];
	v[244] = v[179] * v[236];
	v[180] = dB[1] + xAi[1];
	v[247] = v[180] * v[236];
	v[181] = dB[2] + xAi[2];
	v[250] = v[181] * v[236];
	v[182] = dB[3] + xBi[0];
	v[183] = dB[4] + xBi[1];
	v[184] = dB[5] + xBi[2];
	v[185] = dB[6] + xCi[0];
	v[186] = dB[7] + xCi[1];
	v[187] = dB[8] + xCi[2];
	v[188] = dB[9] + xDi[0];
	v[189] = dB[10] + xDi[1];
	v[190] = dB[11] + xDi[2];
	v[191] = dB[12] + xEi[0];
	v[192] = dB[13] + xEi[1];
	v[193] = dB[14] + xEi[2];
	v[194] = dB[15] + xFi[0];
	v[681] = v[191] - v[194];
	v[245] = v[185] * v[238] + (v[188] - v[191])*v[240] + v[194] * v[242] + v[244];
	v[243] = v[182] * v[237] + v[188] * v[239] + v[244] + v[241] * v[681];
	v[678] = 2e0*v[243];
	v[195] = dB[16] + xFi[1];
	v[682] = v[192] - v[195];
	v[248] = v[186] * v[238] + (v[189] - v[192])*v[240] + v[195] * v[242] + v[247];
	v[246] = v[183] * v[237] + v[189] * v[239] + v[247] + v[241] * v[682];
	v[679] = 2e0*v[246];
	v[196] = dB[17] + xFi[2];
	v[683] = v[193] - v[196];
	v[251] = v[187] * v[238] + (v[190] - v[193])*v[240] + v[196] * v[242] + v[250];
	v[249] = v[184] * v[237] + v[190] * v[239] + v[250] + v[241] * v[683];
	v[680] = 2e0*v[249];
	v[197] = v[205] + v[670] + v[671];
	v[206] = -cp[2] - cp[3] - v[204] - v[205];
	v[207] = 0.5e0 + v[205] + v[236];
	v[209] = v[204] + v[206] - v[208];
	v[252] = -(v[179] * v[197]) - v[188] * v[206] - v[191] * v[207] - v[194] * v[209] + v[168] * v[224] + v[169] * v[225]
		- v[182] * v[670] - v[185] * v[671];
	v[677] = 2e0*v[252];
	v[253] = -(v[180] * v[197]) - v[189] * v[206] - v[192] * v[207] - v[195] * v[209] + v[168] * v[228] + v[169] * v[229]
		- v[183] * v[670] - v[186] * v[671];
	v[676] = 2e0*v[253];
	v[254] = -(v[181] * v[197]) - v[190] * v[206] - v[193] * v[207] - v[196] * v[209] + v[168] * v[232] + v[169] * v[233]
		- v[184] * v[670] - v[187] * v[671];
	v[675] = 2e0*v[254];
	Hes[0][0] = 1e0*((v[226] * v[226]) + (v[230] * v[230]) + (v[234] * v[234]));
	Hes[0][1] = 0.5e0*(v[226] * v[672] + v[230] * v[673] + v[234] * v[674] + (-0.5e0*v[275] + 0.5e0*v[276])*v[675] + (
		-0.5e0*v[279] + 0.5e0*v[280])*v[676] + (-0.5e0*v[283] + 0.5e0*v[284])*v[677]);
	Hes[0][2] = 0.5e0*(-(v[226] * v[678]) - v[230] * v[679] - v[234] * v[680]);
	Hes[0][3] = -1e0*(v[226] * v[245] + v[230] * v[248] + v[234] * v[251]);
	Hes[1][1] = 0.5e0*(2e0*(v[227] * v[227]) + 2e0*(v[231] * v[231]) + 2e0*(v[235] * v[235]) + (v[168] * (v[151] * v[272]
		+ v[150] * v[274]) + v[169] * (v[160] * v[272] + v[159] * v[274]))*v[675] + (v[168] * (v[148] * v[272] + v[147] * v[274])
			+ v[169] * (v[157] * v[272] + v[156] * v[274]))*v[676] + (v[168] * (v[145] * v[272] + v[144] * v[274]) + v[169] *
			(v[154] * v[272] + v[153] * v[274]))*v[677]);
	Hes[1][2] = -1e0*(v[227] * v[243] + v[231] * v[246] + v[235] * v[249]);
	Hes[1][3] = 0.5e0*(-(v[245] * v[672]) - v[248] * v[673] - v[251] * v[674]);
	Hes[2][2] = 0.5e0*(2e0*(v[243] * v[243]) + 2e0*(v[246] * v[246]) + 2e0*(v[249] * v[249]) - 2e0*(v[179] + v[182]
		- 2e0*v[188])*v[252] - 2e0*(v[180] + v[183] - 2e0*v[189])*v[253] - 2e0*(v[181] + v[184] - 2e0*v[190])*v[254]);
	Hes[2][3] = 0.5e0*(v[245] * v[678] + v[248] * v[679] + v[251] * v[680] + v[677] * (-v[179] + v[188] - v[681]) + v[676] * (
		-v[180] + v[189] - v[682]) + v[675] * (-v[181] + v[190] - v[683]));
	Hes[3][3] = 0.5e0*(2e0*(v[245] * v[245]) + 2e0*(v[248] * v[248]) + 2e0*(v[251] * v[251]) + (-v[181] - v[187]
		+ 2e0*v[196])*v[675] + (-v[180] - v[186] + 2e0*v[195])*v[676] + (-v[179] - v[185] + 2e0*v[194])*v[677]);
	for (i01 = 1; i01 < 4; i01++) {
		for (i02 = 0; i02 < i01; i02++) {
			Hes[i01][i02] = Hes[i02][i01];
		}
	};

	for (int i = 0; i < 4; i++)
		for (int j = 0; j < 4; j++)
			mHes(i, j) = Hes[i][j];

}

//Calcula e rotorna o gap (com sinal)
double FlexibleSECylinder_1_FlexibleTriangularSurface_2::Gap(Matrix& mc, bool fixed_normals, Matrix& nA, Matrix& nB)
{
	double v[2000];		//variável temporária - AceGen
	double* cp = mc.getMatrix();
	EvaluateDOFsVariables();
	bool* fixnormal = &fixed_normals;
	double* normalA = nA.getMatrix();
	double* normalB = nB.getMatrix();
	double Ob;

	int b358;
	v[266] = sin(cp[1]);
	v[221] = cos(cp[1]);
	v[227] = fabs(v[266]);
	v[225] = fabs(v[221]);
	v[247] = -1e0 - cp[2];
	v[244] = 0.5e0 + cp[2];
	v[211] = Power(cp[2], 2);
	v[682] = (cp[2] + v[211]) / 2e0;
	v[248] = 1e0 + cp[3];
	v[246] = -1e0 - 2e0*cp[2] - cp[3];
	v[245] = 0.5e0 + cp[3];
	v[243] = 0.5e0 + cp[2] + cp[3];
	v[249] = -2e0*cp[3] + v[247];
	v[215] = Power(cp[3], 2);
	v[212] = cp[2] * cp[3];
	v[683] = (cp[3] + v[215]) / 2e0;
	v[127] = Power(dA[3], 2);
	v[125] = 0.5e0*dA[3] * dA[4];
	v[120] = Power(dA[4], 2);
	v[132] = 0.5e0*dA[4] * dA[5];
	v[130] = 0.5e0*dA[3] * dA[5];
	v[121] = Power(dA[5], 2);
	v[675] = v[120] + v[121];
	v[143] = Power(dA[9], 2);
	v[141] = 0.5e0*dA[10] * dA[9];
	v[136] = Power(dA[10], 2);
	v[148] = 0.5e0*dA[10] * dA[11];
	v[146] = 0.5e0*dA[11] * dA[9];
	v[137] = Power(dA[11], 2);
	v[676] = v[136] + v[137];
	v[119] = 4e0 / (4e0 + v[127] + v[675]);
	v[122] = 1e0 - 0.5e0*v[119] * v[675];
	v[123] = v[119] * (-dA[5] + v[125]);
	v[124] = v[119] * (dA[4] + v[130]);
	v[126] = v[119] * (dA[5] + v[125]);
	v[128] = 1e0 - 0.5e0*v[119] * (v[121] + v[127]);
	v[129] = v[119] * (-dA[3] + v[132]);
	v[131] = v[119] * (-dA[4] + v[130]);
	v[133] = v[119] * (dA[3] + v[132]);
	v[134] = 1e0 - 0.5e0*v[119] * (v[120] + v[127]);
	v[135] = 4e0 / (4e0 + v[143] + v[676]);
	v[138] = 1e0 - 0.5e0*v[135] * v[676];
	v[139] = v[135] * (-dA[11] + v[141]);
	v[140] = v[135] * (dA[10] + v[146]);
	v[142] = v[135] * (dA[11] + v[141]);
	v[144] = 1e0 - 0.5e0*v[135] * (v[137] + v[143]);
	v[145] = v[135] * (-dA[9] + v[148]);
	v[147] = v[135] * (-dA[10] + v[146]);
	v[149] = v[135] * (dA[9] + v[148]);
	v[150] = 1e0 - 0.5e0*v[135] * (v[136] + v[143]);
	v[151] = QAAi[0][0] * v[122] + QAAi[1][0] * v[123] + QAAi[2][0] * v[124];
	v[152] = QAAi[0][1] * v[122] + QAAi[1][1] * v[123] + QAAi[2][1] * v[124];
	v[154] = QAAi[0][0] * v[126] + QAAi[1][0] * v[128] + QAAi[2][0] * v[129];
	v[155] = QAAi[0][1] * v[126] + QAAi[1][1] * v[128] + QAAi[2][1] * v[129];
	v[157] = QAAi[0][0] * v[131] + QAAi[1][0] * v[133] + QAAi[2][0] * v[134];
	v[158] = QAAi[0][1] * v[131] + QAAi[1][1] * v[133] + QAAi[2][1] * v[134];
	v[160] = QBAi[0][0] * v[138] + QBAi[1][0] * v[139] + QBAi[2][0] * v[140];
	v[161] = QBAi[0][1] * v[138] + QBAi[1][1] * v[139] + QBAi[2][1] * v[140];
	v[163] = QBAi[0][0] * v[142] + QBAi[1][0] * v[144] + QBAi[2][0] * v[145];
	v[164] = QBAi[0][1] * v[142] + QBAi[1][1] * v[144] + QBAi[2][1] * v[145];
	v[166] = QBAi[0][0] * v[147] + QBAi[1][0] * v[149] + QBAi[2][0] * v[150];
	v[167] = QBAi[0][1] * v[147] + QBAi[1][1] * v[149] + QBAi[2][1] * v[150];
	v[175] = 0.5e0 - 0.5e0*cp[0];
	v[176] = 0.5e0*(1e0 + cp[0]);
	v[177] = 2e0 / (*eA);
	v[677] = -1e0 + v[177];
	v[224] = Power(v[225], v[177]) + Power(v[227], v[177]);
	v[228] = Power(v[224], -1e0 - 1e0 / v[177])*(Power(v[225], v[677])*v[266] * _copysign(1.e0, v[221])
		- v[221] * Power(v[227], v[677])*_copysign(1.e0, v[266]));
	v[178] = 1e0 / Power(v[224], 1 / v[177]);
	v[680] = v[178] * v[266];
	v[679] = v[178] * v[221];
	v[230] = (*bA)*(v[228] * v[266] + v[679]);
	v[229] = (*aA)*(v[221] * v[228] - v[680]);
	v[242] = v[175] * (v[157] * v[229] + v[158] * v[230]) + v[176] * (v[166] * v[229] + v[167] * v[230]);
	v[238] = v[175] * (v[154] * v[229] + v[155] * v[230]) + v[176] * (v[163] * v[229] + v[164] * v[230]);
	v[234] = v[175] * (v[151] * v[229] + v[152] * v[230]) + v[176] * (v[160] * v[229] + v[161] * v[230]);
	v[326] = 1e0 / sqrt((v[234] * v[234]) + (v[238] * v[238]) + (v[242] * v[242]));
	v[180] = (*aA)*v[679];
	v[182] = (*bA)*v[680];
	v[240] = dA[8] + v[166] * v[180] + v[167] * v[182] + xBAi[2];
	v[239] = dA[2] + v[157] * v[180] + v[158] * v[182] + xAAi[2];
	v[241] = -0.5e0*v[239] + 0.5e0*v[240];
	v[236] = dA[7] + v[163] * v[180] + v[164] * v[182] + xBAi[1];
	v[235] = dA[1] + v[154] * v[180] + v[155] * v[182] + xAAi[1];
	v[237] = -0.5e0*v[235] + 0.5e0*v[236];
	v[232] = dA[6] + v[160] * v[180] + v[161] * v[182] + xBAi[0];
	v[231] = dA[0] + v[151] * v[180] + v[152] * v[182] + xAAi[0];
	v[233] = -0.5e0*v[231] + 0.5e0*v[232];
	v[314] = 1e0 / sqrt((v[233] * v[233]) + (v[237] * v[237]) + (v[241] * v[241]));
	v[186] = dB[0] + xAi[0];
	v[251] = v[186] * v[243];
	v[187] = dB[1] + xAi[1];
	v[254] = v[187] * v[243];
	v[188] = dB[2] + xAi[2];
	v[257] = v[188] * v[243];
	v[189] = dB[3] + xBi[0];
	v[190] = dB[4] + xBi[1];
	v[191] = dB[5] + xBi[2];
	v[192] = dB[6] + xCi[0];
	v[193] = dB[7] + xCi[1];
	v[194] = dB[8] + xCi[2];
	v[195] = dB[9] + xDi[0];
	v[196] = dB[10] + xDi[1];
	v[197] = dB[11] + xDi[2];
	v[198] = dB[12] + xEi[0];
	v[199] = dB[13] + xEi[1];
	v[200] = dB[14] + xEi[2];
	v[201] = dB[15] + xFi[0];
	v[252] = v[192] * v[245] + (v[195] - v[198])*v[247] + v[201] * v[249] + v[251];
	v[250] = v[189] * v[244] + v[195] * v[246] + (v[198] - v[201])*v[248] + v[251];
	v[202] = dB[16] + xFi[1];
	v[255] = v[193] * v[245] + (v[196] - v[199])*v[247] + v[202] * v[249] + v[254];
	v[253] = v[190] * v[244] + v[196] * v[246] + (v[199] - v[202])*v[248] + v[254];
	v[203] = dB[17] + xFi[2];
	v[258] = v[194] * v[245] + (v[197] - v[200])*v[247] + v[203] * v[249] + v[257];
	v[340] = 1e0 / sqrt((v[252] * v[252]) + (v[255] * v[255]) + (v[258] * v[258]));
	v[256] = v[191] * v[244] + v[197] * v[246] + (v[200] - v[203])*v[248] + v[257];
	v[333] = 1e0 / sqrt((v[250] * v[250]) + (v[253] * v[253]) + (v[256] * v[256]));
	v[204] = v[212] + v[682] + v[683];
	v[213] = -cp[2] - cp[3] - v[211] - v[212];
	v[214] = 0.5e0 + v[212] + v[243];
	v[216] = v[211] + v[213] - v[215];
	v[259] = -(v[186] * v[204]) - v[195] * v[213] - v[198] * v[214] - v[201] * v[216] + v[175] * v[231] + v[176] * v[232]
		- v[189] * v[682] - v[192] * v[683];
	v[260] = -(v[187] * v[204]) - v[196] * v[213] - v[199] * v[214] - v[202] * v[216] + v[175] * v[235] + v[176] * v[236]
		- v[190] * v[682] - v[193] * v[683];
	v[261] = -(v[188] * v[204]) - v[197] * v[213] - v[200] * v[214] - v[203] * v[216] + v[175] * v[239] + v[176] * v[240]
		- v[191] * v[682] - v[194] * v[683];
	v[313] = v[233] * v[314];
	v[315] = v[237] * v[314];
	v[316] = v[241] * v[314];
	v[325] = v[234] * v[326];
	v[327] = v[238] * v[326];
	v[349] = -(v[315] * v[325]) + v[313] * v[327];
	v[328] = v[242] * v[326];
	v[347] = v[316] * v[325] - v[313] * v[328];
	v[332] = v[250] * v[333];
	v[334] = v[253] * v[333];
	v[335] = v[256] * v[333];
	v[339] = v[252] * v[340];
	v[341] = v[255] * v[340];
	v[356] = -(v[334] * v[339]) + v[332] * v[341];
	v[342] = v[258] * v[340];
	v[354] = v[335] * v[339] - v[332] * v[342];
	v[344] = -(v[316] * v[327]) + v[315] * v[328];
	v[351] = -(v[335] * v[341]) + v[334] * v[342];
	if ((*fixnormal)) {
		v[359] = 0.5e0*((-normalA[0] + normalB[0])*v[259] + (-normalA[1] + normalB[1])*v[260] + (-normalA[2]
			+ normalB[2])*v[261]);
	}
	else {
		v[359] = (0.5e0*(v[259] * v[351] + v[260] * v[354] + v[261] * v[356])) / sqrt((v[351] * v[351]) + (v[354] * v[354]) +
			(v[356] * v[356])) - (0.5e0*(v[259] * v[344] + v[260] * v[347] + v[261] * v[349])*((*normalintA) ? 1e0 : -1e0)) / sqrt
			((v[344] * v[344]) + (v[347] * v[347]) + (v[349] * v[349]));
	};
	(Ob) = v[359];
	

	return Ob;
}

//Calcula o Gradiente do gap
void FlexibleSECylinder_1_FlexibleTriangularSurface_2::GradientGap(Matrix& mc, Matrix& mGra, bool fixed_normals, Matrix& nA, Matrix& nB)
{
	double v[2000];		//variável temporária - AceGen
	double* cp = mc.getMatrix();
	EvaluateDOFsVariables();
	bool* fixnormal = &fixed_normals;
	double* normalA = nA.getMatrix();
	double* normalB = nB.getMatrix();
	double* Gra = mGra.getMatrix();
	 
	int i704, b358;
	v[360] = sin(cp[1]);
	v[321] = cos(cp[1]);
	v[267] = _copysign(1.e0, v[360]);
	v[268] = v[267] * v[321];
	v[227] = fabs(v[360]);
	v[269] = _copysign(1.e0, v[321]);
	v[270] = -(v[269] * v[360]);
	v[225] = fabs(v[321]);
	v[247] = -1e0 - cp[2];
	v[244] = 0.5e0 + cp[2];
	v[211] = Power(cp[2], 2);
	v[694] = (cp[2] + v[211]) / 2e0;
	v[248] = 1e0 + cp[3];
	v[246] = -1e0 - 2e0*cp[2] - cp[3];
	v[245] = 0.5e0 + cp[3];
	v[243] = 0.5e0 + cp[2] + cp[3];
	v[249] = -2e0*cp[3] + v[247];
	v[215] = Power(cp[3], 2);
	v[212] = cp[2] * cp[3];
	v[695] = (cp[3] + v[215]) / 2e0;
	i704 = ((*normalintA) ? 1 : -1);
	v[127] = Power(dA[3], 2);
	v[125] = 0.5e0*dA[3] * dA[4];
	v[120] = Power(dA[4], 2);
	v[132] = 0.5e0*dA[4] * dA[5];
	v[130] = 0.5e0*dA[3] * dA[5];
	v[121] = Power(dA[5], 2);
	v[675] = v[120] + v[121];
	v[143] = Power(dA[9], 2);
	v[141] = 0.5e0*dA[10] * dA[9];
	v[136] = Power(dA[10], 2);
	v[148] = 0.5e0*dA[10] * dA[11];
	v[146] = 0.5e0*dA[11] * dA[9];
	v[137] = Power(dA[11], 2);
	v[676] = v[136] + v[137];
	v[119] = 4e0 / (4e0 + v[127] + v[675]);
	v[122] = 1e0 - 0.5e0*v[119] * v[675];
	v[123] = v[119] * (-dA[5] + v[125]);
	v[124] = v[119] * (dA[4] + v[130]);
	v[126] = v[119] * (dA[5] + v[125]);
	v[128] = 1e0 - 0.5e0*v[119] * (v[121] + v[127]);
	v[129] = v[119] * (-dA[3] + v[132]);
	v[131] = v[119] * (-dA[4] + v[130]);
	v[133] = v[119] * (dA[3] + v[132]);
	v[134] = 1e0 - 0.5e0*v[119] * (v[120] + v[127]);
	v[135] = 4e0 / (4e0 + v[143] + v[676]);
	v[138] = 1e0 - 0.5e0*v[135] * v[676];
	v[139] = v[135] * (-dA[11] + v[141]);
	v[140] = v[135] * (dA[10] + v[146]);
	v[142] = v[135] * (dA[11] + v[141]);
	v[144] = 1e0 - 0.5e0*v[135] * (v[137] + v[143]);
	v[145] = v[135] * (-dA[9] + v[148]);
	v[147] = v[135] * (-dA[10] + v[146]);
	v[149] = v[135] * (dA[9] + v[148]);
	v[150] = 1e0 - 0.5e0*v[135] * (v[136] + v[143]);
	v[151] = QAAi[0][0] * v[122] + QAAi[1][0] * v[123] + QAAi[2][0] * v[124];
	v[152] = QAAi[0][1] * v[122] + QAAi[1][1] * v[123] + QAAi[2][1] * v[124];
	v[154] = QAAi[0][0] * v[126] + QAAi[1][0] * v[128] + QAAi[2][0] * v[129];
	v[155] = QAAi[0][1] * v[126] + QAAi[1][1] * v[128] + QAAi[2][1] * v[129];
	v[157] = QAAi[0][0] * v[131] + QAAi[1][0] * v[133] + QAAi[2][0] * v[134];
	v[158] = QAAi[0][1] * v[131] + QAAi[1][1] * v[133] + QAAi[2][1] * v[134];
	v[160] = QBAi[0][0] * v[138] + QBAi[1][0] * v[139] + QBAi[2][0] * v[140];
	v[161] = QBAi[0][1] * v[138] + QBAi[1][1] * v[139] + QBAi[2][1] * v[140];
	v[163] = QBAi[0][0] * v[142] + QBAi[1][0] * v[144] + QBAi[2][0] * v[145];
	v[164] = QBAi[0][1] * v[142] + QBAi[1][1] * v[144] + QBAi[2][1] * v[145];
	v[166] = QBAi[0][0] * v[147] + QBAi[1][0] * v[149] + QBAi[2][0] * v[150];
	v[167] = QBAi[0][1] * v[147] + QBAi[1][1] * v[149] + QBAi[2][1] * v[150];
	v[175] = 0.5e0 - 0.5e0*cp[0];
	v[176] = 0.5e0*(1e0 + cp[0]);
	v[177] = 2e0 / (*eA);
	v[677] = -2e0 + v[177];
	v[363] = -1e0 + v[177];
	v[275] = Power(v[227], v[363]);
	v[274] = Power(v[225], v[363]);
	v[272] = -1e0 - 1e0 / v[177];
	v[271] = v[177] * (v[270] * v[274] + v[268] * v[275]);
	v[224] = Power(v[225], v[177]) + Power(v[227], v[177]);
	v[273] = Power(v[224], v[272]);
	v[228] = -((v[271] * v[273]) / v[177]);
	v[679] = 2e0*v[228];
	v[178] = 1e0 / Power(v[224], 1 / v[177]);
	v[684] = v[178] * v[360];
	v[683] = v[178] * v[321];
	v[680] = -v[178] - (Power(v[224], -1e0 + v[272])*(v[271] * v[271])*v[272]) / v[177] + v[273] *
		(v[269] * v[274] * v[321] + v[267] * v[275] * v[360] + (-(Power(v[227], v[677])*(v[268] * v[268])) - Power(v[225]
			, v[677])*(v[270] * v[270]))*v[363]);
	v[281] = (*aA)*(-(v[360] * v[679]) + v[321] * v[680]);
	v[279] = (*bA)*(v[321] * v[679] + v[360] * v[680]);
	v[293] = v[175] * (v[152] * v[279] + v[151] * v[281]) + v[176] * (v[161] * v[279] + v[160] * v[281]);
	v[289] = v[175] * (v[155] * v[279] + v[154] * v[281]) + v[176] * (v[164] * v[279] + v[163] * v[281]);
	v[285] = v[175] * (v[158] * v[279] + v[157] * v[281]) + v[176] * (v[167] * v[279] + v[166] * v[281]);
	v[230] = (*bA)*(v[228] * v[360] + v[683]);
	v[229] = (*aA)*(v[228] * v[321] - v[684]);
	v[291] = v[160] * v[229] + v[161] * v[230];
	v[290] = v[151] * v[229] + v[152] * v[230];
	v[292] = -0.5e0*v[290] + 0.5e0*v[291];
	v[287] = v[163] * v[229] + v[164] * v[230];
	v[286] = v[154] * v[229] + v[155] * v[230];
	v[288] = -0.5e0*v[286] + 0.5e0*v[287];
	v[283] = v[166] * v[229] + v[167] * v[230];
	v[282] = v[157] * v[229] + v[158] * v[230];
	v[284] = -0.5e0*v[282] + 0.5e0*v[283];
	v[242] = v[175] * v[282] + v[176] * v[283];
	v[238] = v[175] * v[286] + v[176] * v[287];
	v[234] = v[175] * v[290] + v[176] * v[291];
	v[386] = (v[234] * v[234]) + (v[238] * v[238]) + (v[242] * v[242]);
	v[682] = 1e0 / sqrt(v[386]);
	v[681] = -(v[682] / v[386]);
	v[389] = (v[242] * v[285] + v[238] * v[289] + v[234] * v[293])*v[681];
	v[387] = (v[242] * v[284] + v[238] * v[288] + v[234] * v[292])*v[681];
	v[425] = v[242] * v[389] + v[285] * v[682];
	v[424] = v[242] * v[387] + v[284] * v[682];
	v[421] = v[238] * v[389] + v[289] * v[682];
	v[420] = v[238] * v[387] + v[288] * v[682];
	v[419] = v[234] * v[389] + v[293] * v[682];
	v[418] = v[234] * v[387] + v[292] * v[682];
	v[180] = (*aA)*v[683];
	v[182] = (*bA)*v[684];
	v[240] = dA[8] + v[166] * v[180] + v[167] * v[182] + xBAi[2];
	v[239] = dA[2] + v[157] * v[180] + v[158] * v[182] + xAAi[2];
	v[241] = -0.5e0*v[239] + 0.5e0*v[240];
	v[236] = dA[7] + v[163] * v[180] + v[164] * v[182] + xBAi[1];
	v[235] = dA[1] + v[154] * v[180] + v[155] * v[182] + xAAi[1];
	v[237] = -0.5e0*v[235] + 0.5e0*v[236];
	v[232] = dA[6] + v[160] * v[180] + v[161] * v[182] + xBAi[0];
	v[231] = dA[0] + v[151] * v[180] + v[152] * v[182] + xAAi[0];
	v[233] = -0.5e0*v[231] + 0.5e0*v[232];
	v[312] = (v[233] * v[233]) + (v[237] * v[237]) + (v[241] * v[241]);
	v[686] = 1e0 / sqrt(v[312]);
	v[392] = (-1e0*(v[241] * v[284] + v[237] * v[288] + v[233] * v[292])*v[686]) / v[312];
	v[417] = v[241] * v[392] + v[284] * v[686];
	v[416] = v[237] * v[392] + v[288] * v[686];
	v[415] = v[233] * v[392] + v[292] * v[686];
	v[186] = dB[0] + xAi[0];
	v[251] = v[186] * v[243];
	v[187] = dB[1] + xAi[1];
	v[254] = v[187] * v[243];
	v[188] = dB[2] + xAi[2];
	v[257] = v[188] * v[243];
	v[189] = dB[3] + xBi[0];
	v[190] = dB[4] + xBi[1];
	v[191] = dB[5] + xBi[2];
	v[192] = dB[6] + xCi[0];
	v[193] = dB[7] + xCi[1];
	v[194] = dB[8] + xCi[2];
	v[195] = dB[9] + xDi[0];
	v[296] = v[186] + v[189] - 2e0*v[195];
	v[196] = dB[10] + xDi[1];
	v[299] = v[187] + v[190] - 2e0*v[196];
	v[197] = dB[11] + xDi[2];
	v[302] = v[188] + v[191] - 2e0*v[197];
	v[198] = dB[12] + xEi[0];
	v[199] = dB[13] + xEi[1];
	v[200] = dB[14] + xEi[2];
	v[201] = dB[15] + xFi[0];
	v[687] = v[198] - v[201];
	v[295] = v[186] + v[192] - 2e0*v[201];
	v[294] = v[186] - v[195] + v[687];
	v[252] = v[192] * v[245] + (v[195] - v[198])*v[247] + v[201] * v[249] + v[251];
	v[250] = v[189] * v[244] + v[195] * v[246] + v[251] + v[248] * v[687];
	v[202] = dB[16] + xFi[1];
	v[688] = v[199] - v[202];
	v[298] = v[187] + v[193] - 2e0*v[202];
	v[297] = v[187] - v[196] + v[688];
	v[255] = v[193] * v[245] + (v[196] - v[199])*v[247] + v[202] * v[249] + v[254];
	v[253] = v[190] * v[244] + v[196] * v[246] + v[254] + v[248] * v[688];
	v[203] = dB[17] + xFi[2];
	v[691] = v[200] - v[203];
	v[301] = v[188] + v[194] - 2e0*v[203];
	v[300] = v[188] - v[197] + v[691];
	v[258] = v[194] * v[245] + (v[197] - v[200])*v[247] + v[203] * v[249] + v[257];
	v[404] = (v[252] * v[252]) + (v[255] * v[255]) + (v[258] * v[258]);
	v[690] = 1e0 / sqrt(v[404]);
	v[689] = -(v[690] / v[404]);
	v[407] = (v[252] * v[295] + v[255] * v[298] + v[258] * v[301])*v[689];
	v[405] = (v[252] * v[294] + v[255] * v[297] + v[258] * v[300])*v[689];
	v[441] = v[258] * v[407] + v[301] * v[690];
	v[440] = v[258] * v[405] + v[300] * v[690];
	v[437] = v[255] * v[407] + v[298] * v[690];
	v[436] = v[255] * v[405] + v[297] * v[690];
	v[435] = v[252] * v[407] + v[295] * v[690];
	v[434] = v[252] * v[405] + v[294] * v[690];
	v[256] = v[191] * v[244] + v[197] * v[246] + v[257] + v[248] * v[691];
	v[411] = (v[250] * v[250]) + (v[253] * v[253]) + (v[256] * v[256]);
	v[693] = 1e0 / sqrt(v[411]);
	v[692] = -(v[693] / v[411]);
	v[414] = (v[250] * v[294] + v[253] * v[297] + v[256] * v[300])*v[692];
	v[412] = (v[250] * v[296] + v[253] * v[299] + v[256] * v[302])*v[692];
	v[433] = v[256] * v[414] + v[300] * v[693];
	v[432] = v[256] * v[412] + v[302] * v[693];
	v[431] = v[253] * v[414] + v[297] * v[693];
	v[430] = v[253] * v[412] + v[299] * v[693];
	v[429] = v[250] * v[414] + v[294] * v[693];
	v[428] = v[250] * v[412] + v[296] * v[693];
	v[204] = v[212] + v[694] + v[695];
	v[213] = -cp[2] - cp[3] - v[211] - v[212];
	v[214] = 0.5e0 + v[212] + v[243];
	v[216] = v[211] + v[213] - v[215];
	v[259] = -(v[186] * v[204]) - v[195] * v[213] - v[198] * v[214] - v[201] * v[216] + v[175] * v[231] + v[176] * v[232]
		- v[189] * v[694] - v[192] * v[695];
	v[260] = -(v[187] * v[204]) - v[196] * v[213] - v[199] * v[214] - v[202] * v[216] + v[175] * v[235] + v[176] * v[236]
		- v[190] * v[694] - v[193] * v[695];
	v[261] = -(v[188] * v[204]) - v[197] * v[213] - v[200] * v[214] - v[203] * v[216] + v[175] * v[239] + v[176] * v[240]
		- v[191] * v[694] - v[194] * v[695];
	v[313] = v[233] * v[686];
	v[315] = v[237] * v[686];
	v[422] = -(v[315] * v[418]) + v[313] * v[420];
	v[316] = v[241] * v[686];
	v[444] = -(v[316] * v[420]) + v[315] * v[424];
	v[426] = v[316] * v[418] - v[313] * v[424];
	v[325] = v[234] * v[682];
	v[327] = v[238] * v[682];
	v[423] = v[327] * v[415] - v[325] * v[416] - v[315] * v[419] + v[313] * v[421];
	v[349] = -(v[315] * v[325]) + v[313] * v[327];
	v[328] = v[242] * v[682];
	v[445] = v[328] * v[416] - v[327] * v[417] - v[316] * v[421] + v[315] * v[425];
	v[427] = -(v[328] * v[415]) + v[325] * v[417] + v[316] * v[419] - v[313] * v[425];
	v[347] = v[316] * v[325] - v[313] * v[328];
	v[332] = v[250] * v[693];
	v[334] = v[253] * v[693];
	v[335] = v[256] * v[693];
	v[339] = v[252] * v[690];
	v[341] = v[255] * v[690];
	v[439] = v[341] * v[429] - v[339] * v[431] - v[334] * v[435] + v[332] * v[437];
	v[438] = v[341] * v[428] - v[339] * v[430] - v[334] * v[434] + v[332] * v[436];
	v[356] = -(v[334] * v[339]) + v[332] * v[341];
	v[342] = v[258] * v[690];
	v[458] = v[342] * v[431] - v[341] * v[433] - v[335] * v[437] + v[334] * v[441];
	v[457] = v[342] * v[430] - v[341] * v[432] - v[335] * v[436] + v[334] * v[440];
	v[443] = -(v[342] * v[429]) + v[339] * v[433] + v[335] * v[435] - v[332] * v[441];
	v[442] = -(v[342] * v[428]) + v[339] * v[432] + v[335] * v[434] - v[332] * v[440];
	v[354] = v[335] * v[339] - v[332] * v[342];
	v[344] = -(v[316] * v[327]) + v[315] * v[328];
	v[447] = (v[344] * v[344]) + (v[347] * v[347]) + (v[349] * v[349]);
	v[697] = 1e0 / sqrt(v[447]);
	v[696] = -(v[697] / v[447]);
	v[450] = (v[349] * v[423] + v[347] * v[427] + v[344] * v[445])*v[696];
	v[448] = (v[349] * v[422] + v[347] * v[426] + v[344] * v[444])*v[696];
	v[698] = i704 * v[697];
	v[348] = v[347] * v[698];
	v[350] = v[349] * v[698];
	v[351] = -(v[335] * v[341]) + v[334] * v[342];
	v[460] = (v[351] * v[351]) + (v[354] * v[354]) + (v[356] * v[356]);
	v[700] = 1e0 / sqrt(v[460]);
	v[699] = -(v[700] / v[460]);
	v[463] = (v[356] * v[439] + v[354] * v[443] + v[351] * v[458])*v[699];
	v[461] = (v[356] * v[438] + v[354] * v[442] + v[351] * v[457])*v[699];
	v[355] = v[354] * v[700];
	v[357] = v[356] * v[700];
	if ((*fixnormal)) {
		v[703] = -normalA[2] + normalB[2];
		v[702] = -normalA[1] + normalB[1];
		v[701] = -normalA[0] + normalB[0];
		v[470] = 0.5e0*(v[233] * v[701] + v[237] * v[702] + v[241] * v[703]);
		v[471] = 0.5e0*(v[234] * v[701] + v[238] * v[702] + v[242] * v[703]);
		v[472] = 0.5e0*(-(v[250] * v[701]) - v[253] * v[702] - v[256] * v[703]);
		v[473] = 0.5e0*(-(v[252] * v[701]) - v[255] * v[702] - v[258] * v[703]);
	}
	else {
		v[707] = v[350] - v[357];
		v[706] = v[348] - v[355];
		v[705] = -(v[344] * v[698]) + v[351] * v[700];
		v[470] = 0.5e0*(-(v[237] * v[348]) - v[241] * v[350] + v[237] * v[355] + v[241] * v[357] - i704 * (v[261] *
			(v[349] * v[448] + v[422] * v[697]) + v[260] * (v[347] * v[448] + v[426] * v[697]) + v[259] * (v[344] * v[448]
				+ v[444] * v[697])) + v[233] * v[705]);
		v[471] = 0.5e0*(-(v[238] * v[348]) - v[242] * v[350] + v[238] * v[355] + v[242] * v[357] - i704 * (v[261] *
			(v[349] * v[450] + v[423] * v[697]) + v[260] * (v[347] * v[450] + v[427] * v[697]) + v[259] * (v[344] * v[450]
				+ v[445] * v[697])) + v[234] * v[705]);
		v[472] = 0.5e0*(v[261] * (v[356] * v[461] + v[438] * v[700]) + v[260] * (v[354] * v[461] + v[442] * v[700]) + v[259] *
			(v[351] * v[461] + v[457] * v[700]) - v[250] * v[705] + v[253] * v[706] + v[256] * v[707]);
		v[473] = 0.5e0*(v[261] * (v[356] * v[463] + v[439] * v[700]) + v[260] * (v[354] * v[463] + v[443] * v[700]) + v[259] *
			(v[351] * v[463] + v[458] * v[700]) - v[252] * v[705] + v[255] * v[706] + v[258] * v[707]);
	};
	Gra[0] = v[470];
	Gra[1] = v[471];
	Gra[2] = v[472];
	Gra[3] = v[473];
	
}

//Calcula a Hessiana do gap
void FlexibleSECylinder_1_FlexibleTriangularSurface_2::HessianGap(Matrix& mc, Matrix& mHes, bool fixed_normals, Matrix& nA, Matrix& nB)
{
	double v[2000];		//variável temporária - AceGen
	double* cp = mc.getMatrix();
	EvaluateDOFsVariables();
	bool* fixnormal = &fixed_normals;
	double* normalA = nA.getMatrix();
	double* normalB = nB.getMatrix();
	double Hes[4][4];

	int i702, b358;
	v[360] = sin(cp[1]);
	v[321] = cos(cp[1]);
	v[267] = _copysign(1.e0, v[360]);
	v[475] = v[267] * v[321];
	v[361] = -(v[267] * v[360]);
	v[227] = fabs(v[360]);
	v[269] = _copysign(1.e0, v[321]);
	v[476] = -(v[269] * v[360]);
	v[362] = -(v[269] * v[321]);
	v[225] = fabs(v[321]);
	v[247] = -1e0 - cp[2];
	v[244] = 0.5e0 + cp[2];
	v[211] = Power(cp[2], 2);
	v[698] = (cp[2] + v[211]) / 2e0;
	v[248] = 1e0 + cp[3];
	v[246] = -1e0 - 2e0*cp[2] - cp[3];
	v[245] = 0.5e0 + cp[3];
	v[243] = 0.5e0 + cp[2] + cp[3];
	v[249] = -2e0*cp[3] + v[247];
	v[215] = Power(cp[3], 2);
	v[212] = cp[2] * cp[3];
	v[699] = (cp[3] + v[215]) / 2e0;
	i702 = ((*normalintA) ? 1 : -1);
	v[127] = Power(dA[3], 2);
	v[125] = 0.5e0*dA[3] * dA[4];
	v[120] = Power(dA[4], 2);
	v[132] = 0.5e0*dA[4] * dA[5];
	v[130] = 0.5e0*dA[3] * dA[5];
	v[121] = Power(dA[5], 2);
	v[675] = v[120] + v[121];
	v[143] = Power(dA[9], 2);
	v[141] = 0.5e0*dA[10] * dA[9];
	v[136] = Power(dA[10], 2);
	v[148] = 0.5e0*dA[10] * dA[11];
	v[146] = 0.5e0*dA[11] * dA[9];
	v[137] = Power(dA[11], 2);
	v[676] = v[136] + v[137];
	v[119] = 4e0 / (4e0 + v[127] + v[675]);
	v[122] = 1e0 - 0.5e0*v[119] * v[675];
	v[123] = v[119] * (-dA[5] + v[125]);
	v[124] = v[119] * (dA[4] + v[130]);
	v[126] = v[119] * (dA[5] + v[125]);
	v[128] = 1e0 - 0.5e0*v[119] * (v[121] + v[127]);
	v[129] = v[119] * (-dA[3] + v[132]);
	v[131] = v[119] * (-dA[4] + v[130]);
	v[133] = v[119] * (dA[3] + v[132]);
	v[134] = 1e0 - 0.5e0*v[119] * (v[120] + v[127]);
	v[135] = 4e0 / (4e0 + v[143] + v[676]);
	v[138] = 1e0 - 0.5e0*v[135] * v[676];
	v[139] = v[135] * (-dA[11] + v[141]);
	v[140] = v[135] * (dA[10] + v[146]);
	v[142] = v[135] * (dA[11] + v[141]);
	v[144] = 1e0 - 0.5e0*v[135] * (v[137] + v[143]);
	v[145] = v[135] * (-dA[9] + v[148]);
	v[147] = v[135] * (-dA[10] + v[146]);
	v[149] = v[135] * (dA[9] + v[148]);
	v[150] = 1e0 - 0.5e0*v[135] * (v[136] + v[143]);
	v[151] = QAAi[0][0] * v[122] + QAAi[1][0] * v[123] + QAAi[2][0] * v[124];
	v[152] = QAAi[0][1] * v[122] + QAAi[1][1] * v[123] + QAAi[2][1] * v[124];
	v[154] = QAAi[0][0] * v[126] + QAAi[1][0] * v[128] + QAAi[2][0] * v[129];
	v[155] = QAAi[0][1] * v[126] + QAAi[1][1] * v[128] + QAAi[2][1] * v[129];
	v[157] = QAAi[0][0] * v[131] + QAAi[1][0] * v[133] + QAAi[2][0] * v[134];
	v[158] = QAAi[0][1] * v[131] + QAAi[1][1] * v[133] + QAAi[2][1] * v[134];
	v[160] = QBAi[0][0] * v[138] + QBAi[1][0] * v[139] + QBAi[2][0] * v[140];
	v[161] = QBAi[0][1] * v[138] + QBAi[1][1] * v[139] + QBAi[2][1] * v[140];
	v[163] = QBAi[0][0] * v[142] + QBAi[1][0] * v[144] + QBAi[2][0] * v[145];
	v[164] = QBAi[0][1] * v[142] + QBAi[1][1] * v[144] + QBAi[2][1] * v[145];
	v[166] = QBAi[0][0] * v[147] + QBAi[1][0] * v[149] + QBAi[2][0] * v[150];
	v[167] = QBAi[0][1] * v[147] + QBAi[1][1] * v[149] + QBAi[2][1] * v[150];
	v[175] = 0.5e0 - 0.5e0*cp[0];
	v[176] = 0.5e0*(1e0 + cp[0]);
	v[177] = 2e0 / (*eA);
	v[479] = -3e0 + v[177];
	v[477] = -2e0 + v[177];
	v[363] = -1e0 + v[177];
	v[367] = Power(v[225], v[477])*v[363] * v[476];
	v[365] = Power(v[227], v[477])*v[363] * v[475];
	v[275] = Power(v[227], v[363]);
	v[274] = Power(v[225], v[363]);
	v[368] = v[177] * (v[275] * v[361] + v[274] * v[362] + v[365] * v[475] + v[367] * v[476]);
	v[272] = -1e0 - 1e0 / v[177];
	v[486] = -1e0 + v[272];
	v[271] = v[177] * (v[275] * v[475] + v[274] * v[476]);
	v[677] = v[271] / v[177];
	v[488] = -(((v[271] * v[271])*v[272]) / v[177]);
	v[224] = Power(v[225], v[177]) + Power(v[227], v[177]);
	v[369] = Power(v[224], v[486]);
	v[273] = Power(v[224], v[272]);
	v[678] = v[273] * v[677];
	v[489] = -(v[273] * (3e0*v[361] * v[365] + 3e0*v[362] * v[367] + v[363] * (Power(v[227], v[479])*Power(v[475], 3)
		+ Power(v[225], v[479])*Power(v[476], 3))*v[477])) + Power(v[224], -2e0 + v[272])*v[271] * v[486] * v[488]
		- 3e0*v[272] * v[368] * v[369] * v[677] + v[678];
	v[277] = -((v[273] * v[368]) / v[177]) + v[369] * v[488];
	v[680] = 3e0*v[277];
	v[682] = -(v[321] * v[678]);
	v[681] = -(v[360] * v[678]);
	v[493] = (*bA)*v[681];
	v[490] = (*aA)*v[682];
	v[178] = 1e0 / Power(v[224], 1 / v[177]);
	v[687] = (*bA)*v[178];
	v[686] = (*aA)*v[178];
	v[683] = -v[178] + v[277];
	v[494] = v[321] * v[687];
	v[495] = -3e0*v[493] - v[494] + (*bA)*(v[360] * v[489] + v[321] * v[680]);
	v[491] = -(v[360] * v[686]);
	v[492] = -3e0*v[490] - v[491] + (*aA)*(v[321] * v[489] - v[360] * v[680]);
	v[503] = v[175] * (v[151] * v[492] + v[152] * v[495]) + v[176] * (v[160] * v[492] + v[161] * v[495]);
	v[505] = v[175] * (v[154] * v[492] + v[155] * v[495]) + v[176] * (v[163] * v[492] + v[164] * v[495]);
	v[507] = v[175] * (v[157] * v[492] + v[158] * v[495]) + v[176] * (v[166] * v[492] + v[167] * v[495]);
	v[281] = (*aA)*(-2e0*v[681] + v[321] * v[683]);
	v[279] = (*bA)*(2e0*v[682] + v[360] * v[683]);
	v[378] = v[158] * v[279] + v[157] * v[281];
	v[377] = v[167] * v[279] + v[166] * v[281];
	v[506] = 0.5e0*v[377] - 0.5e0*v[378];
	v[376] = v[155] * v[279] + v[154] * v[281];
	v[375] = v[164] * v[279] + v[163] * v[281];
	v[504] = 0.5e0*v[375] - 0.5e0*v[376];
	v[374] = v[152] * v[279] + v[151] * v[281];
	v[373] = v[161] * v[279] + v[160] * v[281];
	v[502] = 0.5e0*v[373] - 0.5e0*v[374];
	v[293] = v[176] * v[373] + v[175] * v[374];
	v[289] = v[176] * v[375] + v[175] * v[376];
	v[285] = v[176] * v[377] + v[175] * v[378];
	v[230] = v[493] + v[494];
	v[229] = v[490] + v[491];
	v[291] = v[160] * v[229] + v[161] * v[230];
	v[290] = v[151] * v[229] + v[152] * v[230];
	v[292] = -0.5e0*v[290] + 0.5e0*v[291];
	v[287] = v[163] * v[229] + v[164] * v[230];
	v[286] = v[154] * v[229] + v[155] * v[230];
	v[288] = -0.5e0*v[286] + 0.5e0*v[287];
	v[283] = v[166] * v[229] + v[167] * v[230];
	v[282] = v[157] * v[229] + v[158] * v[230];
	v[284] = -0.5e0*v[282] + 0.5e0*v[283];
	v[690] = (v[284] * v[284]) + (v[288] * v[288]) + (v[292] * v[292]);
	v[242] = v[175] * v[282] + v[176] * v[283];
	v[238] = v[175] * v[286] + v[176] * v[287];
	v[234] = v[175] * v[290] + v[176] * v[291];
	v[518] = 2e0*(v[242] * v[285] + v[238] * v[289] + v[234] * v[293]);
	v[517] = 2e0*(v[242] * v[284] + v[238] * v[288] + v[234] * v[292]);
	v[386] = (v[234] * v[234]) + (v[238] * v[238]) + (v[242] * v[242]);
	v[684] = 1e0 / sqrt(v[386]);
	v[685] = -v[684] / (2e0*v[386]);
	v[519] = v[517] * v[685];
	v[522] = (0.75e0*v[684]) / Power(v[386], 2);
	v[521] = v[517] * v[522];
	v[526] = v[517] * v[521] + 2e0*v[685] * v[690];
	v[525] = (v[518] * v[518])*v[522] + 2e0*((v[285] * v[285]) + (v[289] * v[289]) + (v[293] * v[293]) + v[234] * v[503]
		+ v[238] * v[505] + v[242] * v[507])*v[685];
	v[524] = v[518] * v[521] + 2e0*(v[284] * v[285] + v[288] * v[289] + v[292] * v[293] + v[234] * v[502] + v[238] * v[504]
		+ v[242] * v[506])*v[685];
	v[389] = v[518] * v[685];
	v[535] = 2e0*v[292] * v[519] + v[234] * v[526];
	v[532] = 2e0*v[288] * v[519] + v[238] * v[526];
	v[529] = 2e0*v[284] * v[519] + v[242] * v[526];
	v[534] = 2e0*v[293] * v[389] + v[234] * v[525] + v[503] * v[684];
	v[533] = v[292] * v[389] + v[293] * v[519] + v[234] * v[524] + v[502] * v[684];
	v[531] = 2e0*v[289] * v[389] + v[238] * v[525] + v[505] * v[684];
	v[530] = v[288] * v[389] + v[289] * v[519] + v[238] * v[524] + v[504] * v[684];
	v[528] = 2e0*v[285] * v[389] + v[242] * v[525] + v[507] * v[684];
	v[527] = v[284] * v[389] + v[285] * v[519] + v[242] * v[524] + v[506] * v[684];
	v[425] = v[242] * v[389] + v[285] * v[684];
	v[424] = v[242] * v[519] + v[284] * v[684];
	v[421] = v[238] * v[389] + v[289] * v[684];
	v[420] = v[238] * v[519] + v[288] * v[684];
	v[419] = v[234] * v[389] + v[293] * v[684];
	v[418] = v[234] * v[519] + v[292] * v[684];
	v[180] = v[321] * v[686];
	v[182] = v[360] * v[687];
	v[240] = dA[8] + v[166] * v[180] + v[167] * v[182] + xBAi[2];
	v[239] = dA[2] + v[157] * v[180] + v[158] * v[182] + xAAi[2];
	v[241] = -0.5e0*v[239] + 0.5e0*v[240];
	v[236] = dA[7] + v[163] * v[180] + v[164] * v[182] + xBAi[1];
	v[235] = dA[1] + v[154] * v[180] + v[155] * v[182] + xAAi[1];
	v[237] = -0.5e0*v[235] + 0.5e0*v[236];
	v[232] = dA[6] + v[160] * v[180] + v[161] * v[182] + xBAi[0];
	v[231] = dA[0] + v[151] * v[180] + v[152] * v[182] + xAAi[0];
	v[233] = -0.5e0*v[231] + 0.5e0*v[232];
	v[390] = 2e0*(v[241] * v[284] + v[237] * v[288] + v[233] * v[292]);
	v[312] = (v[233] * v[233]) + (v[237] * v[237]) + (v[241] * v[241]);
	v[689] = 1e0 / sqrt(v[312]);
	v[541] = -v[689] / (2e0*v[312]);
	v[542] = (0.75e0*(v[390] * v[390])*v[689]) / Power(v[312], 2) + 2e0*v[541] * (v[233] * v[502] + v[237] * v[504]
		+ v[241] * v[506] + v[690]);
	v[392] = v[390] * v[541];
	v[545] = 2e0*v[292] * v[392] + v[233] * v[542] + v[502] * v[689];
	v[544] = 2e0*v[288] * v[392] + v[237] * v[542] + v[504] * v[689];
	v[543] = 2e0*v[284] * v[392] + v[241] * v[542] + v[506] * v[689];
	v[417] = v[241] * v[392] + v[284] * v[689];
	v[416] = v[237] * v[392] + v[288] * v[689];
	v[415] = v[233] * v[392] + v[292] * v[689];
	v[186] = dB[0] + xAi[0];
	v[251] = v[186] * v[243];
	v[187] = dB[1] + xAi[1];
	v[254] = v[187] * v[243];
	v[188] = dB[2] + xAi[2];
	v[257] = v[188] * v[243];
	v[189] = dB[3] + xBi[0];
	v[190] = dB[4] + xBi[1];
	v[191] = dB[5] + xBi[2];
	v[192] = dB[6] + xCi[0];
	v[193] = dB[7] + xCi[1];
	v[194] = dB[8] + xCi[2];
	v[195] = dB[9] + xDi[0];
	v[296] = v[186] + v[189] - 2e0*v[195];
	v[196] = dB[10] + xDi[1];
	v[299] = v[187] + v[190] - 2e0*v[196];
	v[197] = dB[11] + xDi[2];
	v[302] = v[188] + v[191] - 2e0*v[197];
	v[198] = dB[12] + xEi[0];
	v[199] = dB[13] + xEi[1];
	v[200] = dB[14] + xEi[2];
	v[201] = dB[15] + xFi[0];
	v[691] = v[198] - v[201];
	v[295] = v[186] + v[192] - 2e0*v[201];
	v[294] = v[186] - v[195] + v[691];
	v[252] = v[192] * v[245] + (v[195] - v[198])*v[247] + v[201] * v[249] + v[251];
	v[250] = v[189] * v[244] + v[195] * v[246] + v[251] + v[248] * v[691];
	v[202] = dB[16] + xFi[1];
	v[692] = v[199] - v[202];
	v[298] = v[187] + v[193] - 2e0*v[202];
	v[297] = v[187] - v[196] + v[692];
	v[255] = v[193] * v[245] + (v[196] - v[199])*v[247] + v[202] * v[249] + v[254];
	v[253] = v[190] * v[244] + v[196] * v[246] + v[254] + v[248] * v[692];
	v[203] = dB[17] + xFi[2];
	v[695] = v[200] - v[203];
	v[301] = v[188] + v[194] - 2e0*v[203];
	v[300] = v[188] - v[197] + v[695];
	v[588] = 2e0*((v[294] * v[294]) + (v[297] * v[297]) + (v[300] * v[300]));
	v[258] = v[194] * v[245] + (v[197] - v[200])*v[247] + v[203] * v[249] + v[257];
	v[560] = 2e0*(v[252] * v[295] + v[255] * v[298] + v[258] * v[301]);
	v[559] = 2e0*(v[252] * v[294] + v[255] * v[297] + v[258] * v[300]);
	v[404] = (v[252] * v[252]) + (v[255] * v[255]) + (v[258] * v[258]);
	v[693] = 1e0 / sqrt(v[404]);
	v[694] = -v[693] / (2e0*v[404]);
	v[561] = v[559] * v[694];
	v[564] = (0.75e0*v[693]) / Power(v[404], 2);
	v[563] = v[559] * v[564];
	v[568] = v[559] * v[563] + v[588] * v[694];
	v[567] = (v[560] * v[560])*v[564] + 2e0*((v[295] * v[295]) + (v[298] * v[298]) + (v[301] * v[301]))*v[694];
	v[566] = v[560] * v[563] + 2e0*(v[294] * v[295] + v[297] * v[298] + v[300] * v[301])*v[694];
	v[407] = v[560] * v[694];
	v[576] = 2e0*v[295] * v[407] + v[252] * v[567];
	v[575] = v[294] * v[407] + v[295] * v[561] + v[252] * v[566];
	v[573] = 2e0*v[298] * v[407] + v[255] * v[567];
	v[572] = v[297] * v[407] + v[298] * v[561] + v[255] * v[566];
	v[570] = 2e0*v[301] * v[407] + v[258] * v[567];
	v[569] = v[300] * v[407] + v[301] * v[561] + v[258] * v[566];
	v[577] = 2e0*v[294] * v[561] + v[252] * v[568];
	v[574] = 2e0*v[297] * v[561] + v[255] * v[568];
	v[571] = 2e0*v[300] * v[561] + v[258] * v[568];
	v[441] = v[258] * v[407] + v[301] * v[693];
	v[440] = v[258] * v[561] + v[300] * v[693];
	v[437] = v[255] * v[407] + v[298] * v[693];
	v[436] = v[255] * v[561] + v[297] * v[693];
	v[435] = v[252] * v[407] + v[295] * v[693];
	v[434] = v[252] * v[561] + v[294] * v[693];
	v[256] = v[191] * v[244] + v[197] * v[246] + v[257] + v[248] * v[695];
	v[581] = 2e0*(v[250] * v[294] + v[253] * v[297] + v[256] * v[300]);
	v[580] = 2e0*(v[250] * v[296] + v[253] * v[299] + v[256] * v[302]);
	v[411] = (v[250] * v[250]) + (v[253] * v[253]) + (v[256] * v[256]);
	v[696] = 1e0 / sqrt(v[411]);
	v[697] = -v[696] / (2e0*v[411]);
	v[582] = v[580] * v[697];
	v[585] = (0.75e0*v[696]) / Power(v[411], 2);
	v[584] = v[580] * v[585];
	v[590] = v[580] * v[584] + 2e0*((v[296] * v[296]) + (v[299] * v[299]) + (v[302] * v[302]))*v[697];
	v[589] = (v[581] * v[581])*v[585] + v[588] * v[697];
	v[587] = v[581] * v[584] + 2e0*(v[294] * v[296] + v[297] * v[299] + v[300] * v[302])*v[697];
	v[414] = v[581] * v[697];
	v[598] = 2e0*v[294] * v[414] + v[250] * v[589];
	v[597] = v[296] * v[414] + v[294] * v[582] + v[250] * v[587];
	v[595] = 2e0*v[297] * v[414] + v[253] * v[589];
	v[594] = v[299] * v[414] + v[297] * v[582] + v[253] * v[587];
	v[592] = 2e0*v[300] * v[414] + v[256] * v[589];
	v[591] = v[302] * v[414] + v[300] * v[582] + v[256] * v[587];
	v[599] = 2e0*v[296] * v[582] + v[250] * v[590];
	v[596] = 2e0*v[299] * v[582] + v[253] * v[590];
	v[593] = 2e0*v[302] * v[582] + v[256] * v[590];
	v[433] = v[256] * v[414] + v[300] * v[696];
	v[432] = v[256] * v[582] + v[302] * v[696];
	v[431] = v[253] * v[414] + v[297] * v[696];
	v[430] = v[253] * v[582] + v[299] * v[696];
	v[429] = v[250] * v[414] + v[294] * v[696];
	v[428] = v[250] * v[582] + v[296] * v[696];
	v[204] = v[212] + v[698] + v[699];
	v[213] = -cp[2] - cp[3] - v[211] - v[212];
	v[214] = 0.5e0 + v[212] + v[243];
	v[216] = v[211] + v[213] - v[215];
	v[259] = -(v[186] * v[204]) - v[195] * v[213] - v[198] * v[214] - v[201] * v[216] + v[175] * v[231] + v[176] * v[232]
		- v[189] * v[698] - v[192] * v[699];
	v[260] = -(v[187] * v[204]) - v[196] * v[213] - v[199] * v[214] - v[202] * v[216] + v[175] * v[235] + v[176] * v[236]
		- v[190] * v[698] - v[193] * v[699];
	v[261] = -(v[188] * v[204]) - v[197] * v[213] - v[200] * v[214] - v[203] * v[216] + v[175] * v[239] + v[176] * v[240]
		- v[191] * v[698] - v[194] * v[699];
	v[313] = v[233] * v[689];
	v[315] = v[237] * v[689];
	v[601] = -(v[416] * v[418]) + v[415] * v[420] + v[313] * v[530] - v[315] * v[533];
	v[600] = v[313] * v[532] - v[315] * v[535];
	v[422] = -(v[315] * v[418]) + v[313] * v[420];
	v[316] = v[241] * v[689];
	v[605] = v[417] * v[418] - v[415] * v[424] - v[313] * v[527] + v[316] * v[533];
	v[604] = -(v[313] * v[529]) + v[316] * v[535];
	v[603] = -(v[417] * v[420]) + v[416] * v[424] + v[315] * v[527] - v[316] * v[530];
	v[602] = v[315] * v[529] - v[316] * v[532];
	v[444] = -(v[316] * v[420]) + v[315] * v[424];
	v[426] = v[316] * v[418] - v[313] * v[424];
	v[325] = v[234] * v[684];
	v[327] = v[238] * v[684];
	v[606] = -2e0*v[416] * v[419] + 2e0*v[415] * v[421] + v[313] * v[531] - v[315] * v[534] - v[325] * v[544]
		+ v[327] * v[545];
	v[423] = v[327] * v[415] - v[325] * v[416] - v[315] * v[419] + v[313] * v[421];
	v[349] = -(v[315] * v[325]) + v[313] * v[327];
	v[328] = v[242] * v[684];
	v[608] = 2e0*v[417] * v[419] - 2e0*v[415] * v[425] - v[313] * v[528] + v[316] * v[534] + v[325] * v[543] - v[328] * v[545];
	v[607] = -2e0*v[417] * v[421] + 2e0*v[416] * v[425] + v[315] * v[528] - v[316] * v[531] - v[327] * v[543]
		+ v[328] * v[544];
	v[445] = v[328] * v[416] - v[327] * v[417] - v[316] * v[421] + v[315] * v[425];
	v[427] = -(v[328] * v[415]) + v[325] * v[417] + v[316] * v[419] - v[313] * v[425];
	v[347] = v[316] * v[325] - v[313] * v[328];
	v[332] = v[250] * v[696];
	v[334] = v[253] * v[696];
	v[335] = v[256] * v[696];
	v[339] = v[252] * v[693];
	v[341] = v[255] * v[693];
	v[611] = -2e0*v[430] * v[434] + 2e0*v[428] * v[436] + v[332] * v[574] - v[334] * v[577] - v[339] * v[596]
		+ v[341] * v[599];
	v[610] = -2e0*v[431] * v[435] + 2e0*v[429] * v[437] + v[332] * v[573] - v[334] * v[576] - v[339] * v[595]
		+ v[341] * v[598];
	v[609] = -(v[431] * v[434]) - v[430] * v[435] + v[429] * v[436] + v[428] * v[437] + v[332] * v[572] - v[334] * v[575]
		- v[339] * v[594] + v[341] * v[597];
	v[439] = v[341] * v[429] - v[339] * v[431] - v[334] * v[435] + v[332] * v[437];
	v[438] = v[341] * v[428] - v[339] * v[430] - v[334] * v[434] + v[332] * v[436];
	v[356] = -(v[334] * v[339]) + v[332] * v[341];
	v[342] = v[258] * v[693];
	v[617] = 2e0*v[432] * v[434] - 2e0*v[428] * v[440] - v[332] * v[571] + v[335] * v[577] + v[339] * v[593] - v[342] * v[599];
	v[616] = 2e0*v[433] * v[435] - 2e0*v[429] * v[441] - v[332] * v[570] + v[335] * v[576] + v[339] * v[592] - v[342] * v[598];
	v[615] = v[433] * v[434] + v[432] * v[435] - v[429] * v[440] - v[428] * v[441] - v[332] * v[569] + v[335] * v[575]
		+ v[339] * v[591] - v[342] * v[597];
	v[614] = -2e0*v[432] * v[436] + 2e0*v[430] * v[440] + v[334] * v[571] - v[335] * v[574] - v[341] * v[593]
		+ v[342] * v[596];
	v[613] = -2e0*v[433] * v[437] + 2e0*v[431] * v[441] + v[334] * v[570] - v[335] * v[573] - v[341] * v[592]
		+ v[342] * v[595];
	v[612] = -(v[433] * v[436]) - v[432] * v[437] + v[431] * v[440] + v[430] * v[441] + v[334] * v[569] - v[335] * v[572]
		- v[341] * v[591] + v[342] * v[594];
	v[458] = v[342] * v[431] - v[341] * v[433] - v[335] * v[437] + v[334] * v[441];
	v[457] = v[342] * v[430] - v[341] * v[432] - v[335] * v[436] + v[334] * v[440];
	v[443] = -(v[342] * v[429]) + v[339] * v[433] + v[335] * v[435] - v[332] * v[441];
	v[442] = -(v[342] * v[428]) + v[339] * v[432] + v[335] * v[434] - v[332] * v[440];
	v[354] = v[335] * v[339] - v[332] * v[342];
	v[344] = -(v[316] * v[327]) + v[315] * v[328];
	v[619] = 2e0*(v[349] * v[423] + v[347] * v[427] + v[344] * v[445]);
	v[618] = 2e0*(v[349] * v[422] + v[347] * v[426] + v[344] * v[444]);
	v[447] = (v[344] * v[344]) + (v[347] * v[347]) + (v[349] * v[349]);
	v[700] = 1e0 / sqrt(v[447]);
	v[701] = -v[700] / (2e0*v[447]);
	v[620] = v[618] * v[701];
	v[703] = i702 * v[700];
	v[623] = (0.75e0*v[700]) / Power(v[447], 2);
	v[622] = v[618] * v[623];
	v[627] = v[618] * v[622] + 2e0*((v[422] * v[422]) + (v[426] * v[426]) + (v[444] * v[444]) + v[349] * v[600]
		+ v[344] * v[602] + v[347] * v[604])*v[701];
	v[626] = (v[619] * v[619])*v[623] + 2e0*((v[423] * v[423]) + (v[427] * v[427]) + (v[445] * v[445]) + v[349] * v[606]
		+ v[344] * v[607] + v[347] * v[608])*v[701];
	v[625] = v[619] * v[622] + 2e0*(v[422] * v[423] + v[426] * v[427] + v[444] * v[445] + v[349] * v[601] + v[344] * v[603]
		+ v[347] * v[605])*v[701];
	v[450] = v[619] * v[701];
	v[632] = 2e0*i702*v[450];
	v[634] = 2e0*i702*v[620];
	v[456] = i702 * (v[349] * v[450] + v[423] * v[700]);
	v[455] = i702 * (v[349] * v[620] + v[422] * v[700]);
	v[454] = i702 * (v[347] * v[450] + v[427] * v[700]);
	v[453] = i702 * (v[347] * v[620] + v[426] * v[700]);
	v[452] = i702 * (v[344] * v[450] + v[445] * v[700]);
	v[451] = i702 * (v[344] * v[620] + v[444] * v[700]);
	v[348] = v[347] * v[703];
	v[350] = v[349] * v[703];
	v[351] = -(v[335] * v[341]) + v[334] * v[342];
	v[640] = 2e0*(v[356] * v[439] + v[354] * v[443] + v[351] * v[458]);
	v[639] = 2e0*(v[356] * v[438] + v[354] * v[442] + v[351] * v[457]);
	v[460] = (v[351] * v[351]) + (v[354] * v[354]) + (v[356] * v[356]);
	v[704] = 1e0 / sqrt(v[460]);
	v[705] = -v[704] / (2e0*v[460]);
	v[641] = v[639] * v[705];
	v[644] = (0.75e0*v[704]) / Power(v[460], 2);
	v[643] = v[639] * v[644];
	v[648] = v[639] * v[643] + 2e0*((v[438] * v[438]) + (v[442] * v[442]) + (v[457] * v[457]) + v[356] * v[611]
		+ v[351] * v[614] + v[354] * v[617])*v[705];
	v[647] = (v[640] * v[640])*v[644] + 2e0*((v[439] * v[439]) + (v[443] * v[443]) + (v[458] * v[458]) + v[356] * v[610]
		+ v[351] * v[613] + v[354] * v[616])*v[705];
	v[646] = v[640] * v[643] + 2e0*(v[438] * v[439] + v[442] * v[443] + v[457] * v[458] + v[356] * v[609] + v[351] * v[612]
		+ v[354] * v[615])*v[705];
	v[463] = v[640] * v[705];
	v[469] = v[356] * v[463] + v[439] * v[704];
	v[468] = v[356] * v[641] + v[438] * v[704];
	v[467] = v[354] * v[463] + v[443] * v[704];
	v[466] = v[354] * v[641] + v[442] * v[704];
	v[465] = v[351] * v[463] + v[458] * v[704];
	v[464] = v[351] * v[641] + v[457] * v[704];
	v[355] = v[354] * v[704];
	v[357] = v[356] * v[704];
	if ((*fixnormal)) {
		v[708] = -normalA[0] + normalB[0];
		v[707] = -normalA[1] + normalB[1];
		v[706] = -normalA[2] + normalB[2];
		v[658] = 0e0;
		v[659] = 0.5e0*(v[284] * v[706] + v[288] * v[707] + v[292] * v[708]);
		v[660] = 0e0;
		v[661] = 0e0;
		v[662] = v[659];
		v[663] = 0.5e0*(v[285] * v[706] + v[289] * v[707] + v[293] * v[708]);
		v[664] = 0e0;
		v[665] = 0e0;
		v[666] = 0e0;
		v[667] = 0e0;
		v[668] = 0.5e0*(-(v[302] * v[706]) - v[299] * v[707] - v[296] * v[708]);
		v[669] = 0.5e0*(-(v[300] * v[706]) - v[297] * v[707] - v[294] * v[708]);
		v[670] = 0e0;
		v[671] = 0e0;
		v[672] = v[669];
		v[673] = 0.5e0*(-(v[301] * v[706]) - v[298] * v[707] - v[295] * v[708]);
	}
	else {
		v[719] = 2e0*v[463];
		v[718] = v[350] - v[357];
		v[717] = v[348] - v[355];
		v[716] = 2e0*v[641];
		v[715] = v[344] * v[703] - v[351] * v[704];
		v[714] = -0.25e0*v[259];
		v[713] = 0.5e0*v[284];
		v[712] = 0.5e0*v[288];
		v[711] = -0.5e0*v[634];
		v[710] = -0.5e0*v[627];
		v[709] = -0.5e0*v[700];
		v[658] = -1e0*v[233] * v[451] - 1e0*v[237] * v[453] - 1e0*v[241] * v[455] - 0.5e0*v[260] * v[426] * v[634] + i702 * (
			-0.5e0*v[260] * (v[347] * v[627] + v[604] * v[700]) + v[259] * (v[602] * v[709] + v[344] * v[710]) + v[261] *
			(v[600] * v[709] + v[349] * v[710])) + v[261] * v[422] * v[711] + v[259] * v[444] * v[711];
		v[659] = -0.5e0*v[234] * v[451] - 0.5e0*v[233] * v[452] - 0.5e0*v[238] * v[453] - 0.5e0*v[237] * v[454]
			- 0.5e0*v[242] * v[455] - 0.5e0*v[241] * v[456] - 0.5e0*i702*(v[261] * (v[422] * v[450] + v[423] * v[620]
				+ v[349] * v[625] + v[601] * v[700]) + v[259] * (v[344] * v[625] + v[603] * v[700]) + v[260] * (v[426] * v[450]
					+ v[427] * v[620] + v[347] * v[625] + v[605] * v[700])) - v[348] * v[712] + v[355] * v[712] - v[350] * v[713]
			+ v[357] * v[713] + v[444] * v[632] * v[714] + v[445] * v[634] * v[714] - 0.5e0*v[292] * v[715];
		v[660] = 0.5e0*(v[250] * v[451] + v[253] * v[453] + v[256] * v[455] + v[233] * v[464] + v[237] * v[466] + v[241] * v[468]
			);
		v[661] = 0.5e0*(v[252] * v[451] + v[255] * v[453] + v[258] * v[455] + v[233] * v[465] + v[237] * v[467] + v[241] * v[469]
			);
		v[662] = v[659];
		v[663] = 0.5e0*(-(v[289] * v[348]) - v[285] * v[350] + v[289] * v[355] + v[285] * v[357] - 2e0*v[234] * v[452]
			- 2e0*v[238] * v[454] - 2e0*v[242] * v[456] - v[261] * v[423] * v[632] - v[260] * v[427] * v[632]
			- v[259] * v[445] * v[632] - i702 * (v[261] * (v[349] * v[626] + v[606] * v[700]) + v[259] * (v[344] * v[626]
				+ v[607] * v[700]) + v[260] * (v[347] * v[626] + v[608] * v[700])) - v[293] * v[715]);
		v[664] = 0.5e0*(v[250] * v[452] + v[253] * v[454] + v[256] * v[456] + v[234] * v[464] + v[238] * v[466] + v[242] * v[468]
			);
		v[665] = 0.5e0*(v[252] * v[452] + v[255] * v[454] + v[258] * v[456] + v[234] * v[465] + v[238] * v[467] + v[242] * v[469]
			);
		v[666] = v[660];
		v[667] = v[664];
		v[668] = 0.5e0*(-2e0*v[250] * v[464] - 2e0*v[253] * v[466] - 2e0*v[256] * v[468] + v[260] * (2e0*v[442] * v[641]
			+ v[354] * v[648] + v[617] * v[704]) + v[296] * v[715] + v[261] * (v[356] * v[648] + v[611] * v[704] + v[438] * v[716])
			+ v[259] * (v[351] * v[648] + v[614] * v[704] + v[457] * v[716]) + v[299] * v[717] + v[302] * v[718]);
		v[669] = 0.5e0*(-(v[252] * v[464]) - v[250] * v[465] - v[255] * v[466] - v[253] * v[467] - v[258] * v[468]
			- v[256] * v[469] + v[261] * (v[438] * v[463] + v[439] * v[641] + v[356] * v[646] + v[609] * v[704]) + v[259] *
			(v[457] * v[463] + v[458] * v[641] + v[351] * v[646] + v[612] * v[704]) + v[260] * (v[442] * v[463] + v[443] * v[641]
				+ v[354] * v[646] + v[615] * v[704]) + v[294] * v[715] + v[297] * v[717] + v[300] * v[718]);
		v[670] = v[661];
		v[671] = v[665];
		v[672] = v[669];
		v[673] = 0.5e0*(-2e0*v[252] * v[465] - 2e0*v[255] * v[467] - 2e0*v[258] * v[469] + v[260] * (2e0*v[443] * v[463]
			+ v[354] * v[647] + v[616] * v[704]) + v[295] * v[715] + v[298] * v[717] + v[301] * v[718] + v[261] * (v[356] * v[647]
				+ v[610] * v[704] + v[439] * v[719]) + v[259] * (v[351] * v[647] + v[613] * v[704] + v[458] * v[719]));
	};
	Hes[0][0] = v[658];
	Hes[0][1] = v[659];
	Hes[0][2] = v[660];
	Hes[0][3] = v[661];
	Hes[1][0] = v[662];
	Hes[1][1] = v[663];
	Hes[1][2] = v[664];
	Hes[1][3] = v[665];
	Hes[2][0] = v[666];
	Hes[2][1] = v[667];
	Hes[2][2] = v[668];
	Hes[2][3] = v[669];
	Hes[3][0] = v[670];
	Hes[3][1] = v[671];
	Hes[3][2] = v[672];
	Hes[3][3] = v[673];
	
	for (int i = 0; i < 4; i++)
		for (int j = 0; j < 4; j++)
			mHes(i, j) = Hes[i][j];

}


